#ifndef MGP_PLOT_H
#define MGP_PLOT_H

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include <assert.h>

typedef int8_t   mgp_i8;
typedef int32_t  mgp_i32;
typedef int64_t  mgp_i64;
typedef uint8_t  mgp_u8;
typedef uint8_t  mgp_u16;
typedef uint32_t mgp_u32;
typedef uint64_t mgp_u64;

typedef mgp_i8  mgp_b8;
typedef mgp_i32 mgp_b32;

typedef float  mgp_f32;
typedef double mgp_f64;

static_assert(sizeof(mgp_f32) == 4, "f32 size");
static_assert(sizeof(mgp_f64) == 8, "f64 size");

typedef struct {
    mgp_u64 size;
    mgp_u8* str;
} mgp_string8;

#define MGP_STR8(s) ((mgp_string8){ sizeof(s)-1, (mgp_u8*)s })

typedef struct { mgp_f32 x, y;       } mgp_vec2f;
typedef struct { mgp_f32 x, y, z;    } mgp_vec3f;
typedef struct { mgp_f32 x, y, z, w; } mgp_vec4f;

typedef struct { mgp_i32 x, y, w, h; } mgp_recti;
typedef struct { mgp_f32 x, y, w, h; } mgp_rectf;

typedef union {
    struct {
        mgp_vec2f p0;
        mgp_vec2f p1;
        mgp_vec2f p2;
        mgp_vec2f p3;
    };
    mgp_vec2f p[4];
} mgp_quadf;

typedef struct {
    mgp_f32 size;
    mgp_vec2f* data;
} mgp_points_cmd;

typedef struct {
    enum {
        MGP_LINE_SOLID,
        MGP_LINE_DASHED
    } type;

    mgp_f32 width;

    mgp_vec2f* data;
} mgp_lines_cmd;

typedef struct {
    mgp_rectf* data;
} mgp_rects_cmd;

typedef struct {
    mgp_quadf* data;
} mgp_quads_cmd;


typedef struct {
    mgp_vec4f color;
    mgp_vec4f* colors;

    mgp_string8 label;

    mgp_u32 size;

    enum {
        MGP_DRAW_POINTS,
        MGP_DRAW_LINES,
        MGP_DRAW_RECTS,
        MGP_DRAW_QUADS,
    } type;

    union {
        mgp_points_cmd points;
        mgp_lines_cmd lines;
        mgp_rects_cmd rects;
        mgp_quads_cmd quads;
    };
} mgp_draw_cmd;

typedef struct {
    // Background of main area above buttons
    mgp_vec4f background;
    // Background of graph area
    mgp_vec4f graph_background;
    // 1 pixel outline of graph area
    mgp_vec4f graph_outline;
    // Title and axes text
    mgp_vec4f axes_text;

    // Background of legend box
    mgp_vec4f legend_background;
    // Outline of legend box
    mgp_vec4f legend_outline;
    // Color of legend text
    mgp_vec4f legend_text;

    // Background color of bottom strip (where buttons are)
    mgp_vec4f bottom_strip;
    // Color of button icons
    mgp_vec4f button_foreground;
    // Background color of button icons
    mgp_vec4f button_background;
    // Background color of hovered button
    mgp_vec4f button_hovered;
    // Background color of toggled button
    mgp_vec4f button_toggled;

    // Color of zoom rect
    mgp_vec4f zoom_rect;

    // Default colors for draw commands
    mgp_vec4f default_draw[8];
} mgp_color_scheme;

typedef struct {
    mgp_f32 left, right;
    mgp_f32 bottom, top;
} mgp_view;

typedef enum {
    MGP_ALIGN_RIGHT = 0,
    MGP_ALIGN_LEFT,
} mgp_legend_align;

void mgp_init();
void mgp_cmd_push(const mgp_draw_cmd* cmd);
void mgp_plot_show();

void mgp_enable_legend(mgp_legend_align align);

// Color values of (vec4f){ 0 } are set to the default color scheme color
void mgp_set_color_scheme(const mgp_color_scheme* colors);
void mgp_set_view(mgp_view new_view);
void mgp_set_win_size(mgp_u32 width, mgp_u32 height);
void mgp_set_title(mgp_string8 title);

// Set color to (vec4f){ 0 } for default
// colors can be NULL
void mgp_points_ex(mgp_u32 num_points, mgp_f32* xs, mgp_f32* ys, mgp_f32 size, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label);
void mgp_lines_ex(mgp_u32 num_points, mgp_f32* xs, mgp_f32* ys, mgp_f32 width, mgp_u32 type, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label);
void mgp_rects_ex(mgp_u32 num_rects, mgp_rectf* rects, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label);
void mgp_quads_ex(mgp_u32 num_quads, mgp_quadf* quads, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label);

#define mgp_points(num_points, xs, ys) mgp_points_ex(num_points, xs, ys, 3.0f, (mgp_vec4f){ 0 }, (void*)0, (mgp_string8){ 0 })
#define mgp_lines(num_points, xs, ys) mgp_lines_ex(num_points, xs, ys, 2.0f, mgp_LINE_SOLID, (mgp_vec4f){ 0 }, (void*)0, (mgp_string8){ 0 })
#define mgp_rects(num_rects, rects) mgp_rects_ex(num_rects, rects, (mgp_vec4f){ 0 }, (void*)0, (mgp_string8){ 0 })
#define mgp_quads(num_quads, quads) mgp_quads_ex(num_quads, quads, (mgp_vec4f){ 0 }, (void*)0, (mgp_string8){ 0 })

#endif // MGP_PLOT_H


#ifdef MG_PLOT_IMPL

#ifndef MG_ARENA_H
#   error "mg_arena.h required by mg_plot.h"
#endif

#include <math.h>
#include <stdio.h>
#include <string.h>

/*
=============================
=============================
          HEADERS
=============================
=============================
*/


#if defined(_WIN32)
#   define PLATFORM_WIN32
#elif defined(__linux__)
#   define PLATFORM_LINUX
#endif

#if defined(PLATFORM_WIN32)
#    define UNICODE
#    define WIN32_LEAN_AND_MEAN
#    include <Windows.h>
#    include <GL/gl.h>
#elif defined(PLATFORM_LINUX)
#    include <GL/gl.h>
#    include <unistd.h>
#endif

#define UNUSED(x) (void)(x)

#define MIN(a, b) (((a) < (b)) ? (a) : (b))
#define MAX(a, b) (((a) > (b)) ? (a) : (b))
#define ABS(n) ((n) < 0 ? -(n) : (n))
#define SIGN(n) ((n) < 0 ? -1 : 1)

#define SLL_PUSH_BACK(f, l, n) ((f) == 0 ? \
    ((f) = (l) = (n)) :                    \
    ((l)->next = (n), (l) = (n)),          \
    ((n)->next = 0))                       \

mgp_string8 _str8_from_range(mgp_u8* start, mgp_u8* end);
mgp_string8 _str8_from_cstr(mgp_u8* cstr);
mgp_string8 _str8_copy(mg_arena* arena, mgp_string8 str);

mgp_vec2f _vec2f_add(mgp_vec2f a, mgp_vec2f b);
mgp_vec2f _vec2f_sub(mgp_vec2f a, mgp_vec2f b);
mgp_vec2f _vec2f_scl(mgp_vec2f v, mgp_f32 s);
mgp_f32   _vec2f_dot(mgp_vec2f a, mgp_vec2f b);
mgp_vec2f _vec2f_nrm(mgp_vec2f v);
mgp_f32   _vec2f_len(mgp_vec2f v);

mgp_b32 _vec2f_in_rectf(mgp_rectf r, mgp_vec2f p);

typedef struct _gfx_win_backend _gfx_win_backend;

typedef struct {
    mgp_string8 title;
    mgp_u32 width, height;

    mgp_b32 should_close;

    mgp_vec2f mouse_pos;
    mgp_b8 mouse_buttons[5];
    mgp_b8 prev_mouse_buttons[5];

    _gfx_win_backend* backend;
} gfx_window;

gfx_window* gfx_win_create(mg_arena* arena, mgp_u32 width, mgp_u32 height, mgp_string8 title);
void gfx_win_destroy(gfx_window* win);

void gfx_win_process_events(gfx_window* win);

void gfx_win_make_current(gfx_window* win);
void gfx_win_swap_buffers(gfx_window* win);

#define GFX_IS_MOUSE_DOWN(win, mb) ( win->mouse_buttons[mb])
#define GFX_IS_MOUSE_UP(win, mb)   (!win->mouse_buttons[mb])
#define GFX_IS_MOUSE_JUST_DOWN(win, mb) (win->mouse_buttons[mb] && !win->prev_mouse_buttons[mb])
#define GFX_IS_MOUSE_JUST_UP(win, mb) (!win->mouse_buttons[mb] && win->prev_mouse_buttons[mb])

typedef enum {
    GFX_MB_LEFT,
    GFX_MB_MIDDLE,
    GFX_MB_RIGHT 
} gfx_mouse_button;

#define _BASE_OPENGL_FUNCS \
    X(void, glBindBuffer, (GLenum target, GLuint buffer)) \
    X(void, glBindFramebuffer, (GLenum target, GLuint framebuffer)) \
    X(void, glBufferData, (GLenum target, GLsizeiptr size, const void *data, GLenum usage)) \
    X(void, glBufferSubData, (GLenum target, GLintptr offset, GLsizeiptr size, const void *data)) \
    X(GLenum, glCheckFramebufferStatus, (GLenum target)) \
    X(void, glCompileShader, (GLuint shader)) \
    X(GLuint, glCreateProgram, (void)) \
    X(GLuint, glCreateShader, (GLenum type)) \
    X(void, glDeleteBuffers, (GLsizei n, const GLuint *buffers)) \
    X(void, glDeleteFramebuffers, (GLsizei n, const GLuint *framebuffers)) \
    X(void, glDeleteProgram, (GLuint program)) \
    X(void, glDeleteShader, (GLuint shader)) \
    X(void, glDisableVertexAttribArray, (GLuint index)) \
    X(void, glEnableVertexAttribArray, (GLuint index)) \
    X(void, glFramebufferTexture2D, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)) \
    X(void, glGenBuffers, (GLsizei n, GLuint *buffers)) \
    X(void, glGenFramebuffers, (GLsizei n, GLuint *framebuffers)) \
    X(void, glGetProgramiv, (GLuint program, GLenum pname, GLint *params)) \
    X(void, glGetProgramInfoLog, (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)) \
    X(void, glGetShaderiv, (GLuint shader, GLenum pname, GLint *params)) \
    X(void, glGetShaderInfoLog, (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)) \
    X(GLint, glGetUniformLocation, (GLuint program, const GLchar *name)) \
    X(void, glLinkProgram, (GLuint program)) \
    X(void, glAttachShader, (GLuint program, GLuint shader)) \
    X(void, glShaderSource, (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length)) \
    X(void, glUniform1i, (GLint location, GLint v0)) \
    X(void, glUniform2f, (GLint location, GLfloat v0, GLfloat v1)) \
    X(void, glUniform4f, (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)) \
    X(void, glUniformMatrix4fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)) \
    X(void, glUseProgram, (GLuint program)) \
    X(void, glVertexAttribPointer, (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer)) \
    X(void, glBindVertexArray, (GLuint array)) \
    X(void, glDeleteVertexArrays, (GLsizei n, const GLuint *arrays)) \
    X(void, glGenVertexArrays, (GLsizei n, GLuint *arrays)) \
    X(void, glDrawArraysInstanced, (GLenum mode, GLint first, GLsizei count, GLsizei instancecount)) \
    X(void, glVertexAttribDivisor, (GLuint index, GLuint divisor)) 

#ifndef __linux__
#    define _OPENGL_FUNCS \
    _BASE_OPENGL_FUNCS \
    X(void, glActiveTexture, (GLenum texture))
#else
#    define _OPENGL_FUNCS _BASE_OPENGL_FUNCS
#endif

typedef mgp_f32 GLfloat;
typedef int GLint;
typedef intptr_t GLintptr;
typedef unsigned int GLenum;
typedef mgp_i64 GLsizeiptr;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef char GLchar;
typedef unsigned char GLboolean;

#ifdef PLATFORM_WIN32
#   define OPENGL_CALLSTYLE __stdcall
#else
#   define OPENGL_CALLSTYLE
#endif

#define X(ret, name, args) typedef ret (OPENGL_CALLSTYLE* gl_##name##_func)args; extern gl_##name##_func name;
    _OPENGL_FUNCS
#undef X

#define GL_TEXTURE_MIN_FILTER             0x2801
#define GL_STATIC_DRAW                    0x88E4
#define GL_R8                             0x8229
#define GL_ELEMENT_ARRAY_BUFFER           0x8893
#define GL_FRAMEBUFFER_COMPLETE           0x8CD5
#define GL_SCISSOR_TEST                   0x0C11
#define GL_UNSIGNED_INT                   0x1405
#define GL_ARRAY_BUFFER                   0x8892
#define GL_UNSIGNED_BYTE                  0x1401
#define GL_RGBA                           0x1908
#define GL_BLEND                          0x0BE2
#define GL_COLOR_BUFFER_BIT               0x00004000
#define GL_LINEAR                         0x2601
#define GL_UNPACK_ALIGNMENT               0x0CF5
#define GL_ONE_MINUS_SRC_ALPHA            0x0303
#define GL_FALSE                          0
#define GL_NEAREST                        0x2600
#define GL_TRIANGLES                      0x0004
#define GL_FLOAT                          0x1406
#define GL_SRC_ALPHA                      0x0302
#define GL_RGBA8                          0x8058
#define GL_TEXTURE_MAG_FILTER             0x2800
#define GL_TEXTURE_2D                     0x0DE1
#define GL_COLOR_ATTACHMENT0              0x8CE0
#define GL_FRAMEBUFFER                    0x8D40
#define GL_TEXTURE0                       0x84C0
#define GL_STREAM_DRAW                    0x88E0
#define GL_RED                            0x1903
#define GL_FRAGMENT_SHADER                0x8B30
#define GL_VERTEX_SHADER                  0x8B31
#define GL_COMPILE_STATUS                 0x8B81
#define GL_LINK_STATUS                    0x8B82

mgp_u32 glh_create_shader(const char* vertex_source, const char* fragment_source);
mgp_u32 glh_create_buffer(mgp_u32 buffer_type, mgp_u64 size, void* data, mgp_u32 draw_type);

typedef struct {
    mgp_rectf rect;
    mgp_f32 xoffset;
    mgp_f32 yoffset;
    mgp_f32 xadvance;
} _font_glyph_data;

static const mgp_u32 _font_img_width;
static const mgp_u32 _font_img_height;
static const mgp_u8 _font_img[49588];

static const mgp_f32 _font_orig_size;
static const mgp_f32 _font_line_height;
static const _font_glyph_data _font_glyphs_data[95];

#ifdef INCLUDE_STB_IMAGE_WRITE_H
#   define _HAS_STBI
#endif

/*
=============================
=============================
          PLOTTING
=============================
=============================
*/

typedef struct _mgp_draw_cmd_node {
    mgp_draw_cmd cmd;
    struct _mgp_draw_cmd_node* next;
} _mgp_draw_cmd_node;

typedef struct {
    mgp_u32 size;
    _mgp_draw_cmd_node* first;
    _mgp_draw_cmd_node* last;
} _mgp_draw_cmd_list;

static mg_arena* _mgp_arena = NULL;
static _mgp_draw_cmd_list _mgp_draw_cmds = { 0 };
static mgp_u32 _mgp_default_win_width = 800;
static mgp_u32 _mgp_default_win_height = 600;
static mgp_u32 _mgp_win_width = 800;
static mgp_u32 _mgp_win_height = 600;

static mgp_b32 _mgp_enable_legend = false;
static mgp_legend_align _mgp_legend_align = MGP_ALIGN_RIGHT;

static mgp_color_scheme _mgp_default_colors = {
    .background = (mgp_vec4f){ 0.15f, 0.15f, 0.15f, 1.0f },
    .graph_background = (mgp_vec4f){ 0.25f, 0.25f, 0.25f, 1.0f },
    .graph_outline = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },
    .axes_text = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },

    .legend_background = (mgp_vec4f){ 0.5f, 0.5f, 0.5f, 1.0f },
    .legend_outline = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },
    .legend_text = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },

    .bottom_strip = (mgp_vec4f){ 0.67f, 0.67f, 0.67f, 1.0f },
    .button_foreground = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },
    .button_background = (mgp_vec4f){ 0.0f, 0.0f, 0.0f, 0.0f },
    .button_hovered = (mgp_vec4f){ 0.0f, 0.0f, 0.0f, 0.5f },
    .button_toggled = (mgp_vec4f){ 0.0f, 0.0f, 0.0f, 0.2f },

    .zoom_rect = (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 1.0f },

    .default_draw = {
        (mgp_vec4f){ 0.0f, 0.5f, 1.0f, 1.0f },
        (mgp_vec4f){ 1.0f, 0.0f, 0.0f, 1.0f },
        (mgp_vec4f){ 0.0f, 1.0f, 0.0f, 1.0f },
        (mgp_vec4f){ 1.0f, 0.0f, 1.0f, 1.0f },
        (mgp_vec4f){ 0.0f, 1.0f, 1.0f, 1.0f },
        (mgp_vec4f){ 1.0f, 1.0f, 0.0f, 1.0f },
        (mgp_vec4f){ 1.0f, 0.5f, 0.5f, 1.0f },
        (mgp_vec4f){ 0.5f, 0.5f, 1.0f, 1.0f },
    }
};
static mgp_color_scheme _mgp_colors = { 0 };
static mgp_u32 _mgp_draw_col_index = 0;

static mgp_view _mgp_view = { 0 };
static mgp_string8 _mgp_title = { 0 };


void mgp_init() {
    if (_mgp_arena == NULL) {
        mga_desc desc = {
            .desired_max_size = MGA_MiB(4),
            .desired_block_size = MGA_KiB(64)
        };
        _mgp_arena = mga_create(&desc);
    }

    _mgp_colors = _mgp_default_colors;
}
void mgp_cmd_push(const mgp_draw_cmd* cmd) {
    _mgp_draw_cmd_node* node = MGA_PUSH_ZERO_STRUCT(_mgp_arena, _mgp_draw_cmd_node);

    memcpy(&node->cmd, cmd, sizeof(mgp_draw_cmd));

    if (cmd->colors != NULL) {
        node->cmd.colors = MGA_PUSH_ARRAY(_mgp_arena, mgp_vec4f, cmd->size);
        memcpy(node->cmd.colors, cmd->colors, sizeof(mgp_vec4f) * cmd->size);
    }

    if (cmd->label.size != 0) {
        node->cmd.label = _str8_copy(_mgp_arena, cmd->label);
    }

    mgp_vec4f col = node->cmd.color;
    if (node->cmd.colors == NULL && (col.x == 0.0f && col.y == 0.0f  && col.z == 0.0f  && col.w == 0.0f)) {
        node->cmd.color = _mgp_colors.default_draw[_mgp_draw_col_index++];
        _mgp_draw_col_index %= sizeof(_mgp_colors.default_draw) / sizeof(_mgp_colors.default_draw[0]);
    }

    switch(node->cmd.type) {
        case MGP_DRAW_POINTS: {
            node->cmd.points.data = MGA_PUSH_ARRAY(_mgp_arena, mgp_vec2f, cmd->size);
            memcpy(node->cmd.points.data, cmd->points.data, sizeof(mgp_vec2f) * cmd->size);
        } break;
        case MGP_DRAW_LINES: {
            node->cmd.lines.data = MGA_PUSH_ARRAY(_mgp_arena, mgp_vec2f, cmd->size);
            memcpy(node->cmd.lines.data, cmd->lines.data, sizeof(mgp_vec2f) * cmd->size);
        } break;
        case MGP_DRAW_RECTS: {
            node->cmd.rects.data = MGA_PUSH_ARRAY(_mgp_arena, mgp_rectf, cmd->size);
            memcpy(node->cmd.rects.data, cmd->rects.data, sizeof(mgp_rectf) * cmd->size);
        } break;
        case MGP_DRAW_QUADS: {
            node->cmd.quads.data = MGA_PUSH_ARRAY(_mgp_arena, mgp_quadf, cmd->size);
            memcpy(node->cmd.quads.data, cmd->quads.data, sizeof(mgp_quadf) * cmd->size);
        } break;
        
        // TODO: Error handling
        default: break;
    }

    _mgp_draw_cmds.size++;
    SLL_PUSH_BACK(_mgp_draw_cmds.first, _mgp_draw_cmds.last, node);
}
// mgp_plot_show() is below

void mgp_enable_legend(mgp_legend_align align) {
    _mgp_enable_legend = true;
    _mgp_legend_align = align;
}

#define _TRY_COL(new, orig) if (new.x != 0.0f || new.y != 0.0f || new.z != 0.0f || new.w != 0.0f) { orig = new; }
void mgp_set_color_scheme(const mgp_color_scheme* colors) {
    _TRY_COL(colors->background, _mgp_colors.background);
    _TRY_COL(colors->graph_background, _mgp_colors.graph_background);
    _TRY_COL(colors->graph_outline, _mgp_colors.graph_outline);
    _TRY_COL(colors->axes_text, _mgp_colors.axes_text);
    
    _TRY_COL(colors->bottom_strip, _mgp_colors.bottom_strip);
    _TRY_COL(colors->button_foreground, _mgp_colors.button_foreground);
    _TRY_COL(colors->button_background, _mgp_colors.button_background);
    _TRY_COL(colors->button_hovered, _mgp_colors.button_hovered);
    _TRY_COL(colors->button_toggled, _mgp_colors.button_toggled);
    
    _TRY_COL(colors->zoom_rect, _mgp_colors.zoom_rect);

    for (mgp_u32 i = 0; i < 8; i++) {
        _TRY_COL(colors->default_draw[i], _mgp_colors.default_draw[i]);
    }
}
void mgp_set_view(mgp_view new_view) {
    _mgp_view = new_view;
}
void mgp_set_win_size(mgp_u32 width, mgp_u32 height) {
    _mgp_win_width = width;
    _mgp_win_height = height;
}
void mgp_set_title(mgp_string8 title) {
    _mgp_title = _str8_copy(_mgp_arena, title);
}

void mgp_points_ex(mgp_u32 num_points, mgp_f32* xs, mgp_f32* ys, mgp_f32 size, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label) {
    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_points_cmd points = {
        .size = size,
        .data = MGA_PUSH_ARRAY(scratch.arena, mgp_vec2f, num_points)
    };

    for (mgp_u32 i = 0; i < num_points; i++) {
        points.data[i] = (mgp_vec2f){ xs[i], ys[i] };
    }

    mgp_draw_cmd cmd = {
        .color = color,
        .colors = colors,
        .label = label,
    
        .size = num_points,
        .type = MGP_DRAW_POINTS,
        .points = points
    };

    mgp_cmd_push(&cmd);

    mga_scratch_release(scratch);
}
void mgp_lines_ex(mgp_u32 num_points, mgp_f32* xs, mgp_f32* ys, mgp_f32 width, mgp_u32 type, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label) {
    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_lines_cmd lines = {
        .type = type,
        .width = width,
        .data = MGA_PUSH_ARRAY(scratch.arena, mgp_vec2f, num_points)
    };

    for (mgp_u32 i = 0; i < num_points; i++) {
        lines.data[i] = (mgp_vec2f){ xs[i], ys[i] };
    }

    mgp_draw_cmd cmd = {
        .color = color,
        .colors = colors,
        .label = label,
    
        .size = num_points,
        .type = MGP_DRAW_LINES,
        .lines = lines
    };

    mgp_cmd_push(&cmd);

    mga_scratch_release(scratch);
}
void mgp_rects_ex(mgp_u32 num_rects, mgp_rectf* rects, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label) {
    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_draw_cmd cmd = {
        .type = MGP_DRAW_RECTS,
        .size = num_rects,
    
        .color = color,
        .colors = colors,
        .label = label,

        .rects.data = rects
    };

    mgp_cmd_push(&cmd);

    mga_scratch_release(scratch);
}
void mgp_quads_ex(mgp_u32 num_quads, mgp_quadf* quads, mgp_vec4f color, mgp_vec4f* colors, mgp_string8 label) {
    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_draw_cmd cmd = {
        .type = MGP_DRAW_QUADS,
        .size = num_quads,
    
        .color = color,
        .colors = colors,
        .label = label,

        .quads.data = quads
    };

    mgp_cmd_push(&cmd);

    mga_scratch_release(scratch);
}

typedef mgp_f32 mat4f[16];

typedef struct {
    mgp_vec2f pos;
    mgp_vec4f col;
} _quad_vert;

typedef struct {
    mgp_vec2f pos;
    mgp_vec4f col;
    mgp_f32 size;
} _point_vert;

typedef struct {
    mgp_vec2f pos;
    mgp_vec2f miter;
    mgp_f32 dash_progress;
    mgp_vec4f col;
} _line_vert;

typedef struct {
    mgp_rectf rect;
    mgp_rectf uv_rect;
} _text_vert;

typedef struct {
    mgp_u32 num_quads;

    mgp_u32 shader;
    mgp_u32 mat_loc;

    mgp_u32 vertex_array;
    mgp_u32 vertex_buffer;
    mgp_u32 index_buffer;
} _quad_batch;

typedef struct {
    mgp_u32 shader;
    mgp_u32 resolution_loc;
    mgp_u32 offset_loc;

    mgp_u32 vertex_array;
    mgp_u32 vertex_buffer;
    mgp_u32 index_buffer;

    mgp_u32 num_vertices;
    mgp_u32 num_indices;

    // For panning
    mgp_vec2f init_view_dim;
    mgp_vec2f init_view_topleft;
    mgp_vec2f offset;
} _line_batch;

typedef struct {
    mgp_u32 num_points;

    mgp_u32 shader;
    mgp_u32 mat_loc;
    mgp_u32 scale_loc;

    mgp_u32 vertex_array;
    mgp_u32 pos_pattern_buffer;
    mgp_u32 vertex_buffer;
} _point_batch;

typedef struct {
    mgp_u32 shader;
    mgp_u32 mat_loc;
    mgp_u32 texture_loc;
    mgp_u32 color_loc;

    mgp_u32 texture;
    mgp_u32 pos_pattern_buffer;
    mat4f mat;
} _text_data;

typedef struct {
    mgp_vec4f color;

    mgp_u32 vertex_array;
    mgp_u32 vertex_buffer;

    mgp_u32 size;
    mgp_u32 capacity; 
} _text_batch;

typedef struct {
    mgp_vec4f color;
    mgp_rectf rect;

    mgp_string8 label;
} _legend_entry;

typedef struct {
    mgp_u32 num_entries;
    _legend_entry* entries;

    mgp_rectf rect;
    _text_batch text_batch;
} _legend;

typedef struct {
    mgp_u32 framebuffer;
    mgp_u32 texture;

    mgp_recti fb_rect;
    mgp_recti graph_rect;

    mgp_u32 shader;
    mgp_u32 scale_loc;
    mgp_u32 offset_loc;
    mgp_u32 texture_loc;

    mgp_u32 vertex_array;
    mgp_u32 vertex_buffer;
} _framebuffer;

typedef struct {
    mgp_f32 right, left, top, bottom;
} _view;

#define _BUTTON_TEXTURE_SIZE 16
#define _NUM_BUTTONS 4

typedef struct _mgp_state _mgp_state;
typedef void (_button_func)(_mgp_state* state, mgp_b32 toggled);
typedef struct {
    _button_func* func;

    mgp_rectf rect;
    mgp_rectf uv_rect;

    mgp_vec4f foreground_col;
    mgp_vec4f background_col;

    mgp_vec4f hovered_bg_col;
    mgp_vec4f toggled_bg_col;

    // If this gets toggled, exclusive_with gets untoggled
    // -1 for nothing
    mgp_i64 exclusive_with;

    mgp_b8 active;
    mgp_b8 enable_toggle;
    mgp_b8 toggled;
    mgp_b8 hovered;
} _button;

typedef struct {
    _button buttons[_NUM_BUTTONS];

    mgp_u32 texture;
} _buttons;

typedef struct {
    mgp_u32 shader;

    mgp_u32 mat_loc;
    mgp_u32 rect_loc;
    mgp_u32 uv_rect_loc;
    mgp_u32 texture_loc;
    mgp_u32 foreground_col_loc;
    mgp_u32 background_col_loc;
    mgp_u32 outline_loc;

    // 1x1 black texture
    mgp_u32 default_texture;
    mgp_u32 current_texture;

    mgp_u32 vertex_array;
    mgp_u32 vertex_buffer;
} _screen_rect;

typedef struct _mgp_state {
    gfx_window* win;
    mgp_string8 title;

    _quad_batch quads;
    _line_batch lines;
    _point_batch points;

    _text_data text_data;
    _text_batch axes_text;

    _legend legend;

    _framebuffer fb;

    _view init_view;
    _view view;
    mat4f view_mat;

    // For drawing single rectangles given a rect and screen rect
    _screen_rect screen_rect;

    enum {
        _MODE_VIEW = 0,
        _MODE_PAN,
        _MODE_ZOOM
    } mode;
    _buttons buttons;

    mgp_b8 view_change, win_change;
} _mgp_state;

typedef enum {
    ALIGN_LEFT = 0,
    ALIGN_CENTER,
    ALIGN_RIGHT
} _x_text_align;
typedef enum {
    ALIGN_TOP = 0,
    ALIGN_MIDDLE,
    ALIGN_BOTTOM,
} _y_text_align;

static void _ortho_mat(mat4f mat, _view view);
static mgp_vec2f _screen_to_graph(_mgp_state* state, mgp_vec2f p);
static void _compute_init_view(_mgp_state* state);

static mgp_vec2f _measure_text(mgp_string8 text, mgp_f32 font_size);
static mgp_b32 _push_text(_text_vert* verts, mgp_u32 capacity, mgp_u32* size, mgp_string8 text, mgp_vec2f pos, _x_text_align x_align, _y_text_align y_align, mgp_f32 font_size);

static void _init_framebuffer(_mgp_state* state);
static void _init_text_data(_mgp_state* state);
static void _init_legend(_mgp_state* state);
static void _init_screen_rect(_mgp_state* state);
static void _init_buttons(_mgp_state* state);
static void _init_graph_shaders(_mgp_state* state);
static void _init_graph_buffers(_mgp_state* state);

static void _button_init_view(_mgp_state* state, mgp_b32 toggled);
static void _button_pan_mode(_mgp_state* state, mgp_b32 toggled);
static void _button_zoom_mode(_mgp_state* state, mgp_b32 toggled);
static void _button_save_img(_mgp_state* state, mgp_b32 toggled);

// -1 for default texture
static void _update_screen_rect(_mgp_state* state, mgp_rectf new_screen_rect, mgp_i64 new_texture);
static void _update_buttons(_mgp_state* state); // Every frame update
static void _update_framebuffer(_mgp_state* state);
static void _update_legend(_mgp_state* state);
static void _update_axes_text(_mgp_state* state);
static void _update_line_buffer(_mgp_state* state);

static void _draw_points(_mgp_state* state);
static void _draw_lines(_mgp_state* state);
static void _draw_quads(_mgp_state* state);
static void _draw_legend(_mgp_state* state);
static void _draw_graph(_mgp_state* state);
static void _draw_framebuffer(_mgp_state* state);
static void _draw_buttons(_mgp_state* state);
static void _draw_screen_rect(_mgp_state* state, mgp_rectf rect, mgp_rectf uv_rect, mgp_f32 outline_width, mgp_vec4f bg_col, mgp_vec4f fg_col);

static void _delete_framebuffer(_mgp_state* state);
static void _delete_text_data(_mgp_state* state);
static void _delete_legend(_mgp_state* state);
static void _delete_screen_rect(_mgp_state* state);
static void _delete_buttons(_mgp_state* state);
static void _delete_graph_shaders(_mgp_state* state);
static void _delete_graph_buffers(_mgp_state* state);

static void _init_text_batch(_mgp_state* state, _text_batch* text_batch);
static void _draw_text_batch(_mgp_state* state, _text_batch* text_batch);
static void _delete_text_batch(_text_batch* text_batch);

void mgp_plot_show() {
    _mgp_state state = { 0 };

    if (_mgp_title.size == 0) {
        state.title = MGP_STR8("Plot");
    } else {
        state.title = _mgp_title;
    }
    state.win = gfx_win_create(_mgp_arena, _mgp_win_width, _mgp_win_height, state.title);

    if (_mgp_view.left != 0.0f || _mgp_view.right != 0.0f || _mgp_view.bottom != 0.0f || _mgp_view.top != 0.0f) {
        state.view = (_view){
            .left = _mgp_view.left,
            .right = _mgp_view.right,
            .bottom = _mgp_view.bottom,
            .top = _mgp_view.top,
        };
        
        _ortho_mat(state.view_mat, state.view);
    } else {
        _compute_init_view(&state);
    }
    state.init_view = state.view;


// 4 sigfigs + 6 for (-, ., and scientific notation)
#define _AXES_TEXT_MAX_CHARS 10
    // For axes
    state.axes_text.capacity += (_AXES_TEXT_MAX_CHARS) * 6 * 2;
    // For title
    state.axes_text.capacity += state.title.size;
    state.axes_text.color = _mgp_colors.axes_text;

    _init_text_batch(&state, &state.axes_text);

    if (_mgp_enable_legend) {
        _init_legend(&state);
    }
    
    _init_framebuffer(&state);
    _init_text_data(&state);
    _init_buttons(&state);
    _init_screen_rect(&state);
    _init_graph_shaders(&state);
    _init_graph_buffers(&state);

    mgp_u32 prev_width = state.win->width;
    mgp_u32 prev_height = state.win->height;

    // Ensures everything is initialized
    state.win_change = true;
    state.view_change = true;

    mgp_vec2f init_pan_pos = { 0 };
    _view init_pan_view = { 0 };

    mgp_vec2f init_zoom_pos = { 0 };
    mgp_vec2f init_zoom_mouse_pos = { 0 };

    glEnable(GL_BLEND);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    while (!state.win->should_close) {
        gfx_win_process_events(state.win);

        if (prev_width != state.win->width || prev_height != state.win->height) {
            state.win_change = true;
        }
        prev_width = state.win->width;
        prev_height = state.win->height;

        if (state.win_change) {
            _update_framebuffer(&state);
        }
        
        _update_buttons(&state);

        switch (state.mode) {
            case _MODE_VIEW: break;
            case _MODE_PAN: {
                mgp_rectf graph_mgp_rectf = {
                    state.fb.graph_rect.x, state.fb.graph_rect.y,
                    state.fb.graph_rect.w, state.fb.graph_rect.h,
                };
                
                if (_vec2f_in_rectf(graph_mgp_rectf, state.win->mouse_pos)) {
                    if (GFX_IS_MOUSE_JUST_DOWN(state.win, GFX_MB_LEFT)) {
                        init_pan_pos = _vec2f_sub(
                            _screen_to_graph(&state, state.win->mouse_pos),
                            (mgp_vec2f){ state.view.left, state.view.bottom }
                        );
                        init_pan_view = state.view;
                    }

                    if (GFX_IS_MOUSE_DOWN(state.win, GFX_MB_LEFT)) {
                        mgp_vec2f cur_pan_pos = _vec2f_sub(
                            _screen_to_graph(&state, state.win->mouse_pos),
                            (mgp_vec2f){ state.view.left, state.view.bottom }
                        );
                        mgp_vec2f diff = _vec2f_sub(cur_pan_pos, init_pan_pos);
                        diff = _vec2f_scl(diff, -1.0f);

                        state.view.left = init_pan_view.left + diff.x;
                        state.view.right = init_pan_view.right + diff.x;
                        state.view.top = init_pan_view.top + diff.y;
                        state.view.bottom = init_pan_view.bottom + diff.y;

                        _ortho_mat(state.view_mat, state.view);
                        state.view_change = true;
                    }
                }
            } break;
            case _MODE_ZOOM: {
                mgp_rectf graph_mgp_rectf = {
                    state.fb.graph_rect.x, state.fb.graph_rect.y,
                    state.fb.graph_rect.w, state.fb.graph_rect.h,
                };

                if (_vec2f_in_rectf(graph_mgp_rectf, state.win->mouse_pos)) {
                    if (GFX_IS_MOUSE_JUST_DOWN(state.win, GFX_MB_LEFT)) {
                        init_zoom_mouse_pos = state.win->mouse_pos;
                        init_zoom_pos = _screen_to_graph(&state, state.win->mouse_pos);
                    }

                    if (GFX_IS_MOUSE_JUST_UP(state.win, GFX_MB_LEFT)) {
                        mgp_vec2f cur_zoom_pos = _screen_to_graph(&state, state.win->mouse_pos);

                        state.view.left = MIN(init_zoom_pos.x, cur_zoom_pos.x);
                        state.view.right = MAX(init_zoom_pos.x, cur_zoom_pos.x);
                        state.view.bottom = MIN(init_zoom_pos.y, cur_zoom_pos.y);
                        state.view.top = MAX(init_zoom_pos.y, cur_zoom_pos.y);

                        _ortho_mat(state.view_mat, state.view);
                        state.view_change = true;
                    }

                    if (GFX_IS_MOUSE_JUST_UP(state.win, GFX_MB_RIGHT)) {
                        mgp_vec2f cur_dim = {
                            state.view.right - state.view.left,
                            state.view.top - state.view.bottom
                        };

                        mgp_vec2f new_dim = _vec2f_scl(cur_dim, 2.0f);
                        mgp_vec2f center = _screen_to_graph(&state, state.win->mouse_pos);

                        state.view.left = center.x - new_dim.x * 0.5f;
                        state.view.right = center.x + new_dim.x * 0.5f;
                        state.view.bottom = center.y - new_dim.y * 0.5f;
                        state.view.top = center.y + new_dim.y * 0.5f;

                        _ortho_mat(state.view_mat, state.view);
                        state.view_change = true;
                    }
                }

            } break;
        }

        if (state.view_change || state.win_change) {
            if (_mgp_enable_legend) {
                _update_legend(&state);
            }

            _update_axes_text(&state);
            _update_line_buffer(&state);

            glBindFramebuffer(GL_FRAMEBUFFER, state.fb.framebuffer);

            _draw_graph(&state);
            
            glBindFramebuffer(GL_FRAMEBUFFER, 0);
            glViewport(0, 0, state.win->width, state.win->height);
        }

        mgp_vec4f bg_col = _mgp_colors.bottom_strip;
        glClearColor(bg_col.x, bg_col.y, bg_col.z, bg_col.w);
        glClear(GL_COLOR_BUFFER_BIT);

        _draw_framebuffer(&state);
        _draw_buttons(&state);

        // Drawing zoom rect
        if (state.mode == _MODE_ZOOM) {
            mgp_rectf graph_mgp_rectf = {
                state.fb.graph_rect.x, state.fb.graph_rect.y,
                state.fb.graph_rect.w, state.fb.graph_rect.h,
            };
            
            if (GFX_IS_MOUSE_DOWN(state.win, GFX_MB_LEFT) && _vec2f_in_rectf(graph_mgp_rectf, state.win->mouse_pos)) {
                mgp_vec2f mouse_pos = state.win->mouse_pos;
                
                mgp_f32 left = MIN(init_zoom_mouse_pos.x, mouse_pos.x);
                mgp_f32 right = MAX(init_zoom_mouse_pos.x, mouse_pos.x);
                mgp_f32 top = MIN(init_zoom_mouse_pos.y, mouse_pos.y);
                mgp_f32 bottom = MAX(init_zoom_mouse_pos.y, mouse_pos.y);
    
                mgp_rectf screen_zoom_rect = {
                    .x = left, .y = top,
                    .w = right - left,
                    .h = bottom - top
                };

                mgp_rectf screen_rect = {
                    .x = 0, .y = 0,
                    .w = state.win->width,
                    .h = state.win->height,
                };
                _update_screen_rect(&state, screen_rect, -1);
                _draw_screen_rect(&state, screen_zoom_rect, (mgp_rectf){ 0 }, 2.0f, (mgp_vec4f){ 1.0f, 1.0f, 1.0f, 0.2f }, _mgp_colors.zoom_rect);
            }
        }


        gfx_win_swap_buffers(state.win);

        state.view_change = false;
        state.win_change = false;

#if defined(PLATFORM_WIN32)
        Sleep(16);
#elif defined(PLATFORM_LINUX)
        usleep(16000);
#endif
    }

    if (_mgp_enable_legend) {
        _delete_legend(&state);
    }

    _delete_framebuffer(&state);
    _delete_text_data(&state);
    _delete_text_batch(&state.axes_text);
    _delete_screen_rect(&state);
    _delete_buttons(&state);
    _delete_graph_shaders(&state);
    _delete_graph_buffers(&state);

    gfx_win_destroy(state.win);

    _mgp_draw_cmds = (_mgp_draw_cmd_list){ 0 };
    _mgp_win_width = _mgp_default_win_width;
    _mgp_win_height = _mgp_default_win_height;
    _mgp_enable_legend = false;
    _mgp_legend_align = MGP_ALIGN_RIGHT;
    _mgp_colors = _mgp_default_colors;
    _mgp_view = (mgp_view){ 0 };
    _mgp_title = (mgp_string8){ 0 };

    mga_destroy(_mgp_arena);
    _mgp_arena = NULL;
}

static void _ortho_mat(mat4f mat, _view view) {
    mat[0 + 0 * 4] = 2.0f / (view.right - view.left);
    mat[1 + 1 * 4] = 2.0f / (view.top - view.bottom);
    mat[2 + 2 * 4] = -1.0f;
    mat[3 + 0 * 4] = -(view.right + view.left) / (view.right - view.left);
    mat[3 + 1 * 4] = -(view.top + view.bottom) / (view.top - view.bottom);
    mat[3 + 3 * 4] = 1.0f;
}
static mgp_vec2f _screen_to_graph(_mgp_state* state, mgp_vec2f p) {
    _view* view = &state->view;
    mgp_recti graph_rect = state->fb.graph_rect;
    
    mgp_vec2f out = (mgp_vec2f) {
        p.x - graph_rect.x,
        graph_rect.h - (p.y - graph_rect.y)
    };

    mgp_vec2f view_dim = (mgp_vec2f) {
        view->right - view->left,
        view->top - view->bottom
    };

    out.x *= view_dim.x / (mgp_f32)graph_rect.w;
    out.y *= view_dim.y / (mgp_f32)graph_rect.h;

    out.x += view->left;
    out.y += view->bottom;

    return out;
}
static void _compute_init_view(_mgp_state* state) {
    _view* view = &state->view;

    view->right = -INFINITY;
    view->left = INFINITY;
    view->top = -INFINITY;
    view->bottom =  INFINITY;

    _mgp_draw_cmd_node* node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        mgp_draw_cmd cmd = node->cmd;

        switch (cmd.type) {
            case MGP_DRAW_POINTS: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_vec2f p = cmd.points.data[i];

                    view->right = MAX(view->right, p.x);
                    view->left = MIN(view->left, p.x);
                    view->top = MAX(view->top, p.y);
                    view->bottom = MIN(view->bottom, p.y);
                }
            } break;
            case MGP_DRAW_LINES: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_vec2f p = cmd.lines.data[i];

                    view->right = MAX(view->right, p.x);
                    view->left = MIN(view->left, p.x);
                    view->top = MAX(view->top, p.y);
                    view->bottom = MIN(view->bottom, p.y);
                }
            } break;
            case MGP_DRAW_RECTS: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_rectf r = cmd.rects.data[i];

                    view->right = MAX(view->right, r.x + r.w);
                    view->left = MIN(view->left, r.x);
                    view->top = MAX(view->top, r.y + r.h);
                    view->bottom = MIN(view->bottom, r.y);
                }
            } break;
            case MGP_DRAW_QUADS: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_quadf q = cmd.quads.data[i];

                    for (mgp_u32 j = 0; j < 4; j++) {
                        mgp_vec2f p = q.p[j];

                        view->right = MAX(view->right, p.x);
                        view->left = MIN(view->left, p.x);
                        view->top = MAX(view->top, p.y);
                        view->bottom = MIN(view->bottom, p.y);
                    }
                }
            } break;
            default: break;
        }
    }

    if (view->right == view->left) {
        view->left -= 0.1f;
        view->right += 0.1f;
    }
    if (view->top == view->bottom) {
        view->bottom -= 0.1f;
        view->top += 0.1f;
    }

    _ortho_mat(state->view_mat, *view);
}

static mgp_vec2f _measure_text(mgp_string8 text, mgp_f32 font_size) {
    mgp_vec2f dim = { 0 };
    
    mgp_f32 xpos = 0.0f;
    mgp_f32 ypos = 0.0f;
    for (mgp_u64 i = 0; i < text.size; i++) {
        mgp_u8 chr = text.str[i];

        if (chr == '\n') {
            ypos += _font_line_height * (font_size / _font_orig_size);
            xpos = 0.0f;
            continue;
        }

        if (chr < 32 || chr > 127)
            continue;

        mgp_u32 index = chr - (mgp_u8)' ';
        _font_glyph_data g_data = _font_glyphs_data[index];

        mgp_rectf char_rect = (mgp_rectf){
            xpos + g_data.xoffset * font_size,
            ypos + g_data.yoffset * font_size,
            g_data.rect.w * _font_img_width * (font_size / _font_orig_size),
            g_data.rect.h * _font_img_height * (font_size / _font_orig_size),
        };

        dim.x = MAX(dim.x, char_rect.x + char_rect.w);
        dim.y = MAX(dim.y, char_rect.y + char_rect.h);

        xpos += (g_data.xadvance + g_data.xoffset) * font_size * 0.85f;
    }

    return dim;
}
static mgp_b32 _push_text(_text_vert* verts, mgp_u32 capacity, mgp_u32* size, mgp_string8 text, mgp_vec2f pos, _x_text_align x_align, _y_text_align y_align, mgp_f32 font_size) {
    mgp_vec2f offset = { 0 };
    
    mgp_vec2f dim = _measure_text(text, font_size);
    switch (x_align) {
        case ALIGN_LEFT: {
            offset.x = 0.0f;
        } break;
        case ALIGN_CENTER: {
            offset.x = -dim.x * 0.5f;
        } break;
        case ALIGN_RIGHT: {
            offset.x = -dim.x;
        } break;
        default: break;
    }
    switch (y_align) {
        case ALIGN_TOP: {
            offset.y = 0.0f;
        } break;
        case ALIGN_MIDDLE: {
            offset.y = -dim.y * 0.5f;
        } break;
        case ALIGN_BOTTOM: {
            offset.y = -dim.y;
        } break;
        default: break;
    }
    
    mgp_f32 init_xpos = pos.x + offset.x;
    mgp_f32 xpos = init_xpos;
    mgp_f32 ypos = pos.y + offset.y;
    for (mgp_u64 i = 0; i < text.size; i++) {
        mgp_u8 chr = text.str[i];

        if (chr == '\n') {
            ypos += _font_line_height * (font_size / _font_orig_size);
            xpos = init_xpos;
            continue;
        }

        if (chr < 32 || chr > 127)
            continue;

        mgp_u32 index = chr - (mgp_u8)' ';
        _font_glyph_data g_data = _font_glyphs_data[index];

        verts[*size] = (_text_vert){
            .rect = (mgp_rectf){
                xpos + g_data.xoffset * font_size,
                ypos + g_data.yoffset * font_size,
                g_data.rect.w * _font_img_width * (font_size / _font_orig_size),
                g_data.rect.h * _font_img_height * (font_size / _font_orig_size),
            },
            .uv_rect = (mgp_rectf){
                g_data.rect.x,
                g_data.rect.y,
                g_data.rect.w,
                g_data.rect.h,
            }
        };
        *size += 1;

        xpos += (g_data.xadvance + g_data.xoffset) * font_size * 0.85f;

        if (*size > capacity) {
            return false;
        }
    }
    
    return true;
}

static const char* _fb_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos;"
    "layout (location = 1) in vec2 a_uv;"
    "uniform vec2 u_scale;"
    "uniform vec2 u_offset;"
    "out vec2 uv;"
    "void main() {"
    "   uv = a_uv;"
    "   gl_Position = vec4(a_pos * u_scale + u_offset, 0.0, 1.0);"
    "}";

static const char* _fb_frag_source = ""
    "#version 330 core\n"
    "layout (location = 0) out vec4 out_col;"
    "uniform sampler2D u_texture;"
    "in vec2 uv;"
    "void main() {"
    "   out_col = texture(u_texture, uv);"
    "}";

static void _init_framebuffer(_mgp_state* state) {
    _framebuffer* fb = &state->fb;

    glGenFramebuffers(1, &fb->framebuffer);
    glBindFramebuffer(GL_FRAMEBUFFER, fb->framebuffer);

    glGenTextures(1, &fb->texture);
    glBindTexture(GL_TEXTURE_2D, fb->texture);

    _update_framebuffer(state);

    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);  

    glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, fb->texture, 0);

    if(glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE)
        fprintf(stderr, "Error: Framebuffer is not complete\n");

    glBindFramebuffer(GL_FRAMEBUFFER, 0);

    fb->shader = glh_create_shader(_fb_vert_source, _fb_frag_source);
    fb->scale_loc = glGetUniformLocation(fb->shader, "u_scale");
    fb->offset_loc = glGetUniformLocation(fb->shader, "u_offset");
    fb->texture_loc = glGetUniformLocation(fb->shader, "u_texture");

    glGenVertexArrays(1, &fb->vertex_array);
    glBindVertexArray(fb->vertex_array);

    mgp_f32 vertices[] = {
        -1.0f, -1.0f,    0.0f, 0.0f,
        -1.0f,  1.0f,    0.0f, 1.0f,
         1.0f,  1.0f,    1.0f, 1.0f,

        -1.0f, -1.0f,    0.0f, 0.0f,
         1.0f,  1.0f,    1.0f, 1.0f,
         1.0f, -1.0f,    1.0f, 0.0f,
    };

    fb->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW
    );
}

static const char* _text_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos_pattern;"
    "layout (location = 1) in vec4 a_rect;"
    "layout (location = 2) in vec4 a_uv_rect;"
    "uniform mat4 u_mat;"
    "out vec2 uv;"
    "void main() {"
    "   uv = a_uv_rect.xy + a_uv_rect.zw * a_pos_pattern;"
    "   vec4 pos = vec4(a_rect.xy + a_rect.zw * a_pos_pattern, 0.0, 1.0);"
    "   pos *= u_mat;"
    "   gl_Position = pos;"
    "}";

static const char* _text_frag_source = ""
    "#version 400 core\n"
    "layout (location = 0) out vec4 out_col;"
    "in vec2 uv;"
    "uniform sampler2D u_texture;"
    "uniform vec4 u_color;"
    "const float thickness = 0.49;"
    "const float smoothing = 0.015;"
    "void main() {"
    "   float dist = texture(u_texture, uv).r;"
    "   float alpha = smoothstep(thickness - smoothing, thickness + smoothing, dist);"
    "   out_col = vec4(u_color.rgb, u_color.a * alpha);"
    "}";

static void _init_text_data(_mgp_state* state) {
    _text_data* text_data = &state->text_data;

    text_data->shader = glh_create_shader(_text_vert_source, _text_frag_source);
    text_data->texture_loc = glGetUniformLocation(text_data->shader, "u_texture");
    text_data->color_loc = glGetUniformLocation(text_data->shader, "u_color");

    glGenTextures(1, &text_data->texture);
    glBindTexture(GL_TEXTURE_2D, text_data->texture);

    glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
    glTexImage2D(GL_TEXTURE_2D, 0, GL_R8, _font_img_width, _font_img_height, 0, GL_RED, GL_UNSIGNED_BYTE, _font_img);

    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
    
    mgp_f32 pos_pattern[] = {
        0.0f, 0.0f,
        0.0f, 1.0f,
        1.0f, 1.0f,

        0.0f, 0.0f,
        1.0f, 1.0f,
        1.0f, 0.0f
    };

    text_data->pos_pattern_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(pos_pattern), &pos_pattern[0], GL_STATIC_DRAW
    );
}

static void _init_legend(_mgp_state* state) {
    _legend* legend = &state->legend;

    _mgp_draw_cmd_node* node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        if (node->cmd.label.size != 0) {
            legend->num_entries++;
        }
    }

    legend->entries = MGA_PUSH_ZERO_ARRAY(_mgp_arena, _legend_entry, legend->num_entries);

    mgp_u32 index = 0;
    node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        if (node->cmd.label.size != 0) {
            mgp_vec4f color = node->cmd.color;
            if (node->cmd.colors != NULL) {
                color = node->cmd.colors[0];
            }

            legend->text_batch.capacity += node->cmd.label.size;

            legend->entries[index++] = (_legend_entry){
                .color = color,
                .label = node->cmd.label
            };
        }
    }

    _init_text_batch(state, &legend->text_batch);
}

static const mgp_u32 _buttons_img_width = 64;
static const mgp_u32 _buttons_img_height = 16;
// Each pixel is a bit
static const mgp_u8 _buttons_img[] = {
    0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x29,0x80,0x01,0xf8,0x00,0xfc,0x0f,
    0xc0,0x2b,0xc0,0x03,0x04,0x01,0x12,0x14,0x60,0x2e,0xe0,0x07,0x42,0x02,0x12,0x24,
    0x30,0x2c,0x80,0x01,0x82,0x02,0x12,0x44,0x18,0x38,0x88,0x11,0x82,0x02,0xf2,0x47,
    0x0c,0x30,0x8c,0x31,0x02,0x02,0x02,0x40,0x06,0x60,0xfe,0x7f,0x02,0x02,0x02,0x40,
    0xfe,0x7f,0xfe,0x7f,0x04,0x03,0xf2,0x4f,0x08,0x10,0x8c,0x31,0xf8,0x07,0x12,0x48,
    0x08,0x10,0x88,0x11,0x00,0x0e,0xd2,0x4b,0x08,0x10,0x80,0x01,0x00,0x1c,0x12,0x48,
    0x88,0x11,0xe0,0x07,0x00,0x38,0xd2,0x4b,0x88,0x11,0xc0,0x03,0x00,0x70,0x12,0x48,
    0x88,0x11,0x80,0x01,0x00,0x60,0xfe,0x7f,0xf8,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,
};

// Draws a single button
static const char* _screen_rect_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos_pattern;"
    "uniform mat4 u_mat;"
    "uniform vec4 u_rect;"
    "uniform vec4 u_uv_rect;"
    "out vec2 uv;"
    "out vec2 outline_uv;"
    "void main() {"
    "   uv = u_uv_rect.xy + u_uv_rect.zw * a_pos_pattern;"
    "   outline_uv = a_pos_pattern;"
    "   vec4 pos = vec4(u_rect.xy + u_rect.zw * a_pos_pattern, 0.0, 1.0);"
    "   pos *= u_mat;"
    "   gl_Position = pos;"
    "}";

static const char* _screen_rect_frag_source = ""
    "#version 330 core\n"
    "layout (location = 0) out vec4 out_col;"
    "uniform sampler2D u_texture;"
    "uniform vec4 u_foreground_col;"
    "uniform vec4 u_background_col;"
    "uniform vec2 u_outline;"
    "in vec2 uv;"
    "in vec2 outline_uv;"
    "void main() {"
    "    vec2 p = abs(outline_uv * 2.0 - vec2(1.0));"
    "    float edge_brightness = max(step(1.0-u_outline.x, p.x), step(1.0-u_outline.y, p.y));"
    "    float sample = texture(u_texture, uv).r;"
    "    sample = max(sample, edge_brightness);"
    "    out_col = sample * u_foreground_col + (1.0 - sample) * u_background_col;"
    "}";

static void _init_screen_rect(_mgp_state* state) {
    _screen_rect* screen_rect = &state->screen_rect;
    
    screen_rect->shader = glh_create_shader(_screen_rect_vert_source, _screen_rect_frag_source);

    screen_rect->mat_loc = glGetUniformLocation(screen_rect->shader, "u_mat");
    screen_rect->rect_loc = glGetUniformLocation(screen_rect->shader, "u_rect");
    screen_rect->uv_rect_loc = glGetUniformLocation(screen_rect->shader, "u_uv_rect");
    screen_rect->texture_loc = glGetUniformLocation(screen_rect->shader, "u_texture");
    screen_rect->foreground_col_loc = glGetUniformLocation(screen_rect->shader, "u_foreground_col");
    screen_rect->background_col_loc = glGetUniformLocation(screen_rect->shader, "u_background_col");
    screen_rect->outline_loc = glGetUniformLocation(screen_rect->shader, "u_outline");
    
    glGenTextures(1, &screen_rect->default_texture);
    glBindTexture(GL_TEXTURE_2D, screen_rect->default_texture);

    struct { mgp_u8 r, g, b, a; } pixel = { 0, 0, 0, 255 };

    glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA8, 1, 1, 0, GL_RGBA, GL_UNSIGNED_BYTE, &pixel);

    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

    screen_rect->current_texture = screen_rect->current_texture;

    glGenVertexArrays(1, &screen_rect->vertex_array);
    glBindVertexArray(screen_rect->vertex_array);

    mgp_f32 vertices[] = {
        0.0f, 0.0f,
        0.0f, 1.0f,
        1.0f, 1.0f,

        0.0f, 0.0f,
        1.0f, 1.0f,
        1.0f, 0.0f
    };

    screen_rect->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW
    );
}
static void _init_buttons(_mgp_state* state) {
    _buttons* buttons = &state->buttons;

    mgp_vec4f foreground_col = _mgp_colors.button_foreground;
    mgp_vec4f background_col = _mgp_colors.button_background;
    mgp_vec4f toggled_bg_col = _mgp_colors.button_hovered;
    mgp_vec4f hovered_bg_col = _mgp_colors.button_toggled;

    // Init view
    buttons->buttons[0] = (_button){
        .func = _button_init_view,

        .uv_rect = (mgp_rectf){ 0.0f, 0.0f, 0.25f, 1.0f },
        .foreground_col = foreground_col,
        .background_col = background_col,
        .toggled_bg_col = toggled_bg_col,
        .hovered_bg_col = hovered_bg_col,

        .exclusive_with = -1,

        .active = true,
        .enable_toggle = false,
    };
    // Pan mode
    buttons->buttons[1] = (_button){
        .func = _button_pan_mode,
        
        .uv_rect = (mgp_rectf){ 0.25f, 0.0f, 0.25f, 1.0f },
        .foreground_col = foreground_col,
        .background_col = background_col,
        .toggled_bg_col = toggled_bg_col,
        .hovered_bg_col = hovered_bg_col,
        
        .exclusive_with = 2,
        
        .active = true,
        .enable_toggle = true,
    };
    // Zoom mode
    buttons->buttons[2] = (_button){
        .func = _button_zoom_mode,

        .uv_rect = (mgp_rectf){ 0.5f, 0.0f, 0.25f, 1.0f },
        .foreground_col = foreground_col,
        .background_col = background_col,
        .toggled_bg_col = toggled_bg_col,
        .hovered_bg_col = hovered_bg_col,
        
        .exclusive_with = 1,
        
        .active = true,
        .enable_toggle = true,
    };
    // Save img
    buttons->buttons[3] = (_button){
        .func = _button_save_img,

        .uv_rect = (mgp_rectf){ 0.75f, 0.0f, 0.25f, 1.0f },
        .background_col = background_col,
        .toggled_bg_col = toggled_bg_col,
        .hovered_bg_col = hovered_bg_col,
        
        .exclusive_with = -1,

        .enable_toggle = false,

#ifdef _HAS_STBI
        .foreground_col = foreground_col,
        .active = true,
#else
        .foreground_col = (mgp_vec4f){
            foreground_col.x, 
            foreground_col.y, 
            foreground_col.z, 
            0.5f
        },
        .active = false,
#endif
    };

    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_u32 size = _buttons_img_width * _buttons_img_height;
    mgp_u8* img_data = MGA_PUSH_ARRAY(scratch.arena, mgp_u8, size);
    mgp_u32 index = 0;

    // Expanding _buttons_img from bits to bytes
    for (mgp_u32 i = 0; i < size / 8; i++) {
        mgp_u8 byte = _buttons_img[i];

        for (mgp_u32 j = 0; j < 8; j++){
            mgp_u8 bit = (byte >> j) & 1;

            img_data[index++] = bit * 255;
        }
    }

    glGenTextures(1, &buttons->texture);
    glBindTexture(GL_TEXTURE_2D, buttons->texture);

    glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
    glTexImage2D(GL_TEXTURE_2D, 0, GL_R8, _buttons_img_width, _buttons_img_height, 0, GL_RED, GL_UNSIGNED_BYTE, img_data);

    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

    mga_scratch_release(scratch);
}

static const char* _quad_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos;"
    "layout (location = 1) in vec4 a_col;"
    "uniform mat4 u_mat;"
    "out vec4 col;"
    "void main() {"
    "   col = a_col;"
    "   gl_Position = vec4(a_pos, 0.0, 1.0) * u_mat;"
    "}";

static const char* _point_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos_pattern;"
    "layout (location = 1) in vec2 a_pos;"
    "layout (location = 2) in vec4 a_col;"
    "layout (location = 3) in float a_size;"
    "uniform mat4 u_mat;"
    "uniform vec2 u_scale;"
    "out vec2 uv;"
    "out vec4 col;"
    "void main() {"
    "   col = a_col;"
    "   uv = a_pos_pattern + vec2(0.5);"
    "   vec4 pos = (vec4(a_pos, 0.0, 1.0) * u_mat);"
    "   pos.xy += a_pos_pattern * a_size * u_scale;"
    "   gl_Position = pos;"
    "}";

static const char* _line_vert_source = ""
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos;"
    "layout (location = 1) in vec2 a_miter;"
    "layout (location = 2) in float a_dash_p;"
    "layout (location = 3) in vec4 a_col;"
    "uniform vec2 u_resolution;"
    "uniform vec2 u_offset;"
    "out vec4 col;"
    "out float dash_p;"
    "void main() {"
    "    col = a_col;"
    "    dash_p = a_dash_p;"
    "    vec4 pos = vec4(a_pos + a_miter + u_offset, 0.0, 1.0);"
    "    pos.xy = pos.xy / u_resolution * 2.0 - 1.0;"
    "    gl_Position = pos;"
    "}";

static const char* _basic_frag_source = ""
    "#version 330 core\n"
    "layout (location = 0) out vec4 out_col;"
    "in vec4 col;"
    "void main() {"
    "   out_col = col;"
    "}";

static const char* _point_frag_source = ""
    "#version 330 core\n"
    "layout (location = 0) out vec4 out_col;"
    "in vec2 uv;"
    "in vec4 col;"
    "void main() {"
    "   vec2 p = abs(uv * 2. - vec2(1.));"
    "   float alpha = smoothstep(0, 0.05, 1 - dot(p,p));"
    "   out_col = vec4(col.rgb, col.a * alpha);"
    "}";

static const char* _line_frag_source = ""
    "#version 330 core\n"
    "layout (location = 0) out vec4 out_col;"
    "in vec4 col;"
    "in float dash_p;"
    "void main() {"
    "    vec4 c = col;"
    "    c.a *= clamp((cos(dash_p / 4.0f)) * 2, 0.0, 1.0);"
    "    out_col = c;"
    "}";

static void _init_graph_shaders(_mgp_state* state) {
    state->quads.shader = glh_create_shader(_quad_vert_source, _basic_frag_source);
    state->quads.mat_loc = glGetUniformLocation(state->quads.shader, "u_mat");

    state->points.shader = glh_create_shader(_point_vert_source, _point_frag_source);
    state->points.mat_loc = glGetUniformLocation(state->points.shader, "u_mat");
    state->points.scale_loc = glGetUniformLocation(state->points.shader, "u_scale");

    state->lines.shader = glh_create_shader(_line_vert_source, _line_frag_source);
    state->lines.resolution_loc = glGetUniformLocation(state->lines.shader, "u_resolution");
    state->lines.offset_loc = glGetUniformLocation(state->lines.shader, "u_offset");
}
static void _init_graph_buffers(_mgp_state* state) {
    _quad_batch* quads = &state->quads;
    _point_batch* points = &state->points;
    _line_batch* lines = &state->lines;

    // Counting number of each object
    _mgp_draw_cmd_node* node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        mgp_draw_cmd cmd = node->cmd;

        switch (cmd.type) {
            case MGP_DRAW_POINTS: {
                points->num_points += cmd.size;
            } break;
            case MGP_DRAW_LINES: {
                lines->num_vertices += cmd.size * 2;
                lines->num_indices += (cmd.size - 1) * 6; 
            } break;
            case MGP_DRAW_RECTS: {
                quads->num_quads += cmd.size;
            } break;
            case MGP_DRAW_QUADS: {
                quads->num_quads += cmd.size;
            } break;
            default: break;
        }
    }

    // Creating buffer data
    mga_temp scratch = mga_scratch_get(NULL, 0);

    _quad_vert* quad_verts = MGA_PUSH_ARRAY(scratch.arena, _quad_vert, quads->num_quads * 4);
    _point_vert* point_verts = MGA_PUSH_ARRAY(scratch.arena, _point_vert, points->num_points);
    mgp_u32* line_indices = MGA_PUSH_ARRAY(scratch.arena, mgp_u32, lines->num_indices);

    mgp_u32 quad_vert_index = 0;
    mgp_u32 point_vert_index = 0;
    
    // This is just to get the correct indices
    // No indices are written during this pass
    mgp_u32 line_vert_index = 0; 
    mgp_u32 line_indices_index = 0;

    node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        mgp_draw_cmd cmd = node->cmd;

        mgp_vec4f* cols = &cmd.color;
        mgp_u32 num_cols = 1;
        if (cmd.colors != NULL) {
            cols = cmd.colors;
            num_cols = cmd.size;
        }

        switch (cmd.type) {
            case MGP_DRAW_POINTS: {
                mgp_vec2f* data = cmd.points.data;
                mgp_f32 size = cmd.points.size == 0.0f ? 1.0f : cmd.points.size;

                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    point_verts[point_vert_index++] = (_point_vert){
                        .pos = data[i],
                        .col = cols[MIN(num_cols-1, i)],
                        .size = size
                    };
                }
            } break;
            case MGP_DRAW_LINES: {
                line_vert_index += 2;

                for (mgp_u32 i = 0; i < cmd.size - 1; i++) {
                    line_vert_index += 2;

                    line_indices[line_indices_index++] = line_vert_index - 4;
                    line_indices[line_indices_index++] = line_vert_index - 2;
                    line_indices[line_indices_index++] = line_vert_index - 3;
                    
                    line_indices[line_indices_index++] = line_vert_index - 3;
                    line_indices[line_indices_index++] = line_vert_index - 2;
                    line_indices[line_indices_index++] = line_vert_index - 1;
                }
            } break;
            case MGP_DRAW_RECTS: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_rectf r = cmd.rects.data[i];

                    quad_verts[quad_vert_index++] = (_quad_vert){
                        .pos = (mgp_vec2f){
                            r.x, r.y
                        },
                        .col = cols[MIN(num_cols-1, i)],
                    };
                    quad_verts[quad_vert_index++] = (_quad_vert){
                        .pos = (mgp_vec2f){
                            r.x, r.y + r.h
                        },
                        .col = cols[MIN(num_cols-1, i)],
                    };
                    quad_verts[quad_vert_index++] = (_quad_vert){
                        .pos = (mgp_vec2f){
                            r.x + r.w, r.y + r.h
                        },
                        .col = cols[MIN(num_cols-1, i)],
                    };
                    quad_verts[quad_vert_index++] = (_quad_vert){
                        .pos = (mgp_vec2f){
                            r.x + r.w, r.y
                        },
                        .col = cols[MIN(num_cols-1, i)],
                    };
                }
            } break;
            case MGP_DRAW_QUADS: {
                for (mgp_u32 i = 0; i < cmd.size; i++) {
                    mgp_quadf q = cmd.quads.data[i];

                    for (mgp_u32 j = 0; j < 4; j++) {
                        quad_verts[quad_vert_index++] = (_quad_vert){
                            .pos = q.p[j],
                            .col = cols[MIN(num_cols-1, i)],
                        };
                    }
                }
            } break;
            default: break;
        }
    }

    glGenVertexArrays(1, &points->vertex_array);
    glBindVertexArray(points->vertex_array);

    mgp_f32 pos_pattern[] = {
        -0.5f,  0.5f,
        0.5f,  0.5f,
        -0.5f, -0.5f,
        0.5f,  0.5f,
        -0.5f, -0.5f,
        0.5f, -0.5f  
    };

    points->pos_pattern_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(pos_pattern), &pos_pattern[0], GL_STATIC_DRAW
    );

    points->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(_point_vert) * points->num_points, point_verts, GL_STATIC_DRAW
    );

    glGenVertexArrays(1, &lines->vertex_array);
    glBindVertexArray(lines->vertex_array);
    
    lines->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(_line_vert) * lines->num_vertices, NULL, GL_STREAM_DRAW
    );
    lines->index_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(mgp_u32) * lines->num_indices, line_indices, GL_STATIC_DRAW
    );
    
    // This is called automatically at the start
    //_update_line_buffer(state);

    mgp_u32* quad_indices = MGA_PUSH_ARRAY(scratch.arena, mgp_u32, quads->num_quads * 6);

    mgp_u32 index = 0;
    mgp_u32 offset = 0;
    for (mgp_u32 i = 0; i < quads->num_quads; i++) {

        quad_indices[index++] = 0 + offset;
        quad_indices[index++] = 1 + offset;
        quad_indices[index++] = 2 + offset;

        quad_indices[index++] = 2 + offset;
        quad_indices[index++] = 3 + offset;
        quad_indices[index++] = 0 + offset;

        offset += 4;
    }

    glGenVertexArrays(1, &quads->vertex_array);
    glBindVertexArray(quads->vertex_array);

    quads->index_buffer = glh_create_buffer(
        GL_ELEMENT_ARRAY_BUFFER, sizeof(mgp_u32) * quads->num_quads * 6, quad_indices, GL_STATIC_DRAW
    );
    quads->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(_quad_vert) * quads->num_quads * 4, quad_verts, GL_STATIC_DRAW
    );

    mga_scratch_release(scratch);
}

static void _button_init_view(_mgp_state* state, mgp_b32 toggled) {
    UNUSED(toggled);

    state->view = state->init_view;
    _ortho_mat(state->view_mat, state->view);
    state->view_change = true;
}
static void _button_pan_mode(_mgp_state* state, mgp_b32 toggled) {
    state->mode = toggled ? _MODE_PAN : _MODE_VIEW;
}
static void _button_zoom_mode(_mgp_state* state, mgp_b32 toggled) {
    state->mode = toggled ? _MODE_ZOOM : _MODE_VIEW;
}
#ifdef _HAS_STBI
static void _button_save_img(_mgp_state* state, mgp_b32 toggled) {
    UNUSED(toggled);

    glBindFramebuffer(GL_FRAMEBUFFER, state->fb.framebuffer);

    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_u32 width = state->fb.fb_rect.w;
    mgp_u32 height = state->fb.fb_rect.h;
    mgp_u8* pixel_data = MGA_PUSH_ARRAY(scratch.arena, mgp_u8, width * height * 4);
    
    glReadBuffer(GL_COLOR_ATTACHMENT0);
    glReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, pixel_data);

    mgp_u8* filename = MGA_PUSH_ZERO_ARRAY(scratch.arena, mgp_u8, state->title.size + 5);
    memcpy(filename, state->title.str, sizeof(mgp_u8) * state->title.size);
    filename[state->title.size + 0] = '.';
    filename[state->title.size + 1] = 'p';
    filename[state->title.size + 2] = 'n';
    filename[state->title.size + 3] = 'g';

    stbi_flip_vertically_on_write(true);
    mga_i32 ret = stbi_write_png((char*)filename, width, height, 4, pixel_data, width*4);
    if (ret == 0) {
        fprintf(stderr, "MGP: Failed to write file\n");
    }

    mga_scratch_release(scratch);

    glBindFramebuffer(GL_FRAMEBUFFER, 0);

}
#else
static void _button_save_img(_mgp_state* state, mgp_b32 toggled) {
    UNUSED(state);
    UNUSED(toggled);

    fprintf(stderr, "Unable to save image, stb_image_write.h required\n");
}
#endif

static void _update_screen_rect(_mgp_state* state, mgp_rectf new_screen_rect, mgp_i64 new_texture) {
    _screen_rect* screen_rect = &state->screen_rect;

    glUseProgram(screen_rect->shader);

    mat4f mat = { 0 };
    _view view = {
        .left = new_screen_rect.x,
        .right = new_screen_rect.x + new_screen_rect.w,
        .top = new_screen_rect.y,
        .bottom = new_screen_rect.y + new_screen_rect.h,
    };
    _ortho_mat(mat, view);

    glUniformMatrix4fv(screen_rect->mat_loc, 1, GL_FALSE, mat);

    if (new_texture == -1) {
        screen_rect->current_texture = screen_rect->default_texture;
    } else {
        screen_rect->current_texture = (mgp_u32)new_texture;
    }
}
static void _update_buttons(_mgp_state* state) {
    _buttons* buttons = &state->buttons;

    if (state->win_change) {
        mgp_f32 height = (mgp_f32)state->win->height - (state->fb.fb_rect.y + state->fb.fb_rect.h);

        mgp_f32 button_side = height * 0.9f;
        mgp_f32 button_y = (mgp_f32)(state->fb.fb_rect.y + state->fb.fb_rect.h) + (height - button_side) * 0.5f;
        mgp_f32 button_spacing = button_side / _NUM_BUTTONS;
    
        mgp_f32 cur_x = button_spacing;
        for (mgp_u32 i = 0; i < _NUM_BUTTONS; i++) {
            _button* button = &buttons->buttons[i];

            button->rect = (mgp_rectf){
                .x = cur_x,
                .y = button_y,
                .w = button_side,
                .h = button_side,
            };

            cur_x += button_side + button_spacing;
        }
    }

    for (mgp_u32 i = 0; i < _NUM_BUTTONS; i++) {
        _button* button = &buttons->buttons[i];
        if (!button->active) {
            continue;
        }
        
        if (_vec2f_in_rectf(button->rect, state->win->mouse_pos)) {
            if (!button->hovered) {
                button->hovered = true;
                //button->rect.y -= button->rect.h * 0.1f;
            }
        } else if (button->hovered) {
            button->hovered = false;
            //button->rect.y += button->rect.h * 0.1f;
        }
    }

    if (GFX_IS_MOUSE_JUST_DOWN(state->win, GFX_MB_LEFT)) {
        for (mgp_u32 i = 0; i < _NUM_BUTTONS; i++) {
            _button* button = &buttons->buttons[i];
            if (!button->active) {
                continue;
            }

            if (button->hovered) {
                if (button->enable_toggle) {
                    button->toggled = !button->toggled;
                    
                    if (button->exclusive_with != -1) {
                        buttons->buttons[button->exclusive_with].toggled = false;
                    }
                }

                button->func(state, button->toggled);

                break;
            }
        }
    }
}

#define _FRAMEBUFFER_AREA 0.925f
#define _MAX_BOTTOM_HEIGHT 48
static void _update_framebuffer(_mgp_state* state) {
    _framebuffer* fb = &state->fb;

    glBindTexture(GL_TEXTURE_2D, fb->texture);

    mgp_f32 bottom_height = (mgp_f32)state->win->height * (1.0f - _FRAMEBUFFER_AREA);
    bottom_height = MIN(_MAX_BOTTOM_HEIGHT, bottom_height);

    fb->fb_rect = (mgp_recti){
        0, 0,
        state->win->width * 1.0,
        state->win->height - bottom_height
    };
    fb->graph_rect = (mgp_recti){
        fb->fb_rect.w * 0.1,
        fb->fb_rect.h * 0.1,
        fb->fb_rect.w * 0.8,
        fb->fb_rect.h * 0.8,
    };
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, fb->fb_rect.w, fb->fb_rect.h, 0, GL_RGBA, GL_UNSIGNED_BYTE, NULL);
}

#define _LEGEND_PADDING 10.0f
static void _update_legend(_mgp_state* state) {
    _legend* legend = &state->legend;

    mgp_recti graph_rect = state->fb.graph_rect;

    mgp_f32 entry_height = (mgp_f32)graph_rect.h * 0.1f;
    mgp_f32 y_rect_spacing = entry_height * 0.2f;
    mgp_f32 entry_y_padding = (mgp_f32)graph_rect.h * 0.02f;
    mgp_f32 height = entry_height * legend->num_entries + entry_y_padding * (legend->num_entries + 1);

    mgp_f32 width = height * (16.0f / 9.0f);
    mgp_f32 entry_x_padding = (width * 0.15f) / 3.0f;

    legend->rect = (mgp_rectf){
        .y = (mgp_f32)graph_rect.y + _LEGEND_PADDING,
        .w = width,
        .h = height,
    };
    if (_mgp_legend_align == MGP_ALIGN_LEFT) {
        legend->rect.x = (mgp_f32)graph_rect.x + _LEGEND_PADDING;
    } else {
        legend->rect.x = (mgp_f32)graph_rect.x + (mgp_f32)graph_rect.w - (legend->rect.w + _LEGEND_PADDING);
    }

    mga_temp scratch = mga_scratch_get(NULL, 0);

    mgp_u32 capacity = legend->text_batch.capacity;
    mgp_u32 size = 0;
    _text_vert* verts = MGA_PUSH_ZERO_ARRAY(scratch.arena, _text_vert, capacity);

    mgp_f32 y = legend->rect.y + entry_y_padding;
    for (mgp_u32 i = 0; i < legend->num_entries; i++) {
        _legend_entry* entry = &legend->entries[i];

        /*
        X Layout:
         - 15% padding
         - 20% rect
         - 65% text
        */

        entry->rect = (mgp_rectf) {
            .x = legend->rect.x + entry_x_padding,
            .y = y + y_rect_spacing,
            .w = width * 0.2f,
            .h = entry_height - y_rect_spacing * 2.0f
        };

        mgp_f32 text_x = entry->rect.x + entry->rect.w + entry_x_padding;
        mgp_f32 font_size = entry_height * 0.5f;

        mgp_f32 text_width = _measure_text(entry->label, font_size).x;
        mgp_f32 desired_width = width * 0.65f;

        font_size = MIN(entry_height, font_size * desired_width / text_width);

        _push_text(
            verts, capacity, &size,
            entry->label, (mgp_vec2f){ text_x, y + entry_height * 0.5f },
            ALIGN_LEFT, ALIGN_MIDDLE,
            font_size
        );

        y += entry_height + entry_y_padding;
    }

    legend->text_batch.size = size;

    glBindBuffer(GL_ARRAY_BUFFER, legend->text_batch.vertex_buffer);
    glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(_text_vert) * size, verts);

    mga_scratch_release(scratch);
}
static void _update_axes_text(_mgp_state* state) {
    _text_batch* axes_text = &state->axes_text;
    _view* view = &state->view;

    mga_temp scratch = mga_scratch_get(NULL, 0);

    _text_vert* verts = MGA_PUSH_ZERO_ARRAY(scratch.arena, _text_vert, axes_text->capacity);
    mgp_u32 size = 0;

    mgp_recti graph_rect = state->fb.graph_rect;

    // Title
    mgp_f32 top_height = (mgp_f32)graph_rect.y;
    mgp_vec2f pos = {
        (mgp_f32)state->win->width * 0.5f,
        top_height * 0.5f
    };
    mgp_f32 font_size = MIN(48.0f, top_height * 0.5f);
    mgp_f32 text_width = _measure_text(state->title, font_size).x;
    if (text_width > state->fb.graph_rect.w) {
        font_size *= (mgp_f32)state->fb.graph_rect.w / text_width;
    }
    _push_text(verts, axes_text->capacity, &size, state->title, pos, ALIGN_CENTER, ALIGN_MIDDLE, font_size);

    mgp_u8 num_text_buff[_AXES_TEXT_MAX_CHARS + 1] = { 0 };

    // X-Axis
    {
        mgp_u32 sections = MAX(3, MIN(6, graph_rect.w / 125));
        mgp_f32 step = (mgp_f32)graph_rect.w / (sections - 1);

        mgp_f32 view_step = (view->right - view->left) / (sections - 1);

        pos.y = (mgp_f32)graph_rect.y + graph_rect.h;
        mgp_f32 bottom_height = (mgp_f32)state->fb.fb_rect.h - pos.y;

        font_size = bottom_height * 0.33f;
        pos.y += font_size * 0.5f;
        
        for (mgp_u32 i = 0; i < sections; i++) {
            pos.x = (mgp_f32)graph_rect.x + step * i;

            mgp_f32 view_pos = view->left + view_step * i;
            snprintf((char*)num_text_buff, _AXES_TEXT_MAX_CHARS + 1, "%.4g", view_pos);
            mgp_string8 num_text = _str8_from_cstr(num_text_buff);

            _x_text_align x_align = ALIGN_CENTER;
            if (i == 0) {
                x_align = ALIGN_LEFT;
            } else if (i == sections - 1) {
                x_align = ALIGN_RIGHT;
            }

            _push_text(verts, axes_text->capacity, &size, num_text, pos, x_align, ALIGN_TOP, font_size);
        }
    }
    
    // Y-Axis
    {
        mgp_u32 sections = MAX(3, MIN(6, graph_rect.h / 125));
        mgp_f32 step = (mgp_f32)graph_rect.h / (sections - 1);

        mgp_f32 view_step = (view->top - view->bottom) / (sections - 1);

        pos.x = (mgp_f32)graph_rect.x;

        // Font size is reused from x-axis
        pos.x -= font_size * 0.5f;
        
        for (mgp_u32 i = 0; i < sections; i++) {
            pos.y = (mgp_f32)graph_rect.y + step * i;

            mgp_f32 view_pos = view->top - view_step * i;
            snprintf((char*)num_text_buff, _AXES_TEXT_MAX_CHARS + 1, "%.4g", view_pos);
            mgp_string8 num_text = _str8_from_cstr(num_text_buff);

            _y_text_align y_align = ALIGN_MIDDLE;
            if (i == 0) {
                y_align = ALIGN_TOP;
            } else if (i == sections - 1) {
                y_align = ALIGN_BOTTOM;
            }

            _push_text(verts, axes_text->capacity, &size, num_text, pos, ALIGN_RIGHT, y_align, font_size);
        }
    }
    
    axes_text->size = size;

    glBindBuffer(GL_ARRAY_BUFFER, axes_text->vertex_buffer);
    glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(_text_vert) * size, verts);

    mga_scratch_release(scratch);
}
static void _update_line_buffer(_mgp_state* state) {
    _line_batch* lines = &state->lines;
    _view* view = &state->view;
    
    mgp_vec2f view_dim = {
        view->right - view->left,
        view->top - view->bottom
    };
    if (!state->win_change) {
        // TODO: scale epsilon based on view_dim? 
        float epsilon = 1e-6;
        if (fabsf(view_dim.x - lines->init_view_dim.x) <= epsilon && fabsf(view_dim.y - lines->init_view_dim.y) <= epsilon) {
            lines->offset.x = lines->init_view_topleft.x - view->left;
            lines->offset.y = lines->init_view_topleft.y - view->top;

            lines->offset.x *= (mgp_f32)state->fb.fb_rect.w / view_dim.x;
            lines->offset.y *= (mgp_f32)state->fb.fb_rect.h / view_dim.y;

            return;
        }
    }
    lines->offset = (mgp_vec2f){ 0 };
    lines->init_view_topleft = (mgp_vec2f){ view->left, view->top };
    lines->init_view_dim = view_dim;

    mga_temp scratch = mga_scratch_get(NULL, 0);

    _line_vert* line_verts = MGA_PUSH_ARRAY(scratch.arena, _line_vert, lines->num_vertices);
    mgp_u32 index = 0;

    _mgp_draw_cmd_node* node = _mgp_draw_cmds.first;
    for (; node != NULL; node = node->next) {
        mgp_draw_cmd cmd = node->cmd;

        if (cmd.type != MGP_DRAW_LINES) {
            continue;
        }

        mgp_vec2f* data = cmd.lines.data;

        mga_temp temp = mga_temp_begin(scratch.arena);
        mgp_vec2f* points = MGA_PUSH_ARRAY(temp.arena, mgp_vec2f, cmd.size);
        
        mgp_vec2f dim = {
            view->right - view->left,
            view->top - view->bottom
        };
        
        mgp_recti fb_rect = state->fb.fb_rect;
        for (mgp_u32 i = 0; i < cmd.size; i++) {
            points[i] = data[i];
            points[i].x *= 2.0f / dim.x;
            points[i].y *= 2.0f / dim.y;
            points[i].x += -(view->right + view->left) / dim.x;
            points[i].y += -(view->top + view->bottom) / dim.y;

            points[i].x = (points[i].x + 1.0f) * 0.5f * fb_rect.w + fb_rect.x;
            points[i].y = (points[i].y + 1.0f) * 0.5f * fb_rect.h + fb_rect.y;
        }

        mgp_f32 line_width = cmd.lines.width;
        mgp_f32 dash_mul = cmd.lines.type == MGP_LINE_SOLID ? 0.0f : 1.0f;

        mgp_vec2f p0, p1, p2, line, norm, tangent, miter;

        p0 = points[0];
        p1 = points[1];

        line = _vec2f_nrm(_vec2f_sub(p1, p0));
        norm = (mgp_vec2f){ -line.y, line.x };
        miter = _vec2f_scl(norm, line_width);
        
        line_verts[index++] = (_line_vert){
            .pos = p0,
            .miter = miter,
            .dash_progress = 0.0f,
            .col = cmd.color
        };
        line_verts[index++] = (_line_vert){
            .pos = p0,
            .miter = _vec2f_scl(miter, -1.0f),
            .dash_progress = 0.0f,
            .col = cmd.color
        };

        mgp_f32 running_length = 0.0f;
        for (mgp_u32 i = 1; i < cmd.size - 1; i++) {
            p0 = points[i - 1];
            p1 = points[i];
            p2 = points[i + 1];

            line = _vec2f_sub(p1, p0);
            running_length += _vec2f_len(line);
            line = _vec2f_nrm(line);
            norm = (mgp_vec2f){ -line.y, line.x };
    
            tangent = _vec2f_nrm(_vec2f_add(line, _vec2f_nrm(_vec2f_sub(p2, p1))));
            miter = (mgp_vec2f){ -tangent.y, tangent.x };
            
            miter = _vec2f_scl(miter, line_width / _vec2f_dot(miter, norm));

            line_verts[index++] = (_line_vert){
                .pos = p1,
                .miter = miter,
                .dash_progress = running_length * dash_mul,
                .col = cmd.color
            };
            line_verts[index++] = (_line_vert){
                .pos = p1,
                .miter = _vec2f_scl(miter, -1.0f),
                .dash_progress = running_length * dash_mul,
                .col = cmd.color
            };
        }
        
        p0 = points[cmd.size - 2];
        p1 = points[cmd.size - 1];

        line = _vec2f_sub(p1, p0);
        running_length += _vec2f_len(line);
        line = _vec2f_nrm(line);
        norm = (mgp_vec2f){ -line.y, line.x };
        miter = _vec2f_scl(norm, line_width);
        
        line_verts[index++] = (_line_vert){
            .pos = p1,
            .miter = miter,
            .dash_progress = running_length * dash_mul,
            .col = cmd.color
        };
        line_verts[index++] = (_line_vert){
            .pos = p1,
            .miter = _vec2f_scl(miter, -1.0f),
            .dash_progress = running_length * dash_mul,
            .col = cmd.color
        };
        
        mga_temp_end(temp);
    }

    glBindBuffer(GL_ARRAY_BUFFER, lines->vertex_buffer);
    glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(_line_vert) * index, line_verts);
    
    mga_scratch_release(scratch);
}

static void _draw_points(_mgp_state* state) {
    _point_batch* points = &state->points;
    mat4f* view_mat = &state->view_mat;

    glUseProgram(points->shader);
    
    if (state->view_change) {
        glUniformMatrix4fv(points->mat_loc, 1, GL_FALSE, *view_mat);
    }
    if (state->win_change) {
        mgp_f32 width = state->win->width;
        mgp_f32 height = state->win->height;
        mgp_vec2f scale = { 5.0f / width, 5.0f / height };
        glUniform2f(points->scale_loc, scale.x, scale.y);
    }

    glBindVertexArray(points->vertex_array);

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);
    glEnableVertexAttribArray(2);
    glEnableVertexAttribArray(3);

    glBindBuffer(GL_ARRAY_BUFFER, points->pos_pattern_buffer);
    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 0, (void*)0);

    glVertexAttribDivisor(1, 1);
    glVertexAttribDivisor(2, 1);
    glVertexAttribDivisor(3, 1);

    glBindBuffer(GL_ARRAY_BUFFER, points->vertex_buffer);

    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, sizeof(_point_vert), (void*)(offsetof(_point_vert, pos)));
    glVertexAttribPointer(2, 4, GL_FLOAT, GL_FALSE, sizeof(_point_vert), (void*)(offsetof(_point_vert, col)));
    glVertexAttribPointer(3, 1, GL_FLOAT, GL_FALSE, sizeof(_point_vert), (void*)(offsetof(_point_vert, size)));

    glDrawArraysInstanced(GL_TRIANGLES, 0, 6, points->num_points);

    glVertexAttribDivisor(1, 0);
    glVertexAttribDivisor(2, 0);
    glVertexAttribDivisor(3, 0);

    glDisableVertexAttribArray(0);
    glDisableVertexAttribArray(1);
    glDisableVertexAttribArray(2);
    glDisableVertexAttribArray(3);
}
static void _draw_lines(_mgp_state* state) {
    _line_batch* lines = &state->lines;

    glUseProgram(lines->shader);

    if (state->win_change) {
        glUniform2f(lines->resolution_loc, (mgp_f32)state->fb.fb_rect.w, (mgp_f32)state->fb.fb_rect.h);
    }
    glUniform2f(lines->offset_loc, lines->offset.x, lines->offset.y);

    glBindVertexArray(lines->vertex_array);
    glBindBuffer(GL_ARRAY_BUFFER, lines->vertex_buffer);

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);
    glEnableVertexAttribArray(2);
    glEnableVertexAttribArray(3);

    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(_line_vert), (void*)(offsetof(_line_vert, pos)));
    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, sizeof(_line_vert), (void*)(offsetof(_line_vert, miter)));
    glVertexAttribPointer(2, 1, GL_FLOAT, GL_FALSE, sizeof(_line_vert), (void*)(offsetof(_line_vert, dash_progress)));
    glVertexAttribPointer(3, 4, GL_FLOAT, GL_FALSE, sizeof(_line_vert), (void*)(offsetof(_line_vert, col)));

    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, lines->index_buffer);
    glDrawElements(GL_TRIANGLES, lines->num_indices, GL_UNSIGNED_INT, NULL);
    
    glDisableVertexAttribArray(0);
    glDisableVertexAttribArray(1);
    glDisableVertexAttribArray(2);
    glDisableVertexAttribArray(3);
}
static void _draw_quads(_mgp_state* state) {
    _quad_batch* quads = &state->quads;
    mat4f* view_mat = &state->view_mat;

    glUseProgram(quads->shader);

    if (state->view_change) {
        glUniformMatrix4fv(quads->mat_loc, 1, GL_FALSE, *view_mat);
    }

    glBindVertexArray(quads->vertex_array);
    glBindBuffer(GL_ARRAY_BUFFER, quads->vertex_buffer);

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);

    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(_quad_vert), (void*)(offsetof(_quad_vert, pos)));
    glVertexAttribPointer(1, 4, GL_FLOAT, GL_FALSE, sizeof(_quad_vert), (void*)(offsetof(_quad_vert, col)));

    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, quads->index_buffer);
    glDrawElements(GL_TRIANGLES, quads->num_quads * 6, GL_UNSIGNED_INT, NULL);

    glDisableVertexAttribArray(0);
    glDisableVertexAttribArray(1);
}
static void _draw_legend(_mgp_state* state) {
    _legend* legend = &state->legend;

    mgp_recti fb_rect = state->fb.fb_rect;
    mgp_rectf fb_mgp_rectf = {
        fb_rect.x, fb_rect.y,
        fb_rect.w, fb_rect.h,
    };

    _update_screen_rect(state, fb_mgp_rectf, -1);

    _draw_screen_rect(state, legend->rect, (mgp_rectf){ 0 }, 2.0f, _mgp_colors.legend_background, _mgp_colors.legend_outline);

    for (mgp_u32 i = 0; i < legend->num_entries; i++) {
        _legend_entry* entry = &legend->entries[i];

        _draw_screen_rect(state, entry->rect, (mgp_rectf){ 0 }, 0, entry->color, (mgp_vec4f){ 0 });
    }

    legend->text_batch.color = _mgp_colors.legend_text;
    _draw_text_batch(state, &legend->text_batch);
}
static void _draw_graph(_mgp_state* state) {
    mgp_recti fb_rect = state->fb.fb_rect;
    glViewport(fb_rect.x, fb_rect.y, fb_rect.w, fb_rect.h);

    mgp_vec4f col = _mgp_colors.background;
    glClearColor(col.x, col.y, col.z, col.w);
    glClear(GL_COLOR_BUFFER_BIT);

    mgp_recti g_rect = state->fb.graph_rect;
    glEnable(GL_SCISSOR_TEST);
    glViewport(g_rect.x - 1, g_rect.y - 1, g_rect.w + 2, g_rect.h + 2);
    glScissor(g_rect.x - 1, g_rect.y - 1, g_rect.w + 2, g_rect.h + 2);

    col = _mgp_colors.graph_outline;
    glClearColor(col.x, col.y, col.z, col.w);
    glClear(GL_COLOR_BUFFER_BIT);
    
    glViewport(g_rect.x, g_rect.y, g_rect.w, g_rect.h);
    glScissor(g_rect.x, g_rect.y, g_rect.w, g_rect.h);

    col = _mgp_colors.graph_background;
    glClearColor(col.x, col.y, col.z, col.w);
    glClear(GL_COLOR_BUFFER_BIT);

    _draw_quads(state);
    _draw_lines(state);
    _draw_points(state);
    
    glDisable(GL_SCISSOR_TEST);
    glViewport(fb_rect.x, fb_rect.y, fb_rect.w, fb_rect.h);

    _draw_text_batch(state, &state->axes_text);
    _draw_legend(state);
}
static void _draw_framebuffer(_mgp_state* state) {
    _framebuffer* fb = &state->fb;

    glUseProgram(fb->shader);

    mgp_vec2f scale = { 
        .x = 1.0f,
        .y = (mgp_f32)fb->fb_rect.h / (mgp_f32)state->win->height
    };
    mgp_vec2f offset = { 
        .x = 0.0f,
        .y = 1.0f - scale.y
    };
    glUniform2f(fb->scale_loc, scale.x, scale.y);
    glUniform2f(fb->offset_loc, offset.x, offset.y);

    glUniform1i(fb->texture_loc, 0);

    glBindTexture(GL_TEXTURE_2D, fb->texture);
    glActiveTexture(GL_TEXTURE0);

    glBindVertexArray(fb->vertex_array);
    glBindBuffer(GL_ARRAY_BUFFER, fb->vertex_buffer);

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);

    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(mgp_f32) * 4, (void*)(sizeof(mgp_f32) * 0));
    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, sizeof(mgp_f32) * 4, (void*)(sizeof(mgp_f32) * 2));

    glDrawArrays(GL_TRIANGLES, 0, 6);

    glDisableVertexAttribArray(0);
    glDisableVertexAttribArray(1);
}
static void _draw_screen_rect(_mgp_state* state, mgp_rectf rect, mgp_rectf uv_rect, mgp_f32 outline_width, mgp_vec4f bg_col, mgp_vec4f fg_col) {
    _screen_rect* screen_rect = &state->screen_rect;
    
    glUseProgram(screen_rect->shader);

    glUniform2f(screen_rect->outline_loc, outline_width / rect.w, outline_width / rect.h);

    glUniform1i(screen_rect->texture_loc, 0);
    glBindTexture(GL_TEXTURE_2D, screen_rect->current_texture);
    glActiveTexture(GL_TEXTURE0);

    glBindVertexArray(screen_rect->vertex_array);
    glBindBuffer(GL_ARRAY_BUFFER, screen_rect->vertex_buffer);

    glEnableVertexAttribArray(0);
    
    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(mgp_f32) * 2, (void*)(0));

    glUniform4f(screen_rect->rect_loc, rect.x, rect.y, rect.w, rect.h);
    glUniform4f(screen_rect->uv_rect_loc, uv_rect.x, uv_rect.y, uv_rect.w, uv_rect.h);

    glUniform4f(screen_rect->foreground_col_loc, fg_col.x, fg_col.y, fg_col.z, fg_col.w);
    glUniform4f(screen_rect->background_col_loc, bg_col.x, bg_col.y, bg_col.z, bg_col.w);

    glDrawArrays(GL_TRIANGLES, 0, 6);
    
    glDisableVertexAttribArray(0);
}

static void _draw_buttons(_mgp_state* state) {
    _buttons* buttons = &state->buttons;

    mgp_rectf screen_rect = {
        .x = 0, .y = 0,
        .w = state->win->width,
        .h = state->win->height
    };
    _update_screen_rect(state, screen_rect, buttons->texture);
    
    for (mgp_u32 i = 0; i < _NUM_BUTTONS; i++) {
        _button* button = &buttons->buttons[i];
        
        mgp_vec4f fg_col = button->foreground_col;
        mgp_vec4f bg_col = button->background_col;
        if (button->toggled) {
            bg_col = button->toggled_bg_col;
        } else if (button->hovered) {
            bg_col = button->hovered_bg_col;
        }

        _draw_screen_rect(state, button->rect, button->uv_rect, 0.0f, bg_col, fg_col);
    }
}


static void _delete_framebuffer(_mgp_state* state) {
    _framebuffer* fb = &state->fb;

    glDeleteFramebuffers(1, &fb->framebuffer);
    glDeleteTextures(1, &fb->texture);

    glDeleteProgram(fb->shader);

    glDeleteVertexArrays(1, &fb->vertex_array);
    glDeleteBuffers(1, &fb->vertex_buffer);
}
static void _delete_text_data(_mgp_state* state) {
    _text_data* text_data = &state->text_data;
    
    glDeleteProgram(text_data->shader);
    glDeleteTextures(1, &text_data->texture);
    glDeleteBuffers(1, &text_data->pos_pattern_buffer);
}
static void _delete_legend(_mgp_state* state) {
    _legend* legend = &state->legend;

    _delete_text_batch(&legend->text_batch);
}
static void _delete_screen_rect(_mgp_state* state) {
    _screen_rect* screen_rect = &state->screen_rect;
    
    glDeleteProgram(screen_rect->shader);
    glDeleteTextures(1, &screen_rect->default_texture);
    glDeleteVertexArrays(1, &screen_rect->vertex_array);
    glDeleteBuffers(1, &screen_rect->vertex_buffer);
}
static void _delete_buttons(_mgp_state* state) {
    _buttons* buttons = &state->buttons;

    glDeleteTextures(1, &buttons->texture);
}
static void _delete_graph_shaders(_mgp_state* state) {
    glDeleteProgram(state->quads.shader);
    glDeleteProgram(state->lines.shader);
    glDeleteProgram(state->points.shader);
}
static void _delete_graph_buffers(_mgp_state* state) {
    glDeleteVertexArrays(1, &state->quads.vertex_array);
    glDeleteBuffers(1, &state->quads.vertex_buffer);
    glDeleteBuffers(1, &state->quads.index_buffer);

    glDeleteVertexArrays(1, &state->lines.vertex_array);
    glDeleteBuffers(1, &state->lines.vertex_buffer);
    glDeleteBuffers(1, &state->lines.index_buffer);

    glDeleteVertexArrays(1, &state->points.vertex_array);
    glDeleteBuffers(1, &state->points.pos_pattern_buffer);
    glDeleteBuffers(1, &state->points.vertex_buffer);
}

static void _init_text_batch(_mgp_state* state, _text_batch* text_batch) {
    glGenVertexArrays(1, &text_batch->vertex_array);
    glBindVertexArray(text_batch->vertex_array);

    glBindBuffer(GL_ARRAY_BUFFER, state->text_data.pos_pattern_buffer);

    text_batch->vertex_buffer = glh_create_buffer(
        GL_ARRAY_BUFFER, sizeof(_text_vert) * text_batch->capacity, NULL, GL_STREAM_DRAW
    );
}

static void _draw_text_batch(_mgp_state* state, _text_batch* text_batch) {
    _text_data* text_data = &state->text_data;

    glUseProgram(text_data->shader);

    if (state->win_change) {
        // TODO: add option for non framebuffer text?
        _view win_view = {
            .left = 0,
            .right = state->fb.fb_rect.w,
            .top = 0,
            .bottom = state->fb.fb_rect.h
        };
        
        _ortho_mat(text_data->mat, win_view);
        glUniformMatrix4fv(text_data->mat_loc, 1, GL_FALSE, text_data->mat);
    }

    mgp_vec4f col = text_batch->color;
    glUniform4f(text_data->color_loc, col.x, col.y, col.z, col.w);
    glUniform1i(text_data->texture_loc, 0);

    glBindTexture(GL_TEXTURE_2D, text_data->texture);
    glActiveTexture(GL_TEXTURE0);

    glBindVertexArray(text_batch->vertex_array);
    glBindBuffer(GL_ARRAY_BUFFER, text_data->pos_pattern_buffer);

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);
    glEnableVertexAttribArray(2);

    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 0, (void*)0);

    glBindBuffer(GL_ARRAY_BUFFER, text_batch->vertex_buffer);
    
    glVertexAttribDivisor(1, 1);
    glVertexAttribDivisor(2, 1);

    glVertexAttribPointer(1, 4, GL_FLOAT, GL_FALSE, sizeof(_text_vert), (void*)offsetof(_text_vert, rect));
    glVertexAttribPointer(2, 4, GL_FLOAT, GL_FALSE, sizeof(_text_vert), (void*)offsetof(_text_vert, uv_rect));

    glDrawArraysInstanced(GL_TRIANGLES, 0, 6, text_batch->size);
    
    glVertexAttribDivisor(1, 0);
    glVertexAttribDivisor(2, 0);
    
    glDisableVertexAttribArray(0);
    glDisableVertexAttribArray(1);
    glDisableVertexAttribArray(2);
}
static void _delete_text_batch(_text_batch* text_batch) {
    glDeleteVertexArrays(1, &text_batch->vertex_array);
    glDeleteBuffers(1, &text_batch->vertex_buffer);
}

/*
=============================
=============================
        MISC SOURCES
=============================
=============================
*/

mgp_string8 _str8_from_range(mgp_u8* start, mgp_u8* end) {
    return (mgp_string8){ (mgp_u64)(end - start), start };
}
mgp_string8 _str8_from_cstr(mgp_u8* cstr) {
    mgp_u8* ptr = cstr;
    for(; *ptr != 0; ptr += 1);
    return _str8_from_range(cstr, ptr);
}

mgp_string8 _str8_copy(mg_arena* arena, mgp_string8 str) {
    mgp_string8 out = { 
        .str = (mgp_u8*)mga_push(arena, str.size),
        .size = str.size
    };

    memcpy(out.str, str.str, str.size);
    
    return out;
}

mgp_vec2f _vec2f_add(mgp_vec2f a, mgp_vec2f b) {
    return (mgp_vec2f){
        a.x + b.x, a.y + b.y
    };
}
mgp_vec2f _vec2f_sub(mgp_vec2f a, mgp_vec2f b) {
    return (mgp_vec2f){
        a.x - b.x, a.y - b.y
    };
}
mgp_vec2f _vec2f_scl(mgp_vec2f v, mgp_f32 s) {
    return (mgp_vec2f){
        v.x * s, v.y * s
    };
}
mgp_f32 _vec2f_dot(mgp_vec2f a, mgp_vec2f b) {
    return a.x * b.x + a.y * b.y;
}
mgp_vec2f _vec2f_nrm(mgp_vec2f v) {
    mgp_f32 l = sqrtf(v.x * v.x + v.y * v.y);
    assert(l != 0 && "Cannot normalize mgp_vec2f of length zero");
    mgp_f32 r = 1 / l;
    return (mgp_vec2f){ v.x * r, v.y * r };
}
mgp_f32 _vec2f_len(mgp_vec2f v) {
    return sqrtf(v.x * v.x + v.y * v.y);
}

// Only works if +y is down
mgp_b32 _vec2f_in_rectf(mgp_rectf r, mgp_vec2f p) {
    return (p.x > r.x && p.x < r.x + r.w && p.y > r.y && p.y < r.y + r.h);
}

/*
=============================
=============================
      GRAPHICS SOURCES
=============================
=============================
*/

mga_u32 glh_create_shader(const char* vertex_source, const char* fragment_source) {
    mga_u32 vertex_shader;
    vertex_shader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertex_shader, 1, &vertex_source, NULL);
    glCompileShader(vertex_shader);
    
    mgp_i32 success = GL_TRUE;
    glGetShaderiv(vertex_shader, GL_COMPILE_STATUS, &success);
    if(success == GL_FALSE) {
        char info_log[512];
        glGetShaderInfoLog(vertex_shader, 512, NULL, info_log);
        printf("Failed to compile vertex shader: %s", info_log);
    }
    
    mga_u32 fragment_shader;
    fragment_shader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragment_shader, 1, &fragment_source, NULL);
    glCompileShader(fragment_shader);

    glGetShaderiv(fragment_shader, GL_COMPILE_STATUS, &success);
    if(!success) {
        char info_log[512];
        glGetShaderInfoLog(fragment_shader, 512, NULL, info_log);
        printf("Failed to compile fragment shader: %s", info_log);
    }

    mga_u32 shader_program;
    shader_program = glCreateProgram();
    glAttachShader(shader_program, vertex_shader);
    glAttachShader(shader_program, fragment_shader);
    glLinkProgram(shader_program);

    glGetProgramiv(shader_program, GL_LINK_STATUS, &success);
    if(!success) {
        char info_log[512];
        glGetProgramInfoLog(shader_program, 512, NULL, info_log);
        printf("Failed to link shader: %s", info_log);
    }
    
    glDeleteShader(vertex_shader);
    glDeleteShader(fragment_shader);

    return shader_program;
}

mga_u32 glh_create_buffer(mga_u32 buffer_type, mgp_u64 size, void* data, mga_u32 draw_type) {
    mga_u32 buffer = 0;

    glGenBuffers(1, &buffer);
    glBindBuffer(buffer_type, buffer);
    glBufferData(buffer_type, size, data, draw_type);

    return buffer;
}

#if defined(PLATFORM_LINUX)

#include <X11/Xlib.h>
#include <X11/Xutil.h>

#include <GL/glx.h>
#include <GL/gl.h>

typedef struct _gfx_win_backend {
    Display* display;
    mga_i32 screen;
    GLXFBConfig fb_config;
    Window window;
    GLXContext gl_context;
    Atom del_atom;
} _gfx_win_backend;

#define X(ret, name, args) gl_##name##_func name = NULL;
    _OPENGL_FUNCS
#undef X

gfx_window* gfx_win_create(mg_arena* arena, mga_u32 width, mga_u32 height, mgp_string8 title) {
    gfx_window* win = MGA_PUSH_ZERO_STRUCT(arena, gfx_window);

    *win = (gfx_window){
        .title = title,
        .width = width,
        .height = height,
        .backend = MGA_PUSH_ZERO_STRUCT(arena, _gfx_win_backend)
    };

    win->backend->display = XOpenDisplay(NULL);
    if (win->backend->display == NULL) {
        fprintf(stderr, "Failed to open X11 display");
        return NULL;
    }

    win->backend->screen = DefaultScreen(win->backend->display);
    mga_i32 major_version = 0;
    mga_i32 minor_version = 0;
    glXQueryVersion(win->backend->display, &major_version, &minor_version);
    if (major_version <= 0 || minor_version <= 1) {
        XCloseDisplay(win->backend->display);
        fprintf(stderr, "Invalid GLX version");
        return NULL;
    }

    mga_i32 fbc_attribs[] = {
        GLX_X_RENDERABLE, True,
        GLX_DRAWABLE_TYPE, GLX_WINDOW_BIT,
        GLX_RENDER_TYPE, GLX_RGBA_BIT,
        GLX_X_VISUAL_TYPE, GLX_TRUE_COLOR,
        GLX_DOUBLEBUFFER, True,
        GLX_RED_SIZE, 8,
        GLX_GREEN_SIZE, 8,
        GLX_BLUE_SIZE, 8,
        GLX_ALPHA_SIZE, 8,
        GLX_DEPTH_SIZE, 0,
        GLX_STENCIL_SIZE, 0,
        None
    };

    mga_i32 fb_count = 0;
    GLXFBConfig* fbc = glXChooseFBConfig(win->backend->display, win->backend->screen, fbc_attribs, &fb_count);
    if (fbc == NULL) {
        XCloseDisplay(win->backend->display);
        fprintf(stderr, "Failed to retrieve framebuffer");
        return NULL;
    }

    mga_i32 best_fbc = -1, worst_fbc = -1, best_num_samp = -1, worst_num_samp = 9999;
    for (mga_i32 i = 0; i < fb_count; i++) {
        XVisualInfo* vi = glXGetVisualFromFBConfig(win->backend->display, fbc[i]);

        if (vi == NULL) {
            XFree(vi);
            continue;
        }

        mga_i32 sample_bufs = 0, samples = 0;
        glXGetFBConfigAttrib(win->backend->display, fbc[i], GLX_SAMPLE_BUFFERS, &sample_bufs);
        glXGetFBConfigAttrib(win->backend->display, fbc[i], GLX_SAMPLES, &samples);

        if (best_fbc < 0 || (sample_bufs && samples > best_num_samp)) {
            best_fbc = i;
            best_num_samp = samples;
        }
        if (worst_fbc < 0 || (!sample_bufs || samples < worst_num_samp)) {
            worst_fbc = i;
            worst_num_samp = samples;
        }

        XFree(vi);
    }

    win->backend->fb_config = fbc[best_fbc];

    XFree(fbc);

    XVisualInfo* visual = glXGetVisualFromFBConfig(win->backend->display, win->backend->fb_config);
    if (visual == NULL) {
        XCloseDisplay(win->backend->display);
        fprintf(stderr, "Cannot create visual window");
        
        return NULL;
    }

    XSetWindowAttributes window_attribs = {
        .border_pixel = BlackPixel(win->backend->display, win->backend->screen),
        .background_pixel = WhitePixel(win->backend->display, win->backend->screen),
        .override_redirect = True,
        .colormap = XCreateColormap(win->backend->display, RootWindow(win->backend->display, win->backend->screen), visual->visual, AllocNone),
        .event_mask = ExposureMask | ButtonPressMask | ButtonReleaseMask | PointerMotionMask // | KeyPressMask | KeyReleaseMask
    };

    win->backend->window = XCreateWindow(
        win->backend->display,
        RootWindow(win->backend->display, win->backend->screen),
        0, 0, width, height, 0,
        visual->depth, InputOutput, visual->visual,
        CWBackPixel | CWColormap | CWBorderPixel | CWEventMask,
        &window_attribs
    );

    win->backend->del_atom = XInternAtom(win->backend->display, "WM_DELETE_WINDOW", 0);
    XSetWMProtocols(win->backend->display, win->backend->window, &win->backend->del_atom, 1);

    XMapWindow(win->backend->display, win->backend->window);

    XFree(visual);

    // TODO: createContexAttribsARB

    win->backend->gl_context = glXCreateNewContext(win->backend->display, win->backend->fb_config, GLX_RGBA_TYPE, 0, true);

    XSync(win->backend->display, false);

    XFreeColormap(win->backend->display, window_attribs.colormap);

    glXMakeCurrent(win->backend->display, win->backend->window, win->backend->gl_context);
    
    glViewport(0, 0, width, height);

    #define X(ret, name, args) name = (gl_##name##_func)glXGetProcAddress((const GLubyte*)#name);
        _OPENGL_FUNCS
    #undef X

    mga_temp scratch = mga_scratch_get(NULL, 0);
    mga_u8* title_cstr = MGA_PUSH_ZERO_ARRAY(scratch.arena, mga_u8, title.size + 1);
    memcpy(title_cstr, title.str, title.size);
    XStoreName(win->backend->display, win->backend->window, (char*)title_cstr);
    mga_scratch_release(scratch);

    return win;
}
void gfx_win_destroy(gfx_window* win) {
    glXDestroyContext(win->backend->display, win->backend->gl_context);

    XDestroyWindow(win->backend->display, win->backend->window);
    XCloseDisplay(win->backend->display);
}

void gfx_win_process_events(gfx_window* win) {
    memcpy(win->prev_mouse_buttons, win->mouse_buttons, sizeof(win->prev_mouse_buttons));
    
    while (XPending(win->backend->display)) {
        XEvent e = { 0 };
        XNextEvent(win->backend->display, &e);

        switch(e.type) {
            case Expose: {
                glViewport(0, 0, e.xexpose.width, e.xexpose.height);
                win->width = e.xexpose.width;
                win->height = e.xexpose.height;
            } break;
            case ButtonPress: {
                win->mouse_buttons[e.xbutton.button - 1] = true;
            } break;
            case ButtonRelease: {
                win->mouse_buttons[e.xbutton.button - 1] = false;
            } break;
            case MotionNotify: {
                win->mouse_pos.x = (mgp_f32)e.xmotion.x;
                win->mouse_pos.y = (mgp_f32)e.xmotion.y;
            } break;
            case ClientMessage: {
                if ((mgp_i64)e.xclient.data.l[0] == (mgp_i64)win->backend->del_atom) {
                    win->should_close = true;
                }
            } break;
        }
    }
}

void gfx_win_make_current(gfx_window* win) {
    glXMakeCurrent(win->backend->display, win->backend->window, win->backend->gl_context);
}
void gfx_win_clear(gfx_window* win) {
    UNUSED(win);
    
    glClear(GL_COLOR_BUFFER_BIT);
}
void gfx_win_swap_buffers(gfx_window* win) {
    glXSwapBuffers(win->backend->display, win->backend->window);
}

#elif defined(PLATFORM_WIN32)

typedef struct {
    mgp_u64 size;
    mgp_u16* str;
} _mgp_string16;

typedef struct {
    mgp_u32 code_point;
    mgp_u32 size;
} _mgp_string_decode;

// https://github.com/skeeto/branchless-utf8/blob/master/utf8.h
// https://github.com/Mr-4th-Programming/mr4th/blob/main/src/base/base_string.cpp
_mgp_string_decode _mgp_str_decode_utf8(mgp_u8* str, mgp_u32 cap) {
    static mgp_u8 lengths[] = {
        1, 1, 1, 1, // 000xx
        1, 1, 1, 1,
        1, 1, 1, 1,
        1, 1, 1, 1,
        0, 0, 0, 0, // 100xx
        0, 0, 0, 0,
        2, 2, 2, 2, // 110xx
        3, 3,       // 1110x
        4,          // 11110
        0,          // 11111
    };
    static mgp_u8 first_byte_mask[] = { 0, 0x7F, 0x1F, 0x0F, 0x07 };
    static mgp_u8 final_shift[] = { 0, 18, 12, 6, 0 };

    _mgp_string_decode out = { .size=0 };

    if (cap > 0) {
        out.code_point = '#';
        out.size = 1;
        
        mgp_u32 len = lengths[str[0] >> 3];
        if (len > 0 && len <= cap) {
            mgp_u32 code_point = (str[0] & first_byte_mask[len]) << 18;
            switch(len) {
                case 4: code_point |= (str[3] & 0b00111111) << 0;
                // fall through
                case 3: code_point |= (str[2] & 0b00111111) << 6;
                // fall through
                case 2: code_point |= (str[1] & 0b00111111) << 12;
                // fall through
                default: break;
            }
            code_point >>= final_shift[len];

            out.code_point = code_point;
            out.size = len;
        }
    }

    return out;
}

// https://en.wikipedia.org/wiki/UTF-16
mgp_u32 _mgp_str_encode_utf16(mgp_u16* dst, mgp_u32 code_point) {
    mgp_u32 size = 0;

    if (code_point < 0x010000) {
        dst[0] = (mgp_u16)code_point;
        size = 1;
    } else {
        mgp_u32 u_p = code_point - 0x10000;
        dst[0] = 0xd800 + (u_p >> 10);
        dst[0] = 0xdc00 + (u_p & 0x3ff);
        size = 2;
    }

    return size;
}

_mgp_string16 _mgp_str16_from_str8(mg_arena* arena, mgp_string8 str) {
    mgp_u16* buff = MGA_PUSH_ARRAY(arena, mgp_u16, str.size * 2 + 1);

    mgp_u16* ptr_out = buff;
    mgp_u8* ptr = str.str;
    mgp_u8* ptr_end = str.str + str.size;
    for(;ptr < ptr_end;){
        _mgp_string_decode decode = _mgp_str_decode_utf8(ptr, (mgp_u32)(ptr_end - ptr));
        mgp_u32 encode_size = _mgp_str_encode_utf16(ptr_out, decode.code_point);

        ptr += decode.size;
        ptr_out += encode_size;
    }

    *ptr_out = 0;

    mgp_u64 alloc_count = str.size * 2 + 1;
    mgp_u64 string_count = (mgp_u64)(ptr_out - buff);
    mgp_u64 unused_count = alloc_count - string_count - 1;
    mga_pop(arena, unused_count * (sizeof(*buff)));

    return (_mgp_string16){ .str = buff, .size = string_count };

}

typedef struct _gfx_win_backend {
    HINSTANCE instance;
    WNDCLASS win_class;
    HWND window;
    HDC device_context;
    HGLRC gl_context;
} _gfx_win_backend;

#define X(ret, name, args) gl_##name##_func name = NULL;
    _OPENGL_FUNCS
#undef X

static HMODULE w32_opengl_module = NULL;

static void* w32_gl_load(const char* name);

#define WGL_CONTEXT_MAJOR_VERSION_ARB             0x2091
#define WGL_CONTEXT_MINOR_VERSION_ARB             0x2092
#define WGL_CONTEXT_PROFILE_MASK_ARB              0x9126
#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB          0x00000001
#define WGL_CONTEXT_FLAGS_ARB                     0x2094
#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB    0x0002

#define WGL_SWAP_METHOD_ARB                       0x2007
#define WGL_SWAP_EXCHANGE_ARB                     0x2028
#define WGL_DRAW_TO_WINDOW_ARB                    0x2001
#define WGL_ACCELERATION_ARB                      0x2003
#define WGL_SUPPORT_OPENGL_ARB                    0x2010
#define WGL_DOUBLE_BUFFER_ARB                     0x2011
#define WGL_PIXEL_TYPE_ARB                        0x2013
#define WGL_COLOR_BITS_ARB                        0x2014
#define WGL_DEPTH_BITS_ARB                        0x2022
#define WGL_STENCIL_BITS_ARB                      0x2023
#define WGL_FULL_ACCELERATION_ARB                 0x2027
#define WGL_TYPE_RGBA_ARB                         0x202B

typedef BOOL WINAPI (wglChoosePixelFormatARB_func)(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
typedef HGLRC WINAPI (wglCreateContextAttribsARB_func)(HDC hdc, HGLRC hShareContext, const int *attribList);

static LRESULT CALLBACK w32_window_proc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

gfx_window* gfx_win_create(mg_arena* arena, mgp_u32 width, mgp_u32 height, mgp_string8 title) {
    gfx_window* win = MGA_PUSH_ZERO_STRUCT(arena, gfx_window);

    *win = (gfx_window){ 
        .title = title,
        .width = width,
        .height = height,
        .backend = MGA_PUSH_ZERO_STRUCT(arena, _gfx_win_backend)
    };

    win->backend->instance = GetModuleHandle(0);

    if (w32_opengl_module == NULL) {
        w32_opengl_module = LoadLibraryW(L"opengl32.dll");
    }

    wglChoosePixelFormatARB_func* wglChoosePixelFormatARB = NULL;
    wglCreateContextAttribsARB_func* wglCreateContextAttribsARB = NULL;

    // Bootstrap window
    {
        WNDCLASS bootstrap_wnd_class = (WNDCLASSW){
            .hInstance = win->backend->instance,
            .lpfnWndProc = DefWindowProc,
            .lpszClassName = L"Bootstrap Window Class"
        };
        RegisterClassW(&bootstrap_wnd_class);

        HWND bootstrap_window = CreateWindowW(
            bootstrap_wnd_class.lpszClassName,
            NULL, 0,
            CW_USEDEFAULT, CW_USEDEFAULT,
            CW_USEDEFAULT, CW_USEDEFAULT,
            0, 0, win->backend->instance, 0
        );

        HDC bootstrap_dc = GetDC(bootstrap_window);

        PIXELFORMATDESCRIPTOR pfd = (PIXELFORMATDESCRIPTOR){
            .nSize = sizeof(PIXELFORMATDESCRIPTOR),
            .nVersion = 1,
            .dwFlags = PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER | PFD_DRAW_TO_WINDOW,
            .iPixelType = PFD_TYPE_RGBA,
            .cColorBits = 24,
            .iLayerType = PFD_MAIN_PLANE
        };

        mgp_i32 pixel_format = ChoosePixelFormat(bootstrap_dc, &pfd);
        SetPixelFormat(bootstrap_dc, pixel_format, &pfd);

        HGLRC bootstrap_context = wglCreateContext(bootstrap_dc);
        wglMakeCurrent(bootstrap_dc, bootstrap_context);

        wglChoosePixelFormatARB = (wglChoosePixelFormatARB_func*)w32_gl_load("wglChoosePixelFormatARB");
        wglCreateContextAttribsARB = (wglCreateContextAttribsARB_func*)w32_gl_load("wglCreateContextAttribsARB");

        wglMakeCurrent(bootstrap_dc, NULL);
        wglDeleteContext(bootstrap_context);
        ReleaseDC(bootstrap_window, bootstrap_dc);
        UnregisterClassW(bootstrap_wnd_class.lpszClassName, win->backend->instance);
        DestroyWindow(bootstrap_window);
    }
    
    win->backend->win_class = (WNDCLASSW){
        .hInstance = win->backend->instance,
        .lpfnWndProc = w32_window_proc,
        .lpszClassName = L"Magicalbat Window Class",
        .hCursor = LoadCursor(NULL, IDC_ARROW)
    };
    RegisterClassW(&win->backend->win_class);

    RECT win_rect = { 0, 0, width, height };
    AdjustWindowRect(&win_rect, WS_OVERLAPPEDWINDOW, FALSE);
    
    mga_temp scratch = mga_scratch_get(NULL, 0);
    _mgp_string16 title16 = _mgp_str16_from_str8(scratch.arena, title);

    win->backend->window = CreateWindowW(
        win->backend->win_class.lpszClassName,
        title16.str,
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT,
        win_rect.right - win_rect.left, win_rect.bottom - win_rect.top,
        NULL, NULL, win->backend->instance, NULL
    );

    mga_scratch_release(scratch);

    SetPropW(win->backend->window, L"gfx_win", win);

    win->backend->device_context = GetDC(win->backend->window);

    mgp_i32 pixel_format_attribs[] = {
        WGL_DRAW_TO_WINDOW_ARB, GL_TRUE,
        WGL_ACCELERATION_ARB,   WGL_FULL_ACCELERATION_ARB,
        WGL_SWAP_METHOD_ARB,    WGL_SWAP_EXCHANGE_ARB,
        WGL_SUPPORT_OPENGL_ARB, GL_TRUE,
        WGL_DOUBLE_BUFFER_ARB,  GL_TRUE,
        WGL_PIXEL_TYPE_ARB,     WGL_TYPE_RGBA_ARB,
        WGL_COLOR_BITS_ARB,     24,
        WGL_DEPTH_BITS_ARB,     0,
        WGL_STENCIL_BITS_ARB,   0,
        0
    };

    mgp_i32 pixel_format = 0;
    mgp_u32 num_formats = 0;
    wglChoosePixelFormatARB(win->backend->device_context, pixel_format_attribs, NULL, 1, &pixel_format, &num_formats);

    PIXELFORMATDESCRIPTOR pfd = { 0 };
    DescribePixelFormat(win->backend->device_context, pixel_format, sizeof(pfd), &pfd);
    SetPixelFormat(win->backend->device_context, pixel_format, &pfd);

    mgp_i32 context_attribs[] = {
        WGL_CONTEXT_MAJOR_VERSION_ARB, 4,
        WGL_CONTEXT_MINOR_VERSION_ARB, 5,
        WGL_CONTEXT_FLAGS_ARB, WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB,
        WGL_CONTEXT_PROFILE_MASK_ARB, WGL_CONTEXT_CORE_PROFILE_BIT_ARB,
        0
    };

    win->backend->gl_context = wglCreateContextAttribsARB(win->backend->device_context, NULL, context_attribs);

    wglMakeCurrent(win->backend->device_context, win->backend->gl_context);

    #define X(ret, name, args) name = (gl_##name##_func)w32_gl_load(#name);
        _OPENGL_FUNCS
    #undef X

    if (w32_opengl_module != NULL) {
        FreeLibrary(w32_opengl_module);
    }

    ShowWindow(win->backend->window, SW_SHOW);
    glViewport(0, 0, win->width, win->height);

    return win;
}
void gfx_win_destroy(gfx_window* win) {
    wglMakeCurrent(win->backend->device_context, NULL);
    wglDeleteContext(win->backend->gl_context);
    ReleaseDC(win->backend->window, win->backend->device_context);
    UnregisterClassW(win->backend->win_class.lpszClassName, win->backend->instance);
    DestroyWindow(win->backend->window);
}

void gfx_win_process_events(gfx_window* win) {
    memcpy(win->prev_mouse_buttons, win->mouse_buttons, sizeof(win->prev_mouse_buttons));

    MSG msg = { 0 };
    while (PeekMessageW(&msg, NULL, 0, 0, PM_REMOVE)) {
        TranslateMessage(&msg);
        DispatchMessageW(&msg);
    }
}

void gfx_win_make_current(gfx_window* win) {
    wglMakeCurrent(win->backend->device_context, win->backend->gl_context);
}
void gfx_win_clear(gfx_window* win) {
    UNUSED(win);

    glClear(GL_COLOR_BUFFER_BIT);
}
void gfx_win_swap_buffers(gfx_window* win) {
    SwapBuffers(win->backend->device_context);
}

static LRESULT CALLBACK w32_window_proc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    gfx_window* win = GetPropW(hWnd, L"gfx_win");
    
    switch (uMsg) {
        case WM_MOUSEMOVE: {
            win->mouse_pos.x = (mgp_f32)((lParam) & 0xffff);
            win->mouse_pos.y = (mgp_f32)((lParam >> 16) & 0xffff);
        } break;

        case WM_LBUTTONDOWN: {
            win->mouse_buttons[0] = true;
        } break;
        case WM_LBUTTONUP: {
            win->mouse_buttons[0] = false;
        } break;
        case WM_MBUTTONDOWN: {
            win->mouse_buttons[1] = true;
        } break;
        case WM_MBUTTONUP: {
            win->mouse_buttons[1] = false;
        } break;
        case WM_RBUTTONDOWN: {
            win->mouse_buttons[2] = true;
        } break;
        case WM_RBUTTONUP: {
            win->mouse_buttons[2] = false;
        } break;

        case WM_SIZE: {
            mgp_u32 width = (mgp_u32)LOWORD(lParam);
            mgp_u32 height = (mgp_u32)HIWORD(lParam);

            win->width = width;
            win->height = height;

            glViewport(0, 0, width, height);
        } break;

        case WM_CLOSE: {
            win->should_close = true;
        } break;
    }

    return DefWindowProc(hWnd, uMsg, wParam, lParam);
}

// https://www.khronos.org/opengl/wiki/Load_OpenGL_Functions
static void* w32_gl_load(const char* name) {
    void* p = (void*)wglGetProcAddress(name);
    if (p == 0 || (p == (void*)0x1) || (p == (void*)0x2) || (p == (void*)0x3) || (p == (void*)-1)) {
        p = (void*)GetProcAddress(w32_opengl_module, name);
    }
    return p;
}

#endif

/*
=============================
=============================
         FONT DATA
=============================
=============================
*/

static const mgp_u32 _font_img_width = 253;
static const mgp_u32 _font_img_height = 196;
static const mgp_u8 _font_img[] = {
    0x1a,0x23,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x13,0x1c,0x24,0x2c,0x34,0x3a,0x40,0x44,0x46,0x46,0x46,0x45,0x41,0x3d,0x37,0x2f,
    0x28,0x25,0x2d,0x34,0x3b,0x40,0x44,0x46,0x46,0x46,0x44,0x41,0x3c,0x35,0x2e,0x27,0x1e,0x16,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x44,0x44,0x43,0x40,0x3c,0x37,
    0x30,0x29,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x43,0x41,0x3d,0x38,0x31,0x2a,0x11,0x19,0x21,0x29,0x30,0x36,0x3b,0x3f,0x43,0x45,0x46,0x46,0x45,0x42,
    0x3e,0x38,0x31,0x2a,0x2a,0x32,0x39,0x3e,0x43,0x46,0x46,0x46,0x45,0x43,0x40,0x3b,0x35,0x2f,0x27,0x20,0x18,0x10,0x30,0x37,0x3d,0x42,0x45,0x46,0x46,0x46,0x44,0x40,
    0x3b,0x34,0x2d,0x25,0x09,0x11,0x18,0x1f,0x25,0x2b,0x31,0x36,0x3a,0x3e,0x41,0x43,0x45,0x46,0x46,0x46,0x45,0x43,0x41,0x3e,0x3a,0x36,0x31,0x2b,0x25,0x1e,0x18,0x10,
    0x09,0x19,0x20,0x26,0x2c,0x31,0x37,0x3d,0x42,0x44,0x45,0x45,0x44,0x41,0x3c,0x36,0x2f,0x2a,0x24,0x1e,0x16,0x0f,0x15,0x1c,0x23,0x2a,0x30,0x35,0x3a,0x3e,0x41,0x44,
    0x45,0x46,0x46,0x45,0x43,0x41,0x3d,0x39,0x34,0x2e,0x28,0x21,0x1b,0x13,0x12,0x1a,0x21,0x28,0x2e,0x33,0x38,0x3b,0x3e,0x3f,0x40,0x40,0x3e,0x3d,0x3d,0x3d,0x3b,0x37,
    0x32,0x2c,0x25,0x26,0x2d,0x33,0x38,0x3b,0x3d,0x3d,0x3d,0x3e,0x40,0x40,0x3f,0x3d,0x3b,0x37,0x32,0x2d,0x27,0x20,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x29,0x32,
    0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x19,0x22,0x2b,0x33,0x3b,0x43,0x49,0x4e,0x50,0x51,0x51,0x4f,0x4b,0x45,0x3f,0x37,0x2e,0x2b,0x34,
    0x3c,0x43,0x49,0x4e,0x51,0x51,0x51,0x4f,0x4a,0x44,0x3d,0x36,0x2d,0x25,0x1c,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3f,0x38,0x2f,0x30,
    0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x39,0x31,0x17,0x1f,0x28,0x30,0x38,0x3f,0x44,0x49,0x4d,0x4f,0x51,0x51,0x50,0x4c,0x47,0x40,0x39,
    0x30,0x31,0x39,0x41,0x48,0x4d,0x50,0x51,0x51,0x50,0x4d,0x49,0x44,0x3e,0x36,0x2f,0x27,0x1f,0x16,0x37,0x3f,0x46,0x4c,0x4f,0x51,0x51,0x51,0x4e,0x49,0x43,0x3c,0x34,
    0x2b,0x10,0x18,0x20,0x27,0x2e,0x34,0x3a,0x3f,0x44,0x48,0x4b,0x4e,0x50,0x50,0x51,0x51,0x50,0x4e,0x4b,0x48,0x44,0x3f,0x3a,0x34,0x2d,0x27,0x1f,0x18,0x10,0x20,0x28,
    0x2f,0x35,0x3a,0x40,0x46,0x4b,0x4f,0x50,0x50,0x4e,0x4b,0x45,0x3e,0x39,0x33,0x2d,0x25,0x1e,0x16,0x1c,0x24,0x2b,0x32,0x39,0x3e,0x43,0x48,0x4b,0x4e,0x50,0x51,0x51,
    0x50,0x4e,0x4b,0x47,0x42,0x3d,0x37,0x30,0x2a,0x22,0x1b,0x19,0x21,0x29,0x30,0x37,0x3c,0x41,0x45,0x48,0x4a,0x4b,0x4a,0x49,0x48,0x48,0x48,0x45,0x41,0x3b,0x34,0x2d,
    0x2e,0x35,0x3c,0x41,0x45,0x48,0x48,0x48,0x49,0x4a,0x4b,0x4a,0x48,0x45,0x40,0x3b,0x36,0x2f,0x28,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x2f,0x38,0x40,0x49,0x50,
    0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x1f,0x28,0x31,0x3a,0x42,0x4a,0x52,0x57,0x5b,0x5c,0x5b,0x59,0x54,0x4e,0x46,0x3d,0x34,0x31,0x3a,0x43,0x4b,0x52,
    0x58,0x5b,0x5c,0x5b,0x59,0x53,0x4c,0x45,0x3c,0x33,0x2b,0x22,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x59,0x59,0x58,0x54,0x4e,0x47,0x3e,0x36,0x36,0x3f,0x47,0x4e,
    0x54,0x58,0x59,0x59,0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x37,0x1c,0x25,0x2e,0x37,0x3f,0x47,0x4d,0x53,0x57,0x5a,0x5b,0x5c,0x5a,0x56,0x4f,0x48,0x3f,0x36,0x37,0x40,
    0x48,0x50,0x56,0x5a,0x5c,0x5b,0x5a,0x57,0x53,0x4d,0x45,0x3e,0x36,0x2d,0x24,0x1b,0x3e,0x46,0x4e,0x55,0x59,0x5c,0x5c,0x5b,0x58,0x52,0x4b,0x43,0x3a,0x31,0x17,0x1f,
    0x27,0x2f,0x36,0x3d,0x43,0x48,0x4e,0x52,0x55,0x58,0x5a,0x5b,0x5c,0x5b,0x5a,0x58,0x55,0x52,0x4e,0x48,0x43,0x3c,0x36,0x2e,0x27,0x1f,0x16,0x28,0x2f,0x37,0x3e,0x44,
    0x49,0x4f,0x55,0x59,0x5b,0x5b,0x59,0x54,0x4e,0x47,0x42,0x3c,0x34,0x2d,0x25,0x1d,0x23,0x2b,0x33,0x3a,0x41,0x47,0x4d,0x51,0x56,0x59,0x5b,0x5c,0x5b,0x5a,0x58,0x54,
    0x50,0x4b,0x46,0x3f,0x38,0x31,0x2a,0x21,0x20,0x28,0x30,0x38,0x3f,0x45,0x4b,0x4f,0x53,0x54,0x55,0x55,0x53,0x53,0x53,0x52,0x4f,0x4a,0x43,0x3c,0x34,0x34,0x3d,0x44,
    0x4a,0x4f,0x52,0x53,0x53,0x53,0x55,0x55,0x54,0x52,0x4e,0x4a,0x44,0x3e,0x37,0x2f,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x33,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,
    0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x24,0x2d,0x37,0x3f,0x48,0x51,0x59,0x61,0x65,0x66,0x66,0x63,0x5d,0x54,0x4b,0x42,0x38,0x35,0x3f,0x48,0x52,0x5a,0x61,0x65,0x66,
    0x66,0x62,0x5b,0x54,0x4b,0x42,0x39,0x30,0x27,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x64,0x64,0x62,0x5d,0x56,0x4d,0x44,0x3a,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,
    0x64,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x3c,0x20,0x2a,0x33,0x3d,0x46,0x4e,0x56,0x5c,0x61,0x64,0x66,0x66,0x64,0x5e,0x57,0x4e,0x44,0x3b,0x3b,0x45,0x4f,0x57,0x5f,
    0x64,0x66,0x66,0x64,0x61,0x5b,0x54,0x4d,0x45,0x3c,0x33,0x29,0x20,0x43,0x4c,0x55,0x5d,0x63,0x66,0x66,0x65,0x61,0x5a,0x52,0x48,0x3f,0x35,0x1e,0x26,0x2e,0x36,0x3e,
    0x45,0x4b,0x52,0x57,0x5c,0x5f,0x62,0x64,0x65,0x66,0x66,0x65,0x62,0x5f,0x5b,0x57,0x51,0x4b,0x45,0x3d,0x36,0x2e,0x25,0x1d,0x2e,0x37,0x3f,0x46,0x4d,0x52,0x57,0x5e,
    0x63,0x65,0x65,0x62,0x5d,0x55,0x50,0x4a,0x44,0x3c,0x34,0x2c,0x23,0x2a,0x32,0x3a,0x42,0x49,0x50,0x56,0x5b,0x60,0x63,0x65,0x66,0x66,0x65,0x62,0x5e,0x5a,0x54,0x4e,
    0x47,0x40,0x39,0x30,0x28,0x26,0x2f,0x37,0x3f,0x47,0x4e,0x54,0x59,0x5d,0x5f,0x60,0x5f,0x5d,0x5d,0x5d,0x5c,0x59,0x52,0x4b,0x42,0x39,0x3a,0x43,0x4c,0x53,0x59,0x5d,
    0x5d,0x5d,0x5d,0x5f,0x60,0x5f,0x5c,0x58,0x53,0x4d,0x46,0x3e,0x36,0x2e,0x00,0x00,0x00,0x00,0x00,0x00,0x2c,0x36,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,
    0x5d,0x53,0x49,0x3f,0x29,0x33,0x3c,0x45,0x4e,0x57,0x60,0x68,0x6f,0x71,0x71,0x6c,0x63,0x5a,0x50,0x45,0x3b,0x38,0x42,0x4c,0x56,0x60,0x69,0x70,0x71,0x70,0x6a,0x62,
    0x5a,0x51,0x48,0x3f,0x36,0x2d,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,
    0x6c,0x66,0x5d,0x54,0x4a,0x40,0x24,0x2e,0x38,0x42,0x4b,0x54,0x5d,0x65,0x6a,0x6e,0x70,0x71,0x6d,0x65,0x5c,0x52,0x48,0x3e,0x3f,0x49,0x53,0x5d,0x66,0x6e,0x71,0x70,
    0x6f,0x6a,0x63,0x5c,0x54,0x4b,0x41,0x38,0x2e,0x24,0x46,0x51,0x5a,0x64,0x6c,0x71,0x71,0x70,0x69,0x60,0x56,0x4c,0x42,0x38,0x24,0x2c,0x35,0x3d,0x45,0x4d,0x54,0x5a,
    0x60,0x65,0x69,0x6d,0x6f,0x70,0x71,0x70,0x6f,0x6d,0x69,0x65,0x60,0x5a,0x53,0x4c,0x45,0x3d,0x34,0x2b,0x22,0x34,0x3d,0x46,0x4e,0x55,0x5b,0x61,0x65,0x6d,0x70,0x70,
    0x6c,0x64,0x5f,0x59,0x53,0x4b,0x43,0x3a,0x31,0x28,0x30,0x38,0x41,0x49,0x51,0x58,0x5f,0x64,0x69,0x6d,0x70,0x71,0x70,0x6f,0x6c,0x68,0x63,0x5d,0x56,0x4f,0x48,0x3f,
    0x37,0x2e,0x2c,0x35,0x3e,0x46,0x4e,0x56,0x5d,0x62,0x67,0x69,0x6b,0x6a,0x67,0x68,0x68,0x67,0x61,0x5a,0x51,0x48,0x3e,0x3f,0x48,0x52,0x5a,0x62,0x67,0x68,0x68,0x67,
    0x6a,0x6b,0x69,0x66,0x62,0x5c,0x55,0x4e,0x45,0x3d,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x38,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,
    0x41,0x2e,0x37,0x41,0x4a,0x54,0x5d,0x66,0x6f,0x77,0x7b,0x7b,0x71,0x67,0x5c,0x52,0x47,0x3c,0x39,0x44,0x4e,0x59,0x63,0x6e,0x78,0x7b,0x79,0x71,0x68,0x60,0x57,0x4d,
    0x44,0x3b,0x31,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x75,0x6b,0x61,
    0x57,0x4c,0x42,0x28,0x32,0x3c,0x46,0x50,0x59,0x63,0x6c,0x74,0x79,0x7b,0x7b,0x74,0x69,0x5f,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6a,0x75,0x7b,0x7b,0x79,0x72,0x6b,
    0x62,0x59,0x4f,0x46,0x3b,0x31,0x27,0x48,0x53,0x5d,0x68,0x72,0x7b,0x7b,0x78,0x6e,0x63,0x59,0x4e,0x44,0x39,0x2a,0x33,0x3b,0x44,0x4c,0x54,0x5c,0x63,0x69,0x6f,0x73,
    0x77,0x79,0x7b,0x7b,0x7b,0x7a,0x77,0x73,0x6f,0x69,0x62,0x5b,0x54,0x4c,0x43,0x3a,0x31,0x28,0x3a,0x43,0x4c,0x55,0x5d,0x64,0x6a,0x6e,0x73,0x7b,0x7a,0x72,0x6d,0x68,
    0x62,0x5a,0x52,0x49,0x40,0x37,0x2d,0x35,0x3e,0x47,0x50,0x58,0x60,0x67,0x6e,0x73,0x77,0x7a,0x7b,0x7b,0x79,0x76,0x72,0x6c,0x65,0x5e,0x56,0x4e,0x45,0x3c,0x33,0x31,
    0x3a,0x43,0x4d,0x55,0x5d,0x65,0x6c,0x71,0x73,0x75,0x74,0x71,0x73,0x73,0x70,0x69,0x5f,0x55,0x4b,0x41,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x73,0x71,0x74,0x75,0x73,
    0x70,0x6b,0x64,0x5d,0x54,0x4b,0x42,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x32,0x3c,
    0x46,0x4f,0x59,0x62,0x6b,0x74,0x7d,0x83,0x79,0x70,0x66,0x5c,0x51,0x47,0x3c,0x39,0x43,0x4e,0x58,0x63,0x6d,0x76,0x80,0x80,0x77,0x6e,0x65,0x5c,0x53,0x49,0x40,0x36,
    0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x84,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,
    0x2a,0x34,0x3f,0x49,0x53,0x5d,0x67,0x71,0x7b,0x83,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x86,0x82,0x7a,0x71,0x67,0x5d,0x53,
    0x48,0x3e,0x34,0x29,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x2f,0x38,0x41,0x4a,0x53,0x5b,0x63,0x6b,0x72,0x78,0x7d,0x82,0x84,0x86,
    0x86,0x86,0x84,0x82,0x7d,0x77,0x71,0x6a,0x62,0x5a,0x52,0x49,0x40,0x36,0x2d,0x3e,0x48,0x51,0x5b,0x63,0x6c,0x73,0x78,0x7b,0x80,0x7d,0x7b,0x77,0x71,0x69,0x61,0x58,
    0x4e,0x45,0x3b,0x31,0x3a,0x43,0x4d,0x56,0x5f,0x67,0x6f,0x76,0x7c,0x82,0x85,0x86,0x86,0x84,0x80,0x7b,0x74,0x6d,0x65,0x5d,0x54,0x4b,0x41,0x38,0x35,0x3f,0x48,0x52,
    0x5b,0x64,0x6c,0x74,0x7a,0x7e,0x80,0x7e,0x7a,0x7d,0x7d,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x7b,0x7e,0x80,0x7e,0x79,0x73,0x6c,
    0x63,0x5a,0x51,0x47,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x40,0x4a,0x54,0x5d,
    0x67,0x70,0x7a,0x83,0x7e,0x75,0x6b,0x62,0x59,0x4f,0x45,0x3a,0x37,0x41,0x4b,0x55,0x5e,0x68,0x71,0x7b,0x84,0x7c,0x74,0x6a,0x61,0x57,0x4e,0x44,0x3a,0x43,0x4d,0x58,
    0x63,0x6d,0x78,0x83,0x82,0x7d,0x7d,0x75,0x6b,0x60,0x55,0x4b,0x40,0x41,0x4c,0x56,0x61,0x6b,0x76,0x7d,0x7d,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x2b,0x36,0x41,
    0x4b,0x56,0x60,0x6a,0x75,0x80,0x85,0x7d,0x7b,0x74,0x69,0x5f,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6a,0x75,0x7b,0x7d,0x85,0x7e,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x35,
    0x2a,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x33,0x3d,0x46,0x50,0x59,0x62,0x6a,0x72,0x7a,0x81,0x86,0x82,0x7e,0x7b,0x7b,0x7b,0x7e,
    0x82,0x87,0x81,0x79,0x71,0x69,0x60,0x57,0x4e,0x44,0x3b,0x31,0x41,0x4c,0x56,0x60,0x69,0x72,0x7b,0x82,0x86,0x84,0x84,0x85,0x80,0x78,0x6f,0x66,0x5c,0x52,0x48,0x3e,
    0x34,0x3e,0x48,0x51,0x5b,0x64,0x6e,0x76,0x7e,0x85,0x84,0x80,0x7d,0x7d,0x81,0x85,0x84,0x7c,0x74,0x6c,0x62,0x59,0x4f,0x46,0x3c,0x38,0x42,0x4c,0x56,0x60,0x6a,0x73,
    0x7b,0x83,0x85,0x82,0x83,0x84,0x82,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x84,0x82,0x82,0x85,0x82,0x7a,0x72,0x68,0x5f,0x55,
    0x4b,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x38,0x42,0x4d,0x57,0x62,0x6c,0x75,0x78,0x78,0x74,0x6a,0x60,0x56,0x4b,0x41,0x3a,0x44,0x4e,0x58,0x62,0x6c,0x75,0x7e,
    0x83,0x79,0x70,0x66,0x5d,0x53,0x4a,0x41,0x37,0x34,0x3d,0x47,0x50,0x59,0x63,0x6c,0x75,0x80,0x83,0x79,0x6f,0x65,0x5b,0x52,0x48,0x3e,0x43,0x4d,0x58,0x63,0x6d,0x78,
    0x83,0x82,0x76,0x73,0x6f,0x67,0x5e,0x54,0x49,0x3f,0x40,0x4a,0x54,0x5e,0x68,0x70,0x73,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x2c,0x36,0x41,0x4c,0x56,0x61,
    0x6c,0x76,0x82,0x83,0x78,0x71,0x6d,0x65,0x5c,0x52,0x48,0x3e,0x3f,0x49,0x53,0x5d,0x66,0x6e,0x71,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x2b,0x48,0x53,
    0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x38,0x42,0x4b,0x55,0x5e,0x68,0x70,0x79,0x82,0x83,0x7c,0x77,0x73,0x75,0x74,0x71,0x73,0x77,0x7d,0x84,
    0x81,0x78,0x6f,0x66,0x5c,0x53,0x49,0x3f,0x35,0x44,0x4e,0x59,0x63,0x6d,0x77,0x81,0x85,0x7d,0x80,0x7d,0x80,0x87,0x7e,0x74,0x6a,0x60,0x56,0x4b,0x41,0x36,0x41,0x4b,
    0x55,0x5f,0x69,0x73,0x7c,0x85,0x82,0x7b,0x75,0x73,0x73,0x76,0x7c,0x84,0x83,0x7a,0x71,0x67,0x5d,0x53,0x49,0x3f,0x3b,0x45,0x50,0x5a,0x64,0x6e,0x78,0x82,0x83,0x7b,
    0x77,0x78,0x80,0x88,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x87,0x7e,0x77,0x77,0x7c,0x85,0x80,0x77,0x6d,0x62,0x58,0x4e,0x44,0x00,
    0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x76,0x6b,0x61,0x56,0x4c,0x41,0x3d,0x47,0x51,0x5b,0x66,0x70,0x79,0x84,0x7e,0x75,0x6b,
    0x61,0x58,0x4f,0x45,0x3c,0x33,0x2f,0x38,0x42,0x4b,0x54,0x5e,0x67,0x71,0x7b,0x85,0x7d,0x73,0x69,0x5f,0x55,0x4b,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,
    0x6c,0x66,0x60,0x58,0x4f,0x46,0x3c,0x3d,0x47,0x50,0x59,0x61,0x66,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x32,0x3a,0x42,0x4c,0x56,0x61,0x6c,0x76,0x82,
    0x83,0x77,0x6c,0x64,0x5e,0x57,0x4e,0x44,0x3b,0x3b,0x45,0x4f,0x57,0x5f,0x64,0x6d,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x42,0x3a,0x31,0x48,0x53,0x5d,0x68,0x73,
    0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x3c,0x46,0x4f,0x59,0x63,0x6c,0x76,0x80,0x84,0x7b,0x74,0x77,0x7c,0x80,0x80,0x7b,0x7b,0x7c,0x7c,0x7c,0x85,0x7d,0x74,
    0x6a,0x60,0x56,0x4c,0x42,0x37,0x45,0x50,0x5a,0x65,0x6f,0x7a,0x85,0x80,0x76,0x80,0x7d,0x7a,0x84,0x82,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x44,0x4e,0x58,0x63,0x6d,
    0x77,0x81,0x85,0x7b,0x73,0x6c,0x68,0x69,0x6d,0x75,0x7d,0x87,0x7e,0x75,0x6b,0x60,0x56,0x4c,0x42,0x3d,0x48,0x52,0x5c,0x67,0x71,0x7b,0x86,0x7e,0x74,0x6d,0x70,0x79,
    0x84,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x78,0x6f,0x6d,0x76,0x80,0x84,0x7a,0x70,0x65,0x5b,0x50,0x46,0x00,0x00,0x00,0x00,
    0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x7d,0x86,0x7b,0x72,0x67,0x5d,0x53,0x4a,
    0x40,0x37,0x2d,0x2a,0x33,0x3d,0x46,0x50,0x5a,0x64,0x6e,0x78,0x83,0x82,0x77,0x6d,0x62,0x58,0x4e,0x43,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x58,
    0x51,0x49,0x41,0x38,0x38,0x42,0x4a,0x52,0x58,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x41,0x49,0x51,0x58,0x61,0x6c,0x76,0x82,0x83,0x77,0x6c,
    0x62,0x57,0x4f,0x48,0x3f,0x36,0x37,0x40,0x48,0x50,0x58,0x63,0x6d,0x78,0x83,0x81,0x76,0x6c,0x61,0x57,0x51,0x49,0x40,0x37,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,
    0x6e,0x64,0x59,0x4e,0x44,0x39,0x3f,0x49,0x53,0x5d,0x67,0x71,0x7b,0x85,0x7d,0x74,0x79,0x80,0x86,0x83,0x83,0x84,0x7d,0x87,0x7c,0x77,0x81,0x82,0x78,0x6e,0x63,0x59,
    0x4e,0x44,0x3a,0x45,0x50,0x5b,0x65,0x70,0x7a,0x85,0x80,0x74,0x80,0x7d,0x76,0x7a,0x78,0x74,0x6b,0x61,0x56,0x4c,0x41,0x37,0x46,0x50,0x5b,0x65,0x70,0x7a,0x84,0x82,
    0x77,0x6d,0x64,0x5e,0x5f,0x66,0x6f,0x7a,0x84,0x83,0x78,0x6d,0x63,0x59,0x4e,0x44,0x3e,0x49,0x53,0x5e,0x68,0x73,0x7d,0x87,0x7b,0x71,0x67,0x6c,0x77,0x82,0x83,0x77,
    0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x81,0x75,0x6b,0x69,0x73,0x7d,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,
    0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x41,0x4c,0x56,0x61,0x6b,0x75,0x81,0x84,0x79,0x6f,0x64,0x5a,0x50,0x46,0x3c,0x32,0x28,
    0x25,0x2e,0x38,0x42,0x4c,0x57,0x61,0x6b,0x75,0x81,0x84,0x7a,0x6f,0x65,0x5a,0x50,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x42,0x3b,
    0x32,0x33,0x3b,0x43,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x3c,0x45,0x4f,0x58,0x60,0x66,0x6c,0x77,0x82,0x82,0x76,0x6c,0x61,0x57,0x4c,
    0x42,0x39,0x30,0x31,0x39,0x42,0x4d,0x57,0x62,0x6c,0x77,0x83,0x82,0x76,0x6c,0x66,0x60,0x57,0x4e,0x45,0x3b,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,
    0x4e,0x44,0x39,0x42,0x4c,0x56,0x60,0x6b,0x75,0x80,0x83,0x79,0x77,0x80,0x86,0x7e,0x78,0x78,0x80,0x85,0x84,0x7a,0x73,0x7d,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x3b,
    0x44,0x4f,0x5a,0x64,0x6e,0x79,0x83,0x83,0x7b,0x80,0x7d,0x73,0x6f,0x6e,0x6b,0x65,0x5c,0x53,0x49,0x3f,0x35,0x47,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x75,0x6a,0x60,
    0x56,0x58,0x62,0x6c,0x77,0x83,0x84,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3e,0x49,0x54,0x5e,0x69,0x73,0x7e,0x86,0x7b,0x71,0x66,0x6c,0x76,0x82,0x83,0x77,0x6c,0x62,0x57,
    0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x75,0x6a,0x68,0x73,0x7d,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x42,0x4d,0x58,0x62,0x6c,0x77,0x83,0x83,0x77,0x6d,0x63,0x58,0x4e,0x43,0x39,0x2e,0x24,0x21,0x2b,0x35,
    0x40,0x4a,0x54,0x5f,0x69,0x74,0x7e,0x86,0x7b,0x71,0x66,0x5c,0x51,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x2d,0x37,
    0x42,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x3e,0x49,0x53,0x5d,0x67,0x6f,0x73,0x79,0x84,0x80,0x75,0x6a,0x60,0x55,0x4b,0x41,0x36,0x2b,
    0x2c,0x37,0x42,0x4c,0x57,0x61,0x6b,0x76,0x81,0x83,0x79,0x73,0x6f,0x66,0x5c,0x52,0x48,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,
    0x44,0x4e,0x59,0x63,0x6d,0x78,0x83,0x80,0x75,0x7b,0x85,0x80,0x77,0x6f,0x70,0x7b,0x85,0x82,0x77,0x71,0x7b,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,0x3b,0x43,0x4d,0x57,
    0x61,0x6b,0x75,0x7d,0x84,0x85,0x82,0x7e,0x7b,0x77,0x72,0x6a,0x63,0x5a,0x51,0x48,0x3e,0x34,0x47,0x52,0x5c,0x67,0x72,0x7c,0x88,0x7e,0x74,0x6a,0x5f,0x5f,0x60,0x61,
    0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3e,0x48,0x53,0x5d,0x68,0x73,0x7d,0x87,0x7c,0x72,0x69,0x6e,0x78,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,
    0x4d,0x58,0x63,0x6d,0x78,0x83,0x81,0x76,0x6c,0x6a,0x74,0x7e,0x86,0x7b,0x70,0x65,0x5b,0x51,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4e,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x57,0x4c,0x42,0x37,0x2c,0x22,0x1e,0x29,0x33,0x3e,0x48,0x53,
    0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x2d,0x37,0x42,0x4d,0x57,
    0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x7e,0x82,0x83,0x7b,0x72,0x68,0x5d,0x53,0x49,0x3f,0x34,0x2a,0x2b,0x35,0x40,
    0x4a,0x54,0x5f,0x69,0x73,0x7b,0x84,0x81,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x45,0x4f,0x5a,
    0x64,0x6f,0x7a,0x84,0x7d,0x74,0x7e,0x87,0x7c,0x72,0x68,0x6f,0x7a,0x85,0x80,0x75,0x72,0x7c,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x3b,0x41,0x4a,0x53,0x5d,0x66,0x6e,
    0x75,0x7b,0x80,0x83,0x85,0x86,0x82,0x79,0x72,0x69,0x5f,0x56,0x4c,0x42,0x37,0x47,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x75,0x6a,0x62,0x68,0x6b,0x68,0x6d,0x77,0x83,
    0x84,0x79,0x6f,0x64,0x5a,0x4f,0x45,0x3c,0x47,0x51,0x5c,0x66,0x70,0x7a,0x84,0x81,0x78,0x73,0x75,0x7c,0x86,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,
    0x6d,0x78,0x83,0x84,0x7a,0x72,0x71,0x79,0x82,0x83,0x78,0x6e,0x64,0x5a,0x4f,0x45,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x44,0x4e,0x59,0x64,0x6e,0x79,0x84,0x81,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x21,0x1e,0x29,0x33,0x3e,0x48,0x53,0x5d,0x68,0x73,
    0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x2d,0x37,0x42,0x4d,0x57,0x62,0x6c,0x77,
    0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x85,0x7d,0x76,0x6e,0x65,0x5b,0x51,0x47,0x3d,0x33,0x28,0x29,0x34,0x3e,0x48,0x52,0x5c,
    0x65,0x6f,0x77,0x7e,0x85,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x45,0x50,0x5b,0x65,0x70,0x7b,
    0x85,0x7c,0x76,0x81,0x84,0x79,0x6f,0x67,0x72,0x7b,0x86,0x7c,0x72,0x75,0x80,0x83,0x79,0x6e,0x64,0x5a,0x4f,0x44,0x3a,0x45,0x4f,0x58,0x61,0x68,0x6b,0x6d,0x71,0x75,
    0x80,0x7d,0x80,0x87,0x81,0x77,0x6d,0x63,0x59,0x4f,0x44,0x3a,0x46,0x50,0x5b,0x65,0x70,0x7a,0x85,0x82,0x77,0x6d,0x68,0x71,0x75,0x72,0x6f,0x79,0x84,0x83,0x78,0x6e,
    0x63,0x59,0x4e,0x44,0x3a,0x44,0x4f,0x59,0x62,0x6c,0x76,0x7e,0x87,0x81,0x7d,0x7e,0x84,0x85,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,
    0x86,0x82,0x7c,0x7b,0x80,0x86,0x7d,0x74,0x6b,0x60,0x56,0x4c,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,
    0x56,0x4c,0x41,0x43,0x4e,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x2d,0x23,0x1f,0x2a,0x34,0x3f,0x49,0x54,0x5e,0x69,0x73,0x7e,0x87,0x7c,
    0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x2d,0x37,0x42,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x77,
    0x6c,0x62,0x57,0x4d,0x42,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x7a,0x7e,0x86,0x7c,0x73,0x69,0x5f,0x54,0x4a,0x40,0x35,0x2b,0x2c,0x36,0x40,0x4b,0x55,0x5f,0x6a,0x74,0x7d,
    0x85,0x7d,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x45,0x50,0x5b,0x65,0x70,0x7a,0x85,0x7c,0x76,
    0x81,0x84,0x79,0x6e,0x6c,0x75,0x80,0x85,0x7a,0x72,0x7a,0x84,0x80,0x75,0x6b,0x61,0x57,0x4d,0x43,0x38,0x48,0x53,0x5d,0x67,0x70,0x75,0x77,0x78,0x74,0x80,0x7d,0x77,
    0x81,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x3b,0x44,0x4e,0x59,0x63,0x6d,0x77,0x82,0x85,0x7b,0x72,0x6c,0x76,0x80,0x7b,0x77,0x7d,0x87,0x80,0x75,0x6b,0x60,0x56,0x4c,
    0x42,0x3a,0x45,0x4f,0x59,0x63,0x6c,0x71,0x77,0x7e,0x83,0x84,0x83,0x7d,0x83,0x82,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x81,0x85,
    0x85,0x83,0x7e,0x76,0x6f,0x66,0x5d,0x53,0x49,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,
    0x42,0x4d,0x57,0x62,0x6c,0x77,0x82,0x83,0x78,0x6e,0x63,0x59,0x4f,0x44,0x3a,0x30,0x26,0x23,0x2d,0x37,0x41,0x4b,0x56,0x60,0x6a,0x75,0x80,0x85,0x7b,0x70,0x66,0x5b,
    0x51,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2e,0x2f,0x37,0x42,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,
    0x4d,0x42,0x3d,0x47,0x51,0x5b,0x64,0x6b,0x6f,0x78,0x83,0x81,0x76,0x6b,0x61,0x56,0x4c,0x41,0x36,0x2d,0x2d,0x37,0x42,0x4c,0x57,0x62,0x6c,0x77,0x82,0x83,0x77,0x6f,
    0x6b,0x63,0x5a,0x50,0x46,0x3c,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x44,0x4f,0x5a,0x64,0x6e,0x79,0x84,0x7e,0x75,0x7e,0x86,0x7b,
    0x74,0x75,0x7b,0x84,0x83,0x79,0x7a,0x82,0x83,0x7a,0x71,0x67,0x5e,0x57,0x4e,0x44,0x3b,0x49,0x54,0x5e,0x69,0x73,0x7e,0x83,0x7d,0x74,0x80,0x7d,0x74,0x80,0x86,0x7b,
    0x70,0x65,0x5b,0x50,0x45,0x3b,0x41,0x4b,0x56,0x60,0x69,0x73,0x7c,0x85,0x82,0x7a,0x75,0x79,0x83,0x86,0x80,0x84,0x83,0x7a,0x71,0x67,0x5d,0x54,0x4b,0x42,0x3c,0x46,
    0x51,0x5b,0x66,0x71,0x7b,0x7b,0x79,0x78,0x79,0x78,0x79,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x7a,0x7b,0x79,0x75,
    0x6f,0x67,0x60,0x57,0x4e,0x45,0x3b,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x3d,0x45,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x41,0x4b,0x55,
    0x60,0x6a,0x74,0x7e,0x85,0x7a,0x70,0x66,0x5c,0x52,0x48,0x3e,0x34,0x2b,0x27,0x30,0x3a,0x44,0x4e,0x58,0x62,0x6d,0x77,0x82,0x83,0x78,0x6e,0x64,0x59,0x4f,0x45,0x43,
    0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4d,0x45,0x3d,0x35,0x35,0x3e,0x46,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x3a,
    0x43,0x4c,0x55,0x5c,0x62,0x6c,0x77,0x83,0x82,0x77,0x6c,0x62,0x57,0x4d,0x44,0x3c,0x33,0x34,0x3c,0x44,0x4d,0x57,0x62,0x6c,0x77,0x83,0x82,0x76,0x6c,0x62,0x5c,0x54,
    0x4c,0x42,0x39,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x43,0x4d,0x58,0x62,0x6c,0x77,0x81,0x82,0x77,0x7b,0x84,0x83,0x7d,0x7e,0x84,
    0x83,0x85,0x7e,0x83,0x83,0x7c,0x74,0x71,0x6d,0x65,0x5c,0x52,0x48,0x3e,0x48,0x52,0x5d,0x67,0x71,0x7b,0x86,0x80,0x76,0x80,0x7d,0x78,0x82,0x84,0x79,0x6f,0x65,0x5a,
    0x50,0x45,0x3b,0x3e,0x48,0x52,0x5b,0x64,0x6e,0x76,0x7e,0x85,0x83,0x7e,0x7c,0x7c,0x80,0x89,0x87,0x7c,0x76,0x72,0x6c,0x63,0x5a,0x50,0x45,0x3b,0x46,0x51,0x5b,0x65,
    0x70,0x7b,0x85,0x80,0x77,0x74,0x77,0x7d,0x87,0x7e,0x74,0x6a,0x60,0x55,0x4b,0x40,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x70,0x70,0x6f,0x6b,0x66,0x60,0x58,
    0x51,0x48,0x3f,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x3a,0x43,0x4c,0x54,0x5b,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3e,0x49,0x53,0x5d,0x67,0x72,
    0x7b,0x86,0x7d,0x73,0x69,0x5f,0x56,0x4c,0x42,0x39,0x30,0x2c,0x36,0x3f,0x48,0x52,0x5c,0x66,0x70,0x7a,0x84,0x80,0x75,0x6b,0x61,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,
    0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x5b,0x54,0x4c,0x43,0x3a,0x3a,0x44,0x4d,0x55,0x5c,0x62,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x35,0x3e,0x46,0x4d,
    0x56,0x61,0x6c,0x76,0x82,0x83,0x77,0x6c,0x62,0x59,0x53,0x4a,0x41,0x38,0x39,0x42,0x4b,0x53,0x5a,0x62,0x6d,0x77,0x83,0x81,0x75,0x6b,0x60,0x55,0x4d,0x45,0x3d,0x34,
    0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x40,0x4b,0x55,0x5f,0x69,0x73,0x7d,0x86,0x7c,0x75,0x7c,0x82,0x84,0x82,0x7c,0x80,0x84,0x83,
    0x81,0x7b,0x79,0x7b,0x7b,0x74,0x69,0x5f,0x54,0x4a,0x3f,0x46,0x50,0x5a,0x64,0x6e,0x78,0x82,0x85,0x7e,0x80,0x7d,0x80,0x87,0x80,0x75,0x6c,0x62,0x58,0x4e,0x43,0x39,
    0x3a,0x44,0x4d,0x56,0x5f,0x67,0x6f,0x76,0x7c,0x81,0x84,0x86,0x86,0x84,0x81,0x81,0x85,0x80,0x7b,0x71,0x67,0x5c,0x52,0x47,0x3a,0x45,0x4f,0x59,0x64,0x6e,0x77,0x81,
    0x87,0x82,0x80,0x81,0x85,0x82,0x79,0x70,0x67,0x5d,0x53,0x48,0x3e,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x65,0x64,0x61,0x5d,0x57,0x51,0x49,0x42,0x39,
    0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x3d,0x48,0x51,0x5b,0x63,0x6a,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3c,0x46,0x50,0x5a,0x64,0x6e,0x77,0x82,0x82,
    0x77,0x6d,0x63,0x5a,0x51,0x47,0x3e,0x35,0x31,0x3a,0x44,0x4d,0x57,0x60,0x6a,0x73,0x7d,0x85,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,
    0x82,0x76,0x6c,0x6a,0x63,0x5b,0x51,0x48,0x3d,0x3e,0x48,0x52,0x5c,0x64,0x6a,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x2f,0x37,0x41,0x4b,0x56,0x61,0x6b,
    0x75,0x81,0x83,0x77,0x6c,0x68,0x62,0x59,0x50,0x46,0x3c,0x3d,0x47,0x51,0x5a,0x62,0x68,0x6d,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x2e,0x48,0x53,0x5d,
    0x68,0x73,0x7d,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x3d,0x48,0x52,0x5b,0x65,0x6e,0x77,0x81,0x83,0x7b,0x75,0x78,0x79,0x77,0x73,0x76,0x79,0x79,0x76,0x79,0x80,
    0x85,0x7b,0x72,0x69,0x5e,0x54,0x49,0x3f,0x43,0x4d,0x56,0x60,0x6a,0x72,0x7a,0x82,0x85,0x86,0x86,0x84,0x80,0x78,0x70,0x67,0x5e,0x54,0x4b,0x41,0x36,0x35,0x3e,0x47,
    0x50,0x58,0x60,0x67,0x6d,0x72,0x77,0x7a,0x7b,0x7b,0x79,0x77,0x78,0x7d,0x83,0x7a,0x70,0x66,0x5c,0x51,0x47,0x38,0x42,0x4c,0x56,0x60,0x69,0x71,0x78,0x7d,0x81,0x82,
    0x81,0x7d,0x79,0x72,0x6a,0x62,0x59,0x4f,0x45,0x3b,0x43,0x4d,0x58,0x63,0x6d,0x78,0x80,0x80,0x76,0x6c,0x61,0x5a,0x57,0x53,0x4f,0x49,0x42,0x3a,0x33,0x2b,0x00,0x00,
    0x00,0x00,0x00,0x00,0x40,0x4a,0x55,0x5f,0x69,0x72,0x77,0x79,0x84,0x81,0x76,0x6c,0x61,0x56,0x4c,0x41,0x38,0x42,0x4c,0x56,0x60,0x69,0x73,0x7c,0x85,0x7b,0x72,0x68,
    0x5f,0x56,0x4c,0x43,0x39,0x35,0x3f,0x49,0x52,0x5c,0x65,0x6e,0x77,0x82,0x80,0x76,0x6d,0x63,0x5a,0x50,0x46,0x3c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x77,
    0x72,0x69,0x5f,0x55,0x4a,0x40,0x41,0x4b,0x55,0x60,0x6a,0x73,0x77,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x2b,0x36,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x83,
    0x78,0x75,0x71,0x68,0x5e,0x53,0x49,0x3f,0x3f,0x4a,0x54,0x5f,0x68,0x71,0x75,0x79,0x84,0x80,0x74,0x6a,0x5f,0x55,0x4a,0x40,0x35,0x2b,0x48,0x53,0x5d,0x68,0x73,0x7d,
    0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x3a,0x44,0x4e,0x57,0x60,0x69,0x72,0x79,0x82,0x85,0x7e,0x7a,0x77,0x75,0x74,0x74,0x76,0x79,0x7c,0x82,0x84,0x7c,0x75,0x6d,
    0x64,0x5b,0x51,0x47,0x3d,0x3f,0x48,0x52,0x5b,0x63,0x6b,0x72,0x77,0x7a,0x80,0x7d,0x7a,0x76,0x70,0x69,0x61,0x59,0x4f,0x46,0x3c,0x33,0x30,0x38,0x41,0x49,0x51,0x58,
    0x5e,0x64,0x69,0x6d,0x6f,0x70,0x70,0x6f,0x6c,0x6f,0x74,0x78,0x76,0x6c,0x62,0x59,0x4f,0x45,0x34,0x3e,0x48,0x51,0x5a,0x62,0x6a,0x6f,0x73,0x76,0x76,0x75,0x73,0x70,
    0x6a,0x63,0x5c,0x53,0x4a,0x41,0x37,0x42,0x4c,0x57,0x61,0x6a,0x72,0x74,0x74,0x71,0x69,0x5f,0x55,0x4d,0x4a,0x45,0x40,0x3a,0x33,0x2b,0x24,0x00,0x00,0x00,0x00,0x00,
    0x00,0x42,0x4c,0x57,0x61,0x6c,0x76,0x81,0x81,0x87,0x7e,0x74,0x6a,0x60,0x55,0x4b,0x40,0x35,0x3e,0x48,0x51,0x5b,0x65,0x6e,0x77,0x81,0x81,0x77,0x6e,0x64,0x5a,0x50,
    0x46,0x3b,0x37,0x42,0x4c,0x56,0x60,0x6a,0x73,0x7c,0x84,0x7b,0x72,0x68,0x5f,0x55,0x4c,0x42,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x83,0x81,0x75,0x6b,0x60,
    0x55,0x4b,0x40,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x83,0x84,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x2b,0x35,0x40,0x4a,0x55,0x5f,0x69,0x73,0x7e,0x87,0x82,0x80,0x74,
    0x6a,0x5f,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x82,0x87,0x7d,0x73,0x69,0x5e,0x54,0x49,0x3f,0x34,0x2a,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x79,0x6e,
    0x64,0x59,0x4e,0x44,0x39,0x36,0x3f,0x48,0x51,0x5a,0x63,0x6a,0x72,0x79,0x7e,0x83,0x85,0x82,0x81,0x80,0x80,0x81,0x83,0x85,0x81,0x7b,0x75,0x6d,0x66,0x5e,0x55,0x4c,
    0x43,0x39,0x3a,0x43,0x4c,0x54,0x5c,0x63,0x69,0x6d,0x74,0x80,0x7d,0x73,0x6d,0x68,0x61,0x5a,0x52,0x4a,0x41,0x38,0x2e,0x2a,0x32,0x3a,0x42,0x49,0x50,0x55,0x5b,0x5f,
    0x63,0x65,0x65,0x65,0x64,0x62,0x66,0x6a,0x6e,0x6d,0x67,0x5e,0x55,0x4b,0x41,0x30,0x39,0x43,0x4b,0x53,0x5b,0x61,0x66,0x69,0x6b,0x6c,0x6b,0x69,0x66,0x61,0x5b,0x54,
    0x4d,0x44,0x3b,0x32,0x3f,0x49,0x53,0x5c,0x63,0x69,0x6a,0x6a,0x68,0x62,0x5a,0x51,0x47,0x40,0x3b,0x37,0x31,0x2b,0x24,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x81,0x82,0x80,0x79,0x71,0x67,0x5d,0x53,0x49,0x3e,0x30,0x3a,0x43,0x4d,0x57,0x60,0x69,0x72,0x7b,0x82,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x38,
    0x43,0x4d,0x58,0x63,0x6d,0x78,0x82,0x7d,0x75,0x6c,0x63,0x5a,0x50,0x47,0x3d,0x34,0x43,0x4d,0x58,0x63,0x6d,0x78,0x80,0x80,0x80,0x80,0x75,0x6b,0x60,0x55,0x4b,0x40,
    0x41,0x4c,0x56,0x61,0x6c,0x76,0x80,0x80,0x80,0x80,0x77,0x6c,0x62,0x57,0x4d,0x42,0x29,0x33,0x3e,0x48,0x52,0x5c,0x66,0x6f,0x77,0x7e,0x82,0x80,0x74,0x6a,0x5f,0x54,
    0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x82,0x7e,0x77,0x6f,0x65,0x5b,0x51,0x47,0x3d,0x32,0x28,0x48,0x53,0x5d,0x68,0x73,0x7d,0x82,0x79,0x6e,0x64,0x59,0x4e,
    0x44,0x39,0x30,0x3a,0x43,0x4c,0x54,0x5b,0x63,0x6a,0x70,0x75,0x79,0x7c,0x80,0x81,0x82,0x82,0x81,0x7e,0x7b,0x77,0x72,0x6c,0x66,0x5e,0x57,0x4f,0x46,0x3d,0x34,0x35,
    0x3d,0x45,0x4d,0x54,0x5b,0x60,0x68,0x72,0x77,0x77,0x70,0x67,0x5e,0x59,0x52,0x4b,0x43,0x3b,0x32,0x29,0x23,0x2b,0x33,0x3a,0x41,0x47,0x4c,0x51,0x55,0x58,0x5a,0x5b,
    0x5b,0x5a,0x58,0x5c,0x61,0x63,0x63,0x5e,0x58,0x4f,0x46,0x3d,0x2b,0x34,0x3c,0x44,0x4c,0x52,0x57,0x5c,0x5f,0x61,0x61,0x61,0x5f,0x5c,0x58,0x53,0x4c,0x45,0x3e,0x35,
    0x2d,0x3b,0x44,0x4d,0x54,0x5b,0x5e,0x5f,0x5f,0x5e,0x5a,0x53,0x4b,0x43,0x39,0x32,0x2d,0x28,0x22,0x1c,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x42,0x4c,0x57,0x61,0x6a,
    0x72,0x75,0x76,0x75,0x71,0x6a,0x62,0x59,0x4f,0x46,0x3c,0x2c,0x35,0x3f,0x48,0x51,0x5a,0x63,0x6c,0x74,0x76,0x76,0x6f,0x66,0x5b,0x51,0x47,0x3c,0x38,0x42,0x4d,0x57,
    0x61,0x6b,0x74,0x76,0x75,0x6f,0x66,0x5d,0x54,0x4b,0x42,0x39,0x2f,0x42,0x4c,0x57,0x61,0x6a,0x72,0x74,0x74,0x74,0x74,0x71,0x68,0x5e,0x54,0x4a,0x3f,0x40,0x4b,0x55,
    0x5f,0x69,0x71,0x74,0x74,0x74,0x74,0x72,0x6a,0x60,0x56,0x4b,0x41,0x26,0x31,0x3b,0x45,0x4e,0x58,0x61,0x68,0x70,0x74,0x76,0x76,0x71,0x68,0x5e,0x54,0x49,0x3f,0x40,
    0x4a,0x54,0x5f,0x69,0x72,0x76,0x76,0x74,0x6f,0x68,0x60,0x57,0x4e,0x44,0x3a,0x30,0x26,0x47,0x52,0x5c,0x66,0x70,0x76,0x76,0x74,0x6c,0x62,0x58,0x4e,0x43,0x38,0x2b,
    0x34,0x3d,0x45,0x4c,0x54,0x5b,0x62,0x67,0x6b,0x70,0x72,0x74,0x75,0x76,0x76,0x75,0x74,0x71,0x6d,0x69,0x63,0x5d,0x57,0x4f,0x48,0x40,0x38,0x2f,0x2e,0x36,0x3e,0x45,
    0x4c,0x51,0x5a,0x63,0x6a,0x6c,0x6c,0x69,0x61,0x59,0x50,0x4a,0x43,0x3c,0x34,0x2c,0x24,0x1c,0x24,0x2b,0x32,0x38,0x3e,0x43,0x48,0x4b,0x4e,0x50,0x50,0x50,0x50,0x4e,
    0x53,0x57,0x59,0x58,0x55,0x50,0x49,0x40,0x38,0x25,0x2d,0x35,0x3d,0x43,0x49,0x4e,0x52,0x55,0x56,0x56,0x56,0x55,0x52,0x4e,0x4a,0x44,0x3d,0x36,0x2f,0x26,0x35,0x3e,
    0x45,0x4c,0x51,0x54,0x54,0x54,0x54,0x50,0x4b,0x44,0x3c,0x34,0x2b,0x24,0x1f,0x1a,0x14,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x49,0x53,0x5c,0x63,0x69,0x6b,0x6c,
    0x6b,0x67,0x62,0x5b,0x53,0x4a,0x41,0x38,0x27,0x31,0x3a,0x43,0x4b,0x54,0x5d,0x65,0x6a,0x6c,0x6b,0x67,0x60,0x57,0x4e,0x44,0x3a,0x36,0x40,0x4a,0x53,0x5d,0x65,0x6a,
    0x6c,0x6b,0x67,0x60,0x57,0x4f,0x46,0x3d,0x34,0x2a,0x3f,0x49,0x53,0x5c,0x63,0x69,0x6a,0x6a,0x6a,0x6a,0x68,0x62,0x59,0x50,0x47,0x3d,0x3d,0x47,0x51,0x5a,0x62,0x68,
    0x6a,0x6a,0x6a,0x6a,0x68,0x63,0x5b,0x52,0x48,0x3e,0x23,0x2d,0x37,0x40,0x49,0x52,0x59,0x61,0x66,0x6a,0x6c,0x6c,0x69,0x62,0x5a,0x50,0x46,0x3c,0x3d,0x47,0x51,0x5a,
    0x63,0x69,0x6c,0x6c,0x6a,0x66,0x60,0x59,0x51,0x48,0x3f,0x36,0x2c,0x22,0x45,0x4f,0x58,0x61,0x68,0x6b,0x6c,0x6b,0x65,0x5d,0x54,0x4b,0x41,0x36,0x25,0x2e,0x36,0x3d,
    0x45,0x4c,0x53,0x59,0x5e,0x62,0x66,0x68,0x6a,0x6b,0x6c,0x6c,0x6b,0x69,0x67,0x64,0x5f,0x5b,0x55,0x4e,0x48,0x40,0x39,0x31,0x29,0x27,0x2f,0x36,0x3d,0x43,0x4b,0x54,
    0x5b,0x60,0x62,0x62,0x5f,0x5a,0x52,0x4a,0x41,0x3b,0x34,0x2d,0x25,0x1d,0x15,0x1c,0x23,0x29,0x2f,0x35,0x39,0x3e,0x41,0x43,0x45,0x45,0x45,0x45,0x44,0x49,0x4d,0x4e,
    0x4e,0x4b,0x47,0x41,0x3a,0x32,0x1e,0x26,0x2e,0x34,0x3a,0x40,0x44,0x48,0x4a,0x4c,0x4c,0x4c,0x4a,0x48,0x44,0x40,0x3b,0x35,0x2f,0x27,0x20,0x2f,0x36,0x3d,0x43,0x47,
    0x49,0x4a,0x4a,0x49,0x46,0x42,0x3c,0x35,0x2d,0x25,0x1c,0x16,0x11,0x0b,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x3b,0x44,0x4d,0x54,0x5b,0x5f,0x60,0x61,0x60,0x5e,0x59,
    0x53,0x4c,0x44,0x3c,0x33,0x22,0x2b,0x34,0x3d,0x46,0x4e,0x56,0x5c,0x60,0x61,0x61,0x5e,0x59,0x51,0x49,0x40,0x36,0x32,0x3c,0x45,0x4e,0x56,0x5c,0x60,0x61,0x61,0x5e,
    0x58,0x51,0x48,0x40,0x37,0x2e,0x25,0x3b,0x44,0x4d,0x54,0x5b,0x5e,0x5f,0x5f,0x5f,0x5f,0x5e,0x59,0x53,0x4b,0x42,0x39,0x39,0x43,0x4b,0x53,0x5a,0x5e,0x5f,0x5f,0x5f,
    0x5f,0x5e,0x5a,0x54,0x4c,0x43,0x3a,0x1f,0x28,0x31,0x3a,0x43,0x4a,0x52,0x58,0x5d,0x60,0x61,0x61,0x5f,0x5a,0x53,0x4b,0x42,0x38,0x39,0x43,0x4c,0x54,0x5b,0x5f,0x61,
    0x61,0x60,0x5d,0x57,0x51,0x4a,0x42,0x3a,0x31,0x27,0x1e,0x40,0x49,0x52,0x59,0x5e,0x61,0x61,0x60,0x5d,0x56,0x4e,0x46,0x3c,0x33,0x1f,0x27,0x2e,0x36,0x3d,0x44,0x4a,
    0x4f,0x54,0x58,0x5b,0x5d,0x60,0x61,0x61,0x61,0x60,0x5f,0x5d,0x59,0x55,0x51,0x4c,0x46,0x40,0x39,0x31,0x2a,0x22,0x20,0x27,0x2e,0x34,0x3d,0x45,0x4c,0x52,0x56,0x57,
    0x57,0x55,0x51,0x4b,0x43,0x3b,0x33,0x2c,0x25,0x1e,0x16,0x0d,0x14,0x1a,0x20,0x26,0x2b,0x30,0x34,0x37,0x39,0x3b,0x3b,0x3b,0x3a,0x3b,0x3f,0x42,0x44,0x43,0x41,0x3d,
    0x38,0x32,0x2a,0x17,0x1f,0x26,0x2c,0x31,0x36,0x3a,0x3d,0x40,0x41,0x41,0x41,0x40,0x3e,0x3a,0x37,0x32,0x2c,0x26,0x20,0x18,0x27,0x2e,0x34,0x39,0x3d,0x3f,0x3f,0x3f,
    0x3f,0x3c,0x38,0x33,0x2d,0x26,0x1e,0x16,0x0e,0x07,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x3e,0x45,0x4c,0x51,0x54,0x56,0x56,0x56,0x54,0x4f,0x4a,0x44,0x3d,
    0x35,0x2d,0x1c,0x25,0x2e,0x37,0x3f,0x47,0x4d,0x53,0x56,0x56,0x56,0x54,0x50,0x4a,0x42,0x3a,0x31,0x2d,0x36,0x3f,0x47,0x4d,0x53,0x56,0x56,0x56,0x54,0x4f,0x49,0x42,
    0x39,0x31,0x28,0x1f,0x35,0x3e,0x45,0x4c,0x51,0x54,0x54,0x54,0x54,0x54,0x53,0x50,0x4a,0x44,0x3c,0x33,0x34,0x3c,0x44,0x4b,0x50,0x54,0x54,0x54,0x54,0x54,0x54,0x51,
    0x4b,0x45,0x3d,0x35,0x1a,0x23,0x2b,0x34,0x3b,0x43,0x49,0x4f,0x53,0x55,0x56,0x56,0x55,0x51,0x4b,0x44,0x3c,0x33,0x34,0x3d,0x45,0x4c,0x51,0x55,0x56,0x56,0x55,0x53,
    0x4e,0x49,0x42,0x3b,0x33,0x2b,0x22,0x19,0x3b,0x43,0x4a,0x50,0x54,0x56,0x56,0x56,0x53,0x4e,0x47,0x40,0x37,0x2e,0x18,0x1f,0x27,0x2e,0x35,0x3b,0x41,0x46,0x4a,0x4e,
    0x51,0x53,0x55,0x56,0x56,0x56,0x55,0x54,0x53,0x4f,0x4c,0x47,0x43,0x3d,0x37,0x31,0x2a,0x22,0x1b,0x18,0x1f,0x26,0x2e,0x36,0x3d,0x43,0x48,0x4b,0x4d,0x4d,0x4b,0x48,
    0x42,0x3c,0x34,0x2c,0x24,0x1d,0x16,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2f,0x36,0x3d,0x43,0x47,0x4a,0x4b,0x4c,0x4b,0x49,0x46,0x41,0x3c,0x35,0x2e,0x26,0x16,
    0x1f,0x28,0x30,0x38,0x3f,0x44,0x49,0x4b,0x4c,0x4c,0x4a,0x46,0x41,0x3b,0x33,0x2b,0x28,0x30,0x38,0x3f,0x44,0x49,0x4b,0x4c,0x4c,0x4a,0x46,0x41,0x3a,0x33,0x2b,0x22,
    0x1a,0x2f,0x36,0x3d,0x43,0x47,0x49,0x4a,0x4a,0x4a,0x4a,0x49,0x46,0x41,0x3c,0x34,0x2d,0x2d,0x35,0x3c,0x42,0x46,0x49,0x4a,0x4a,0x4a,0x4a,0x49,0x47,0x42,0x3d,0x36,
    0x2e,0x14,0x1d,0x25,0x2c,0x34,0x3b,0x40,0x45,0x49,0x4b,0x4c,0x4c,0x4b,0x47,0x43,0x3c,0x35,0x2d,0x2e,0x36,0x3d,0x43,0x48,0x4b,0x4c,0x4c,0x4b,0x49,0x45,0x40,0x3a,
    0x33,0x2c,0x24,0x1c,0x13,0x34,0x3b,0x42,0x47,0x4a,0x4c,0x4c,0x4b,0x49,0x45,0x3f,0x38,0x31,0x28,0x10,0x18,0x1f,0x26,0x2c,0x32,0x38,0x3c,0x40,0x44,0x47,0x49,0x4b,
    0x4b,0x4c,0x4c,0x4b,0x4a,0x48,0x45,0x42,0x3e,0x39,0x34,0x2e,0x28,0x22,0x1b,0x13,0x10,0x17,0x1f,0x27,0x2e,0x35,0x3a,0x3e,0x41,0x42,0x42,0x41,0x3e,0x39,0x34,0x2d,
    0x25,0x1d,0x15,0x0e,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x2e,0x34,0x39,0x3d,0x40,0x41,0x41,0x41,0x3f,0x3c,0x38,0x33,0x2d,0x26,0x1f,0x10,0x19,0x21,0x29,
    0x30,0x36,0x3b,0x3f,0x41,0x41,0x41,0x40,0x3d,0x38,0x32,0x2c,0x24,0x21,0x29,0x30,0x36,0x3b,0x3f,0x41,0x41,0x41,0x3f,0x3c,0x38,0x32,0x2b,0x24,0x1c,0x13,0x27,0x2e,
    0x34,0x39,0x3d,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3c,0x38,0x33,0x2d,0x25,0x26,0x2d,0x33,0x38,0x3c,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3d,0x39,0x34,0x2e,0x27,0x0e,0x16,
    0x1d,0x25,0x2c,0x32,0x37,0x3b,0x3e,0x41,0x41,0x41,0x40,0x3d,0x39,0x34,0x2d,0x26,0x27,0x2e,0x34,0x3a,0x3e,0x40,0x41,0x41,0x40,0x3e,0x3b,0x37,0x31,0x2b,0x24,0x1d,
    0x15,0x0d,0x2c,0x33,0x38,0x3d,0x40,0x41,0x41,0x41,0x3f,0x3b,0x36,0x30,0x29,0x22,0x09,0x10,0x17,0x1e,0x24,0x29,0x2e,0x32,0x36,0x3a,0x3c,0x3e,0x40,0x41,0x41,0x41,
    0x40,0x40,0x3e,0x3b,0x38,0x34,0x30,0x2b,0x26,0x20,0x19,0x13,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x21,0x28,0x2e,0x33,0x37,0x3b,0x3e,0x3f,0x40,0x40,0x3e,0x3d,0x3d,0x3d,0x3a,0x37,0x31,0x2b,0x24,0x0f,0x16,0x1d,
    0x22,0x28,0x2d,0x31,0x33,0x35,0x34,0x33,0x30,0x2b,0x26,0x20,0x19,0x1e,0x25,0x2c,0x32,0x37,0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x38,0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x37,
    0x32,0x2c,0x25,0x1e,0x00,0x01,0x0b,0x14,0x1c,0x25,0x2c,0x33,0x39,0x3e,0x42,0x44,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x21,0x19,0x10,0x07,0x00,0x00,0x29,0x31,
    0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x3f,0x3c,0x38,0x32,0x2d,0x26,0x1f,0x18,0x15,0x1c,0x23,0x29,0x2f,0x35,0x39,0x3e,0x41,0x44,0x45,0x46,
    0x46,0x45,0x43,0x41,0x3d,0x39,0x33,0x2d,0x27,0x20,0x18,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x40,0x3d,0x39,0x35,0x2f,0x2a,0x23,
    0x1c,0x15,0x29,0x30,0x37,0x3c,0x40,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x28,0x2f,0x36,0x3c,0x40,0x43,0x44,0x44,
    0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x42,0x3e,0x39,0x33,0x2c,0x13,0x1b,0x22,0x28,0x2e,0x34,0x39,0x3d,0x40,0x43,0x45,0x46,0x46,0x46,0x44,0x42,0x3f,0x3b,0x36,
    0x31,0x2b,0x25,0x1d,0x16,0x29,0x30,0x37,0x3c,0x40,0x43,0x44,0x44,0x43,0x42,0x3e,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x29,0x30,0x37,0x3c,0x41,0x45,0x48,0x4a,0x4b,0x4a,0x48,0x48,0x48,0x47,0x44,0x40,0x3a,0x33,0x2c,0x17,0x1e,0x25,0x2b,0x31,0x36,
    0x3b,0x3e,0x3f,0x3f,0x3d,0x3a,0x35,0x2f,0x28,0x20,0x25,0x2d,0x34,0x3b,0x41,0x45,0x48,0x48,0x48,0x48,0x46,0x42,0x45,0x48,0x48,0x48,0x48,0x45,0x41,0x3b,0x34,0x2d,
    0x25,0x00,0x06,0x10,0x19,0x22,0x2b,0x34,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x28,0x1f,0x16,0x0c,0x03,0x00,0x30,0x38,0x40,0x46,0x4b,
    0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4c,0x49,0x46,0x41,0x3b,0x35,0x2e,0x27,0x1f,0x1c,0x24,0x2b,0x32,0x38,0x3e,0x43,0x48,0x4b,0x4e,0x50,0x51,0x51,0x50,0x4e,
    0x4b,0x47,0x42,0x3c,0x36,0x2f,0x27,0x20,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4c,0x4a,0x47,0x43,0x3e,0x38,0x32,0x2b,0x24,0x1c,0x2f,
    0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x2f,0x37,0x3e,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,
    0x4e,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x3b,0x34,0x1b,0x22,0x2a,0x31,0x37,0x3d,0x42,0x47,0x4a,0x4d,0x4f,0x51,0x51,0x50,0x4f,0x4c,0x49,0x45,0x40,0x3a,0x34,0x2c,
    0x25,0x1d,0x2f,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x29,0x31,0x38,0x3f,0x46,0x4b,0x4f,0x53,0x54,0x55,0x54,0x53,0x53,0x53,0x52,0x4e,0x49,0x42,0x3b,0x32,0x1e,0x26,0x2d,0x34,0x3a,0x3f,0x44,0x48,0x4a,
    0x4a,0x47,0x43,0x3e,0x37,0x2f,0x27,0x2b,0x34,0x3c,0x43,0x4a,0x4f,0x52,0x53,0x53,0x52,0x50,0x4b,0x4f,0x52,0x53,0x53,0x52,0x4f,0x4a,0x43,0x3c,0x34,0x2b,0x00,0x0a,
    0x14,0x1e,0x27,0x31,0x3a,0x43,0x4a,0x51,0x56,0x59,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x37,0x2d,0x24,0x1a,0x11,0x07,0x00,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,
    0x59,0x59,0x59,0x59,0x58,0x56,0x53,0x4f,0x4a,0x44,0x3d,0x36,0x2e,0x26,0x22,0x2b,0x33,0x3a,0x41,0x47,0x4c,0x51,0x55,0x58,0x5a,0x5b,0x5b,0x5a,0x58,0x55,0x50,0x4b,
    0x45,0x3e,0x36,0x2f,0x27,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x57,0x54,0x51,0x4d,0x47,0x41,0x3a,0x33,0x2b,0x22,0x36,0x3e,0x47,0x4e,
    0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x35,0x3e,0x46,0x4d,0x53,0x57,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,
    0x59,0x59,0x56,0x51,0x4a,0x43,0x3a,0x21,0x2a,0x31,0x38,0x40,0x46,0x4b,0x50,0x54,0x58,0x5a,0x5b,0x5c,0x5b,0x59,0x56,0x53,0x4e,0x49,0x43,0x3b,0x34,0x2c,0x24,0x36,
    0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x56,0x51,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x2f,0x38,0x40,0x47,0x4e,0x54,0x59,0x5d,0x5f,0x60,0x5f,0x5d,0x5d,0x5d,0x5c,0x58,0x51,0x49,0x41,0x38,0x25,0x2d,0x35,0x3c,0x43,0x48,0x4e,0x52,0x54,0x54,0x51,0x4c,
    0x46,0x3e,0x36,0x2d,0x30,0x39,0x42,0x4b,0x52,0x59,0x5c,0x5d,0x5d,0x5d,0x59,0x54,0x59,0x5c,0x5d,0x5d,0x5c,0x59,0x52,0x4b,0x42,0x39,0x30,0x04,0x0e,0x18,0x22,0x2c,
    0x36,0x3f,0x49,0x51,0x59,0x60,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3c,0x32,0x28,0x1e,0x14,0x0b,0x01,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,
    0x63,0x63,0x60,0x5d,0x59,0x53,0x4c,0x45,0x3d,0x35,0x2c,0x29,0x31,0x3a,0x42,0x49,0x50,0x55,0x5b,0x5f,0x63,0x65,0x66,0x66,0x65,0x62,0x5e,0x59,0x54,0x4d,0x45,0x3e,
    0x36,0x2d,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x61,0x5f,0x5b,0x55,0x50,0x49,0x42,0x3a,0x31,0x29,0x3a,0x44,0x4d,0x56,0x5d,0x62,0x64,
    0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x3a,0x43,0x4c,0x55,0x5c,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x60,
    0x59,0x51,0x49,0x3f,0x28,0x30,0x38,0x40,0x47,0x4e,0x54,0x5a,0x5e,0x62,0x64,0x65,0x66,0x65,0x64,0x60,0x5d,0x57,0x52,0x4a,0x43,0x3b,0x33,0x2a,0x3a,0x44,0x4d,0x56,
    0x5d,0x62,0x64,0x64,0x63,0x5f,0x59,0x52,0x5a,0x60,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x3e,0x47,
    0x4f,0x56,0x5d,0x62,0x67,0x69,0x6b,0x6a,0x67,0x68,0x68,0x66,0x60,0x58,0x4f,0x46,0x3c,0x2a,0x33,0x3c,0x44,0x4b,0x51,0x57,0x5c,0x5f,0x5f,0x5b,0x55,0x4d,0x45,0x3c,
    0x32,0x34,0x3e,0x48,0x51,0x5a,0x61,0x67,0x68,0x68,0x67,0x62,0x5b,0x61,0x67,0x68,0x68,0x67,0x61,0x5a,0x51,0x48,0x3e,0x34,0x08,0x12,0x1c,0x26,0x30,0x3a,0x43,0x4d,
    0x57,0x60,0x68,0x6e,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x4a,0x40,0x36,0x2c,0x22,0x19,0x0f,0x05,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x6b,
    0x67,0x62,0x5b,0x54,0x4c,0x44,0x3a,0x31,0x2f,0x38,0x40,0x49,0x51,0x58,0x5e,0x64,0x69,0x6d,0x6f,0x71,0x71,0x6f,0x6c,0x68,0x62,0x5c,0x54,0x4d,0x45,0x3c,0x33,0x3f,
    0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x6c,0x69,0x64,0x5f,0x58,0x51,0x49,0x40,0x38,0x2f,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,
    0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x3d,0x47,0x51,0x5b,0x64,0x6b,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x68,0x60,0x57,0x4d,
    0x43,0x2d,0x36,0x3f,0x47,0x4f,0x56,0x5d,0x63,0x68,0x6c,0x6f,0x70,0x71,0x70,0x6e,0x6b,0x66,0x61,0x59,0x52,0x4a,0x42,0x39,0x30,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,
    0x6e,0x6d,0x68,0x60,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3a,0x44,0x4d,0x56,0x5e,0x65,
    0x6c,0x71,0x74,0x75,0x74,0x71,0x73,0x73,0x6f,0x67,0x5e,0x54,0x49,0x3f,0x2f,0x38,0x42,0x4b,0x53,0x5a,0x60,0x65,0x69,0x69,0x64,0x5c,0x53,0x4a,0x40,0x36,0x36,0x41,
    0x4b,0x55,0x5f,0x69,0x70,0x73,0x73,0x71,0x6a,0x61,0x69,0x70,0x73,0x73,0x70,0x69,0x5f,0x55,0x4b,0x41,0x36,0x0c,0x16,0x20,0x2a,0x34,0x3d,0x47,0x51,0x5b,0x65,0x6f,
    0x77,0x79,0x79,0x74,0x6b,0x61,0x58,0x4e,0x44,0x3a,0x30,0x26,0x1d,0x13,0x09,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x75,0x70,0x6a,0x63,
    0x5b,0x52,0x49,0x3f,0x36,0x34,0x3d,0x46,0x4f,0x58,0x60,0x67,0x6d,0x72,0x77,0x7a,0x7b,0x7b,0x7a,0x76,0x71,0x6b,0x63,0x5c,0x54,0x4b,0x42,0x39,0x41,0x4b,0x56,0x60,
    0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x76,0x73,0x6d,0x67,0x60,0x57,0x4f,0x46,0x3d,0x33,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x79,0x79,0x79,0x79,0x79,
    0x79,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x77,0x6f,0x65,0x5a,0x50,0x45,0x33,0x3c,
    0x45,0x4e,0x56,0x5e,0x65,0x6c,0x72,0x76,0x79,0x7b,0x7b,0x7a,0x78,0x74,0x6f,0x68,0x61,0x59,0x51,0x48,0x3e,0x35,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x77,0x6e,
    0x64,0x5b,0x65,0x70,0x78,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x49,0x52,0x5b,0x64,0x6d,0x74,0x7a,0x7e,
    0x81,0x7e,0x7a,0x7d,0x7d,0x75,0x6b,0x60,0x55,0x4b,0x40,0x33,0x3c,0x46,0x50,0x5a,0x62,0x69,0x6f,0x74,0x73,0x6b,0x62,0x57,0x4d,0x43,0x3a,0x37,0x42,0x4d,0x57,0x62,
    0x6c,0x77,0x7d,0x7d,0x79,0x6f,0x65,0x6d,0x77,0x7d,0x7d,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x10,0x1a,0x23,0x2d,0x37,0x41,0x4b,0x55,0x5f,0x69,0x73,0x7c,0x84,0x83,
    0x79,0x6f,0x65,0x5b,0x52,0x48,0x3e,0x34,0x2a,0x20,0x17,0x0d,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,0x83,0x83,0x80,0x79,0x72,0x6a,0x61,0x57,0x4d,
    0x43,0x39,0x39,0x42,0x4c,0x55,0x5e,0x67,0x6f,0x76,0x7c,0x81,0x84,0x86,0x86,0x84,0x80,0x7a,0x72,0x6b,0x62,0x59,0x50,0x47,0x3d,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,
    0x84,0x84,0x84,0x84,0x84,0x83,0x81,0x7c,0x76,0x6f,0x66,0x5e,0x55,0x4b,0x42,0x38,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x7b,0x70,0x65,0x5b,0x50,0x45,0x37,0x41,0x4a,0x54,0x5d,
    0x65,0x6d,0x74,0x7b,0x80,0x84,0x86,0x86,0x85,0x83,0x7d,0x77,0x70,0x68,0x5f,0x56,0x4d,0x43,0x39,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x7a,0x6f,0x64,0x5c,0x66,
    0x71,0x7b,0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x57,0x61,0x6a,0x73,0x7c,0x84,0x84,0x81,0x83,0x83,
    0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x38,0x42,0x4a,0x54,0x5e,0x68,0x71,0x77,0x7d,0x79,0x6e,0x64,0x59,0x51,0x49,0x40,0x37,0x41,0x4c,0x56,0x60,0x6b,0x74,0x7e,
    0x87,0x7c,0x73,0x69,0x71,0x7b,0x85,0x7e,0x75,0x6b,0x61,0x56,0x4c,0x41,0x37,0x13,0x1d,0x27,0x31,0x3b,0x45,0x4f,0x59,0x63,0x6d,0x77,0x81,0x82,0x87,0x7d,0x73,0x69,
    0x60,0x56,0x4c,0x42,0x38,0x2e,0x25,0x1b,0x11,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x80,0x80,0x80,0x81,0x83,0x87,0x82,0x78,0x6f,0x65,0x5b,0x51,0x46,0x3c,0x3d,
    0x47,0x51,0x5a,0x64,0x6d,0x75,0x7e,0x85,0x84,0x80,0x7d,0x7d,0x81,0x86,0x82,0x7a,0x71,0x68,0x5f,0x55,0x4b,0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x80,0x80,
    0x80,0x81,0x82,0x85,0x85,0x7e,0x75,0x6c,0x63,0x59,0x50,0x46,0x3c,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x76,0x6c,0x61,
    0x56,0x4c,0x41,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x7b,0x70,0x65,0x5b,0x50,0x45,0x3c,0x45,0x4f,0x59,0x62,0x6b,0x74,0x7c,
    0x84,0x85,0x80,0x7d,0x7c,0x7e,0x83,0x87,0x80,0x77,0x6e,0x64,0x5a,0x51,0x47,0x3d,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x87,
    0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x45,0x50,0x5a,0x64,0x6e,0x78,0x82,0x83,0x7b,0x76,0x79,0x80,0x88,0x81,0x75,
    0x6b,0x60,0x55,0x4b,0x40,0x3d,0x47,0x50,0x59,0x61,0x6a,0x74,0x80,0x84,0x79,0x6e,0x66,0x60,0x58,0x4f,0x45,0x35,0x3f,0x49,0x53,0x5d,0x67,0x71,0x7a,0x85,0x81,0x76,
    0x6c,0x74,0x7e,0x85,0x7b,0x71,0x67,0x5d,0x53,0x49,0x3f,0x35,0x17,0x21,0x2b,0x35,0x3f,0x49,0x53,0x5d,0x67,0x70,0x7a,0x85,0x7e,0x83,0x82,0x77,0x6d,0x64,0x5a,0x50,
    0x46,0x3c,0x32,0x29,0x1f,0x15,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x74,0x74,0x75,0x78,0x80,0x87,0x7c,0x72,0x67,0x5d,0x52,0x48,0x3d,0x40,0x4b,0x55,0x5f,
    0x68,0x72,0x7b,0x85,0x83,0x7b,0x75,0x73,0x73,0x77,0x7e,0x87,0x80,0x76,0x6c,0x63,0x59,0x4e,0x44,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x74,0x74,0x75,0x77,
    0x7c,0x84,0x85,0x7b,0x71,0x67,0x5d,0x53,0x49,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x71,0x69,0x5f,0x55,0x4b,0x40,
    0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x74,0x74,0x74,0x74,0x74,0x74,0x73,0x6d,0x63,0x59,0x4f,0x44,0x3f,0x49,0x53,0x5d,0x67,0x70,0x7a,0x83,0x84,0x7b,0x76,
    0x73,0x72,0x74,0x79,0x81,0x86,0x7c,0x72,0x68,0x5e,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x60,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,
    0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x47,0x52,0x5c,0x67,0x71,0x7b,0x86,0x7e,0x74,0x6c,0x71,0x7a,0x85,0x81,0x75,0x6b,0x60,0x55,
    0x4b,0x40,0x40,0x4a,0x54,0x5e,0x68,0x70,0x74,0x80,0x84,0x79,0x73,0x6f,0x66,0x5d,0x53,0x48,0x31,0x3b,0x45,0x4f,0x59,0x63,0x6d,0x77,0x81,0x84,0x7a,0x70,0x78,0x83,
    0x82,0x77,0x6d,0x63,0x59,0x4f,0x46,0x3c,0x32,0x1b,0x25,0x2f,0x39,0x43,0x4d,0x57,0x61,0x6a,0x74,0x7e,0x86,0x7b,0x80,0x85,0x7b,0x71,0x67,0x5e,0x54,0x4a,0x40,0x36,
    0x2c,0x23,0x19,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6a,0x6b,0x72,0x7c,0x88,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x43,0x4d,0x58,0x62,0x6c,0x76,0x81,
    0x87,0x7c,0x73,0x6c,0x68,0x69,0x6f,0x79,0x83,0x82,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x6a,0x6b,0x6d,0x74,0x7d,0x87,
    0x80,0x75,0x6a,0x60,0x56,0x4c,0x41,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x68,0x62,0x5a,0x51,0x47,0x3d,0x3f,0x4a,0x54,
    0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x6a,0x6a,0x6a,0x6a,0x6a,0x69,0x65,0x5e,0x55,0x4b,0x42,0x42,0x4c,0x56,0x60,0x6b,0x75,0x7e,0x87,0x7d,0x74,0x6d,0x69,0x68,0x6a,
    0x72,0x7b,0x84,0x80,0x75,0x6b,0x60,0x55,0x4b,0x40,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x6b,0x6b,0x6b,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,
    0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x53,0x5e,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x6d,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x41,
    0x4c,0x56,0x61,0x6b,0x76,0x7d,0x80,0x84,0x7d,0x7d,0x74,0x6a,0x5f,0x54,0x4a,0x2e,0x37,0x41,0x4b,0x55,0x5f,0x69,0x73,0x7c,0x87,0x7d,0x73,0x7c,0x86,0x7d,0x73,0x6a,
    0x60,0x56,0x4c,0x42,0x38,0x2e,0x1f,0x29,0x33,0x3d,0x47,0x51,0x5a,0x64,0x6e,0x78,0x83,0x83,0x78,0x7b,0x86,0x80,0x75,0x6c,0x62,0x58,0x4e,0x44,0x3a,0x31,0x27,0x1d,
    0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x74,0x74,0x74,0x77,0x7e,0x85,0x7b,0x71,0x67,0x5c,0x52,0x47,0x3d,0x45,0x50,0x5a,0x64,0x6f,0x79,0x84,0x84,0x79,0x6f,
    0x65,0x5e,0x61,0x6b,0x74,0x79,0x77,0x73,0x6c,0x62,0x58,0x4e,0x44,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x60,0x66,0x6f,0x79,0x84,0x82,0x77,0x6d,
    0x63,0x58,0x4d,0x43,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x73,0x73,0x73,0x73,0x73,0x73,0x73,0x6d,0x64,0x5a,0x50,0x45,0x3b,0x3f,0x4a,0x54,0x5f,0x6a,0x74,
    0x80,0x86,0x7b,0x73,0x73,0x73,0x73,0x73,0x73,0x6d,0x64,0x5a,0x50,0x46,0x3d,0x44,0x4e,0x59,0x63,0x6e,0x78,0x83,0x84,0x79,0x6f,0x66,0x68,0x6b,0x6b,0x6e,0x77,0x79,
    0x77,0x71,0x68,0x5f,0x54,0x4a,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x75,0x75,0x75,0x75,0x75,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x54,0x5e,0x69,0x73,0x7e,0x87,0x7b,0x71,0x67,0x6c,0x77,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x41,0x4c,0x56,0x61,
    0x6c,0x76,0x82,0x83,0x85,0x83,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x2a,0x34,0x3e,0x47,0x51,0x5b,0x65,0x6f,0x79,0x83,0x82,0x77,0x80,0x84,0x7a,0x70,0x66,0x5c,0x52,0x48,
    0x3e,0x34,0x2a,0x23,0x2d,0x37,0x41,0x4b,0x54,0x5e,0x68,0x72,0x7c,0x86,0x7e,0x74,0x78,0x82,0x84,0x79,0x70,0x66,0x5c,0x52,0x48,0x3e,0x34,0x2b,0x21,0x41,0x4c,0x56,
    0x61,0x6c,0x76,0x82,0x84,0x80,0x80,0x80,0x80,0x82,0x85,0x7e,0x76,0x6d,0x63,0x5a,0x50,0x46,0x3d,0x46,0x51,0x5b,0x65,0x70,0x7b,0x86,0x82,0x76,0x6c,0x62,0x57,0x5d,
    0x65,0x6c,0x6e,0x6c,0x6a,0x65,0x5d,0x54,0x4b,0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x5a,0x63,0x6d,0x77,0x83,0x83,0x79,0x6e,0x64,0x59,0x4e,
    0x44,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7e,0x7e,0x7e,0x7e,0x7e,0x7e,0x7e,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7e,
    0x7e,0x7e,0x7e,0x7e,0x7e,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x82,0x77,0x6c,0x68,0x71,0x75,0x75,0x75,0x75,0x75,0x75,0x72,0x6a,
    0x60,0x56,0x4c,0x41,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x48,0x53,0x5d,0x68,0x72,0x7c,0x87,0x7d,0x73,0x69,0x6d,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x41,0x4b,0x55,0x60,0x6a,0x73,0x77,
    0x80,0x84,0x79,0x77,0x72,0x68,0x5e,0x54,0x49,0x26,0x30,0x3a,0x44,0x4d,0x58,0x61,0x6b,0x75,0x80,0x85,0x7a,0x83,0x80,0x76,0x6c,0x62,0x58,0x4e,0x44,0x3a,0x30,0x26,
    0x27,0x31,0x3a,0x44,0x4e,0x58,0x62,0x6c,0x76,0x80,0x85,0x7b,0x73,0x74,0x7e,0x87,0x7d,0x73,0x6a,0x60,0x56,0x4c,0x42,0x38,0x2f,0x25,0x41,0x4c,0x56,0x61,0x6c,0x76,
    0x82,0x87,0x84,0x84,0x84,0x85,0x86,0x84,0x80,0x78,0x70,0x67,0x5e,0x54,0x4a,0x40,0x46,0x51,0x5c,0x66,0x71,0x7b,0x87,0x81,0x76,0x6b,0x61,0x56,0x58,0x60,0x67,0x6a,
    0x68,0x65,0x62,0x5b,0x53,0x4a,0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x5a,0x62,0x6c,0x77,0x83,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x40,0x4b,
    0x55,0x60,0x6b,0x75,0x81,0x88,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x88,0x85,0x85,0x85,0x85,
    0x85,0x85,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x45,0x50,0x5b,0x65,0x70,0x7b,0x86,0x81,0x76,0x6b,0x6b,0x75,0x81,0x81,0x81,0x81,0x81,0x81,0x77,0x6c,0x62,0x57,0x4d,
    0x42,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x87,0x83,0x83,0x83,0x83,0x83,0x83,0x83,0x88,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x47,0x51,0x5b,0x65,0x70,0x7a,0x84,0x81,0x77,0x71,0x73,0x7b,0x85,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3e,0x48,0x52,0x5c,0x64,0x6a,0x74,0x80,0x84,0x79,
    0x6e,0x6a,0x63,0x5a,0x51,0x47,0x22,0x2c,0x36,0x40,0x4a,0x54,0x5e,0x67,0x71,0x7b,0x85,0x7d,0x86,0x7c,0x72,0x68,0x5e,0x54,0x4b,0x41,0x37,0x2d,0x23,0x2a,0x34,0x3e,
    0x48,0x52,0x5c,0x66,0x70,0x7a,0x84,0x82,0x7d,0x7d,0x7d,0x7d,0x84,0x82,0x77,0x6e,0x64,0x5a,0x50,0x46,0x3c,0x33,0x29,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,
    0x79,0x79,0x7a,0x7b,0x80,0x88,0x80,0x76,0x6c,0x62,0x57,0x4d,0x43,0x46,0x50,0x5b,0x65,0x70,0x7b,0x85,0x82,0x76,0x6c,0x61,0x57,0x5d,0x66,0x6f,0x74,0x72,0x70,0x6a,
    0x62,0x59,0x4f,0x44,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x5a,0x63,0x6d,0x78,0x83,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x40,0x4b,0x55,0x60,0x6b,
    0x75,0x81,0x85,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x79,0x70,0x66,0x5b,0x51,0x46,0x3b,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x7a,0x7a,0x7a,0x7a,0x7a,0x79,
    0x70,0x66,0x5b,0x51,0x46,0x3b,0x45,0x50,0x5a,0x64,0x6f,0x7a,0x85,0x82,0x77,0x6c,0x6b,0x75,0x81,0x83,0x83,0x83,0x85,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x40,0x4b,
    0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x78,0x78,0x78,0x78,0x78,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
    0x4e,0x58,0x62,0x6c,0x75,0x7e,0x87,0x80,0x7b,0x7c,0x82,0x87,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3a,0x44,0x4d,0x55,0x5f,0x6a,0x74,0x80,0x84,0x79,0x6e,0x64,0x5b,
    0x54,0x4b,0x42,0x27,0x31,0x3a,0x43,0x4a,0x51,0x5a,0x64,0x6e,0x77,0x82,0x84,0x83,0x78,0x6e,0x64,0x5b,0x51,0x47,0x3d,0x33,0x29,0x1f,0x2e,0x38,0x42,0x4c,0x56,0x60,
    0x6a,0x73,0x7d,0x88,0x85,0x85,0x85,0x85,0x85,0x85,0x86,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x41,0x37,0x2d,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6e,0x6f,
    0x71,0x79,0x83,0x83,0x79,0x6e,0x64,0x59,0x4e,0x44,0x44,0x4f,0x59,0x64,0x6e,0x79,0x83,0x83,0x78,0x6e,0x64,0x5d,0x60,0x6a,0x74,0x7e,0x7c,0x79,0x70,0x66,0x5b,0x51,
    0x46,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x60,0x66,0x70,0x7a,0x84,0x82,0x77,0x6d,0x62,0x58,0x4d,0x43,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,
    0x7a,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6a,0x62,0x58,0x4e,0x45,0x3c,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x6f,0x6f,0x6f,0x6f,0x6f,0x6a,0x62,0x58,
    0x4e,0x44,0x3a,0x44,0x4f,0x59,0x63,0x6e,0x78,0x83,0x84,0x79,0x70,0x69,0x73,0x78,0x78,0x78,0x78,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x40,0x4b,0x55,0x60,0x6b,
    0x75,0x81,0x85,0x7a,0x6f,0x6d,0x6d,0x6d,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x4a,0x54,0x5e,
    0x67,0x6f,0x77,0x7e,0x84,0x86,0x84,0x80,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x35,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x79,0x6e,0x64,0x59,0x51,0x49,0x41,
    0x2c,0x36,0x3f,0x49,0x51,0x59,0x60,0x63,0x6a,0x73,0x7d,0x88,0x7e,0x75,0x6b,0x61,0x57,0x4d,0x43,0x39,0x2f,0x25,0x1b,0x32,0x3c,0x46,0x50,0x5a,0x64,0x6e,0x77,0x82,
    0x84,0x7a,0x7a,0x7a,0x7a,0x7a,0x7c,0x87,0x80,0x75,0x6c,0x62,0x58,0x4e,0x44,0x3b,0x31,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6a,0x6a,0x6d,0x77,0x83,
    0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x43,0x4d,0x57,0x62,0x6c,0x76,0x80,0x85,0x7b,0x72,0x6b,0x68,0x68,0x6f,0x78,0x82,0x85,0x7a,0x70,0x66,0x5b,0x51,0x46,0x41,0x4c,
    0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x6a,0x6a,0x6d,0x74,0x7d,0x88,0x7e,0x75,0x6b,0x60,0x56,0x4b,0x41,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x6a,
    0x6a,0x6a,0x6a,0x6a,0x6a,0x69,0x64,0x5c,0x53,0x4a,0x40,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x64,0x64,0x64,0x64,0x61,0x5b,0x53,0x4a,0x40,0x37,
    0x42,0x4c,0x57,0x61,0x6b,0x75,0x80,0x87,0x7e,0x75,0x6e,0x6b,0x6d,0x6d,0x6e,0x78,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,
    0x7a,0x6f,0x64,0x63,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x46,0x4f,0x58,0x60,0x68,0x6f,
    0x75,0x79,0x7b,0x7a,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x35,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x79,0x6e,0x66,0x60,0x58,0x4f,0x46,0x2e,0x39,0x43,
    0x4d,0x57,0x60,0x68,0x6e,0x6d,0x74,0x7e,0x85,0x7b,0x71,0x67,0x5d,0x53,0x49,0x3f,0x35,0x2b,0x21,0x17,0x36,0x40,0x4a,0x54,0x5e,0x67,0x72,0x7b,0x85,0x81,0x76,0x6f,
    0x6f,0x6f,0x6f,0x79,0x83,0x84,0x7a,0x70,0x66,0x5c,0x52,0x49,0x3f,0x35,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x74,0x74,0x74,0x76,0x7c,0x85,0x82,0x77,0x6d,
    0x63,0x58,0x4e,0x43,0x40,0x4a,0x54,0x5e,0x68,0x72,0x7b,0x85,0x82,0x7a,0x75,0x72,0x73,0x77,0x7e,0x87,0x80,0x76,0x6d,0x63,0x59,0x4f,0x44,0x41,0x4c,0x56,0x61,0x6c,
    0x76,0x82,0x85,0x7a,0x74,0x74,0x74,0x77,0x7b,0x83,0x84,0x7a,0x71,0x67,0x5d,0x53,0x49,0x3f,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x74,0x74,0x74,0x74,0x74,
    0x74,0x74,0x73,0x6b,0x62,0x57,0x4d,0x43,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x5b,0x5a,0x5a,0x5a,0x57,0x52,0x4c,0x44,0x3b,0x32,0x3f,0x4a,0x54,
    0x5e,0x67,0x71,0x7a,0x84,0x84,0x7c,0x77,0x74,0x73,0x74,0x77,0x7c,0x84,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,
    0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0x40,0x49,0x51,0x59,0x60,0x67,0x6c,0x6f,0x70,
    0x70,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x35,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x7a,0x73,0x6f,0x67,0x5d,0x53,0x49,0x30,0x3b,0x45,0x50,0x5a,0x65,
    0x6f,0x77,0x78,0x79,0x83,0x81,0x77,0x6d,0x63,0x59,0x4f,0x45,0x3c,0x32,0x28,0x1e,0x14,0x39,0x43,0x4d,0x58,0x62,0x6b,0x75,0x80,0x87,0x7c,0x72,0x69,0x64,0x64,0x6b,
    0x75,0x80,0x88,0x7d,0x74,0x6a,0x60,0x56,0x4c,0x42,0x38,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x80,0x80,0x80,0x80,0x81,0x84,0x85,0x7c,0x73,0x6a,0x60,0x56,0x4c,
    0x41,0x3d,0x47,0x50,0x5a,0x64,0x6d,0x76,0x7e,0x86,0x83,0x7e,0x7c,0x7d,0x81,0x86,0x82,0x7a,0x71,0x68,0x5f,0x55,0x4b,0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,
    0x80,0x80,0x80,0x80,0x82,0x85,0x84,0x7d,0x75,0x6c,0x63,0x59,0x4f,0x45,0x3c,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x79,
    0x6e,0x64,0x59,0x4e,0x44,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x5b,0x50,0x4f,0x4f,0x4d,0x49,0x43,0x3d,0x35,0x2c,0x3c,0x46,0x50,0x59,0x63,0x6c,
    0x74,0x7c,0x84,0x86,0x82,0x7e,0x7d,0x7e,0x82,0x86,0x84,0x7d,0x76,0x6c,0x62,0x57,0x4c,0x42,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,
    0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x3a,0x42,0x4a,0x51,0x58,0x5e,0x62,0x65,0x65,0x6e,0x79,0x84,
    0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x7e,0x86,0x80,0x7e,0x75,0x6a,0x60,0x56,0x4b,0x30,0x3b,0x45,0x50,0x5b,0x65,0x70,0x7a,0x83,
    0x83,0x85,0x7c,0x73,0x69,0x5f,0x55,0x4b,0x42,0x38,0x2e,0x24,0x1a,0x10,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x83,0x83,0x79,0x6f,0x65,0x5b,0x5d,0x67,0x71,0x7b,0x84,
    0x82,0x78,0x6e,0x63,0x59,0x4e,0x44,0x39,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,0x84,0x83,0x81,0x7c,0x75,0x6e,0x65,0x5c,0x52,0x48,0x3e,0x39,0x42,
    0x4c,0x55,0x5e,0x67,0x6f,0x76,0x7c,0x82,0x85,0x86,0x86,0x84,0x80,0x7a,0x72,0x6b,0x62,0x5a,0x50,0x47,0x3d,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,
    0x84,0x83,0x80,0x7b,0x75,0x6e,0x66,0x5e,0x54,0x4b,0x42,0x38,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x79,0x6e,0x64,0x59,
    0x4e,0x44,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x7b,0x70,0x65,0x5b,0x50,0x45,0x44,0x43,0x40,0x3b,0x35,0x2e,0x26,0x38,0x42,0x4b,0x54,0x5d,0x65,0x6d,0x74,0x7b,
    0x80,0x84,0x85,0x86,0x85,0x83,0x80,0x7a,0x75,0x6f,0x68,0x5f,0x55,0x4b,0x40,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x84,0x7e,
    0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2b,0x33,0x3b,0x42,0x49,0x4f,0x54,0x58,0x5a,0x64,0x6e,0x79,0x80,0x80,0x75,0x6b,
    0x60,0x55,0x4b,0x40,0x33,0x3e,0x48,0x53,0x5d,0x68,0x72,0x7b,0x83,0x85,0x82,0x77,0x6c,0x62,0x57,0x4d,0x2f,0x3a,0x44,0x4f,0x59,0x64,0x6e,0x79,0x81,0x82,0x7d,0x76,
    0x6e,0x65,0x5b,0x51,0x48,0x3e,0x34,0x2a,0x20,0x16,0x0c,0x3a,0x44,0x4f,0x59,0x64,0x6e,0x77,0x79,0x79,0x75,0x6b,0x61,0x57,0x59,0x64,0x6d,0x76,0x79,0x79,0x76,0x6d,
    0x63,0x58,0x4e,0x43,0x39,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x76,0x73,0x6d,0x66,0x5f,0x56,0x4d,0x44,0x3a,0x34,0x3e,0x46,0x4f,0x58,
    0x60,0x67,0x6e,0x73,0x77,0x7a,0x7b,0x7b,0x79,0x76,0x71,0x6b,0x63,0x5c,0x54,0x4b,0x42,0x39,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x75,
    0x72,0x6d,0x66,0x5f,0x57,0x4f,0x46,0x3c,0x33,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x76,0x6d,0x63,0x58,0x4e,0x43,0x3f,
    0x4a,0x54,0x5f,0x69,0x73,0x79,0x79,0x77,0x6f,0x65,0x5a,0x50,0x45,0x3b,0x38,0x36,0x31,0x2c,0x26,0x1f,0x33,0x3c,0x45,0x4e,0x56,0x5e,0x65,0x6c,0x72,0x76,0x79,0x7b,
    0x7b,0x7a,0x78,0x75,0x71,0x6c,0x66,0x60,0x59,0x50,0x47,0x3d,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x77,0x6e,0x64,0x5b,0x65,0x70,0x78,0x79,0x79,0x72,0x68,0x5e,
    0x53,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x2c,0x33,0x3a,0x40,0x46,0x4a,0x4e,0x57,0x62,0x6b,0x73,0x74,0x74,0x71,0x68,0x5e,0x54,0x4a,
    0x3f,0x31,0x3c,0x46,0x50,0x5a,0x63,0x6c,0x74,0x79,0x7a,0x7a,0x75,0x6b,0x61,0x57,0x4c,0x2e,0x38,0x43,0x4d,0x57,0x62,0x6b,0x73,0x76,0x76,0x73,0x6e,0x67,0x5f,0x56,
    0x4d,0x44,0x3a,0x30,0x26,0x1c,0x12,0x08,0x38,0x42,0x4c,0x56,0x60,0x68,0x6d,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x55,0x5f,0x67,0x6d,0x6e,0x6e,0x6d,0x67,0x5f,0x55,0x4b,
    0x41,0x37,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6c,0x69,0x64,0x5e,0x57,0x50,0x48,0x3f,0x36,0x2f,0x38,0x41,0x49,0x51,0x58,0x5f,0x65,
    0x6a,0x6d,0x6f,0x70,0x70,0x6f,0x6c,0x68,0x62,0x5c,0x54,0x4d,0x45,0x3c,0x33,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x6b,0x68,0x63,0x5e,
    0x57,0x50,0x48,0x40,0x37,0x2e,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x67,0x5f,0x55,0x4b,0x41,0x3d,0x47,0x51,0x5b,
    0x64,0x6b,0x6e,0x6e,0x6e,0x68,0x60,0x57,0x4d,0x43,0x39,0x2e,0x2c,0x28,0x23,0x1d,0x17,0x2e,0x37,0x3f,0x48,0x4f,0x57,0x5d,0x63,0x68,0x6c,0x6e,0x70,0x70,0x70,0x6e,
    0x6b,0x67,0x62,0x5d,0x57,0x51,0x4a,0x41,0x38,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6d,0x68,0x60,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x24,0x2b,0x32,0x37,0x3c,0x40,0x4a,0x53,0x5c,0x64,0x69,0x6a,0x6a,0x68,0x62,0x59,0x50,0x47,0x3d,0x2f,0x39,
    0x42,0x4c,0x55,0x5d,0x65,0x6b,0x6e,0x6f,0x6f,0x6c,0x66,0x5d,0x54,0x4a,0x2c,0x36,0x40,0x4a,0x53,0x5c,0x64,0x69,0x6c,0x6c,0x6a,0x66,0x5f,0x58,0x50,0x47,0x3e,0x35,
    0x2c,0x22,0x18,0x0e,0x05,0x35,0x3e,0x48,0x51,0x59,0x5f,0x63,0x64,0x64,0x62,0x5e,0x57,0x4f,0x50,0x58,0x5f,0x63,0x64,0x64,0x63,0x5f,0x58,0x50,0x47,0x3e,0x34,0x3b,
    0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x62,0x5f,0x5b,0x55,0x4f,0x48,0x41,0x39,0x30,0x29,0x32,0x3a,0x42,0x49,0x50,0x56,0x5c,0x60,0x63,0x65,
    0x65,0x65,0x64,0x62,0x5e,0x59,0x54,0x4d,0x45,0x3e,0x36,0x2d,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x61,0x5e,0x5a,0x55,0x4f,0x48,0x41,
    0x39,0x31,0x29,0x3a,0x44,0x4d,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x5f,0x58,0x50,0x47,0x3e,0x3a,0x43,0x4c,0x55,0x5c,0x62,0x64,
    0x64,0x63,0x60,0x59,0x51,0x49,0x3f,0x36,0x2c,0x21,0x1e,0x1a,0x14,0x0e,0x28,0x30,0x39,0x40,0x48,0x4e,0x54,0x5a,0x5e,0x62,0x64,0x65,0x65,0x65,0x64,0x61,0x5e,0x59,
    0x54,0x4f,0x48,0x42,0x3b,0x32,0x3a,0x44,0x4d,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x59,0x52,0x5a,0x60,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x1c,0x23,0x29,0x2e,0x33,0x3c,0x45,0x4d,0x55,0x5b,0x5f,0x5f,0x5f,0x5e,0x59,0x53,0x4b,0x42,0x39,0x2b,0x34,0x3d,0x46,0x4e,
    0x56,0x5c,0x61,0x64,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x28,0x32,0x3c,0x45,0x4d,0x55,0x5b,0x5f,0x61,0x61,0x5f,0x5c,0x57,0x50,0x49,0x41,0x39,0x30,0x27,0x1e,0x14,
    0x0a,0x01,0x30,0x39,0x42,0x4a,0x51,0x56,0x59,0x59,0x59,0x58,0x55,0x4f,0x48,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x55,0x50,0x49,0x41,0x39,0x2f,0x36,0x3f,0x47,0x4e,
    0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x55,0x51,0x4d,0x47,0x40,0x39,0x32,0x2a,0x23,0x2b,0x33,0x3a,0x41,0x48,0x4d,0x52,0x56,0x59,0x5a,0x5b,0x5b,0x5a,
    0x58,0x54,0x50,0x4b,0x45,0x3e,0x36,0x2f,0x27,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x57,0x54,0x50,0x4c,0x46,0x40,0x39,0x32,0x2a,0x22,
    0x36,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x55,0x50,0x49,0x41,0x39,0x35,0x3e,0x46,0x4d,0x53,0x57,0x59,0x59,0x59,0x56,
    0x51,0x4a,0x43,0x3a,0x31,0x27,0x1e,0x14,0x10,0x0b,0x06,0x21,0x2a,0x31,0x39,0x40,0x46,0x4b,0x50,0x54,0x57,0x5a,0x5b,0x5b,0x5b,0x59,0x57,0x54,0x4f,0x4b,0x46,0x40,
    0x3a,0x33,0x2c,0x36,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x56,0x51,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0d,0x14,0x1a,0x20,0x25,0x2d,0x36,0x3e,0x46,0x4c,0x51,0x54,0x54,0x54,0x53,0x50,0x4a,0x44,0x3c,0x33,0x26,0x2e,0x37,0x3f,0x47,0x4e,0x53,0x57,
    0x5a,0x5a,0x5a,0x58,0x55,0x4f,0x48,0x40,0x24,0x2d,0x36,0x3e,0x46,0x4d,0x52,0x55,0x56,0x56,0x55,0x52,0x4e,0x48,0x41,0x3a,0x32,0x2a,0x21,0x18,0x0f,0x06,0x00,0x2a,
    0x33,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x2a,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,
    0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4b,0x47,0x43,0x3e,0x38,0x31,0x2a,0x23,0x1c,0x24,0x2b,0x32,0x39,0x3f,0x44,0x48,0x4c,0x4e,0x50,0x50,0x50,0x4f,0x4d,0x4a,0x46,
    0x42,0x3c,0x36,0x2f,0x27,0x20,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4c,0x4a,0x46,0x42,0x3d,0x37,0x31,0x2a,0x23,0x1b,0x2f,0x38,0x3f,
    0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x2f,0x37,0x3e,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x3b,
    0x34,0x2b,0x22,0x19,0x10,0x06,0x02,0x00,0x1b,0x22,0x2a,0x31,0x37,0x3d,0x42,0x47,0x4a,0x4d,0x4f,0x50,0x50,0x50,0x4f,0x4c,0x4a,0x46,0x41,0x3c,0x37,0x31,0x2b,0x24,
    0x2f,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x05,0x0b,0x11,0x16,0x1e,0x27,0x2f,0x37,0x3e,0x43,0x47,0x4a,0x4a,0x4a,0x49,0x46,0x41,0x3c,0x34,0x2d,0x20,0x28,0x30,0x38,0x3f,0x45,0x49,0x4d,0x4f,0x4f,0x4f,
    0x4e,0x4b,0x46,0x40,0x39,0x1e,0x27,0x2f,0x37,0x3e,0x44,0x48,0x4b,0x4c,0x4c,0x4b,0x48,0x44,0x3f,0x39,0x32,0x2b,0x23,0x1b,0x12,0x09,0x00,0x00,0x24,0x2c,0x33,0x39,
    0x3e,0x42,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x39,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3e,0x39,0x32,0x2b,0x23,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,
    0x44,0x44,0x44,0x42,0x40,0x3d,0x39,0x35,0x2f,0x29,0x22,0x1b,0x15,0x1c,0x23,0x2a,0x30,0x36,0x3a,0x3e,0x42,0x44,0x45,0x45,0x45,0x45,0x43,0x40,0x3d,0x38,0x33,0x2d,
    0x27,0x20,0x18,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x40,0x3c,0x39,0x34,0x2f,0x29,0x22,0x1b,0x14,0x29,0x30,0x37,0x3c,0x40,0x43,
    0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x41,0x3e,0x39,0x32,0x2b,0x28,0x2f,0x36,0x3c,0x40,0x43,0x44,0x44,0x44,0x42,0x3e,0x39,0x33,0x2c,0x25,0x1c,
    0x14,0x0b,0x01,0x00,0x00,0x13,0x1b,0x22,0x28,0x2e,0x34,0x39,0x3d,0x40,0x43,0x45,0x45,0x45,0x45,0x44,0x42,0x3f,0x3c,0x38,0x33,0x2e,0x28,0x22,0x1c,0x29,0x30,0x37,
    0x3c,0x40,0x43,0x44,0x44,0x43,0x42,0x3e,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,
    0x08,0x10,0x18,0x20,0x28,0x2f,0x35,0x3a,0x3d,0x3f,0x3f,0x3f,0x3f,0x3c,0x38,0x33,0x2d,0x25,0x19,0x21,0x29,0x30,0x36,0x3b,0x3f,0x43,0x44,0x45,0x45,0x44,0x41,0x3d,
    0x38,0x31,0x18,0x20,0x28,0x2f,0x35,0x3a,0x3e,0x40,0x41,0x41,0x40,0x3e,0x3a,0x36,0x31,0x2a,0x23,0x1c,0x14,0x0c,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x2e,0x35,0x3b,0x3f,
    0x42,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2e,0x00,0x02,0x0b,0x14,0x1d,0x25,0x2d,0x34,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,0x28,0x29,0x31,0x37,
    0x3c,0x41,0x43,0x44,0x44,0x43,0x41,0x3e,0x3c,0x40,0x43,0x44,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x43,0x41,0x3e,0x39,
    0x32,0x2b,0x23,0x1b,0x12,0x09,0x00,0x00,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x43,0x41,0x3d,0x38,0x3c,0x41,0x43,0x44,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,
    0x28,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x43,0x42,0x3e,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x14,0x1b,0x22,0x29,0x2f,0x35,0x3a,0x3e,
    0x41,0x44,0x45,0x46,0x46,0x45,0x43,0x41,0x3d,0x39,0x34,0x2f,0x29,0x22,0x1b,0x14,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x40,0x3e,
    0x3a,0x36,0x31,0x2b,0x24,0x1d,0x29,0x30,0x37,0x3c,0x40,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x40,0x3d,0x3a,0x35,0x2f,0x29,0x22,0x1a,0x12,0x1b,0x22,
    0x29,0x2f,0x35,0x3a,0x3e,0x41,0x44,0x45,0x46,0x46,0x45,0x43,0x40,0x3d,0x38,0x33,0x2d,0x27,0x20,0x19,0x30,0x37,0x3c,0x40,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,
    0x44,0x44,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,0x28,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x2d,0x36,0x3d,0x44,0x49,0x4d,0x4e,0x4e,
    0x4e,0x4d,0x49,0x43,0x3d,0x35,0x00,0x07,0x11,0x1a,0x23,0x2c,0x34,0x3c,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x2f,0x30,0x38,0x40,0x46,0x4b,0x4e,
    0x4e,0x4e,0x4e,0x4b,0x47,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x2a,
    0x21,0x18,0x0e,0x04,0x00,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x2f,0x30,0x38,
    0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x1b,0x23,0x2a,0x31,0x38,0x3e,0x43,0x48,0x4b,0x4e,0x50,
    0x51,0x51,0x50,0x4e,0x4b,0x47,0x42,0x3d,0x37,0x31,0x2a,0x23,0x1b,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4b,0x48,0x44,0x3f,0x3a,
    0x33,0x2c,0x24,0x2f,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4d,0x4a,0x48,0x43,0x3e,0x38,0x31,0x29,0x21,0x19,0x22,0x2a,0x31,0x38,0x3e,
    0x43,0x48,0x4b,0x4e,0x50,0x51,0x51,0x50,0x4d,0x4a,0x47,0x42,0x3c,0x36,0x2f,0x28,0x20,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,
    0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x2f,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x33,0x3c,0x45,0x4c,0x53,0x57,0x59,0x59,0x59,0x57,0x52,
    0x4c,0x44,0x3b,0x01,0x0b,0x15,0x1f,0x28,0x32,0x3b,0x43,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x46,0x3e,0x35,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x58,
    0x55,0x50,0x4e,0x54,0x58,0x59,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x58,0x55,0x50,0x49,0x41,0x39,0x2f,0x26,0x1c,0x12,
    0x08,0x00,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x58,0x55,0x50,0x49,0x4e,0x54,0x58,0x59,0x59,0x59,0x57,0x53,0x4d,0x46,0x3e,0x35,0x36,0x3f,0x47,0x4e,0x54,
    0x58,0x59,0x59,0x59,0x56,0x51,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,0x22,0x2a,0x32,0x39,0x40,0x47,0x4c,0x51,0x55,0x58,0x5a,0x5b,0x5b,0x5a,
    0x58,0x55,0x51,0x4c,0x46,0x40,0x39,0x32,0x2a,0x22,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x57,0x55,0x52,0x4e,0x48,0x42,0x3b,0x33,0x2b,
    0x36,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x58,0x57,0x55,0x51,0x4c,0x46,0x40,0x38,0x30,0x28,0x1f,0x29,0x31,0x39,0x40,0x47,0x4c,0x51,0x55,
    0x59,0x5a,0x5c,0x5b,0x5a,0x58,0x54,0x50,0x4b,0x45,0x3e,0x37,0x2f,0x27,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x53,
    0x4d,0x46,0x3e,0x35,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x38,0x42,0x4b,0x54,0x5b,0x61,0x63,0x64,0x63,0x61,0x5b,0x53,0x4a,0x41,
    0x03,0x0e,0x18,0x22,0x2c,0x36,0x40,0x49,0x52,0x5a,0x60,0x63,0x64,0x64,0x62,0x5c,0x55,0x4c,0x43,0x3a,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x58,0x56,
    0x5d,0x62,0x64,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x58,0x50,0x47,0x3e,0x34,0x2a,0x20,0x16,0x0b,0x01,0x3b,
    0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x63,0x5e,0x58,0x50,0x56,0x5d,0x62,0x64,0x64,0x64,0x62,0x5c,0x55,0x4c,0x43,0x3a,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,
    0x63,0x5f,0x59,0x52,0x5a,0x60,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x29,0x31,0x39,0x41,0x48,0x4f,0x55,0x5b,0x5f,0x62,0x65,0x66,0x66,0x65,0x62,0x5f,0x5a,
    0x55,0x4f,0x48,0x41,0x39,0x31,0x28,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x62,0x5f,0x5c,0x57,0x51,0x4a,0x42,0x3a,0x32,0x3a,0x44,0x4d,
    0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x61,0x5f,0x5b,0x55,0x4f,0x47,0x3f,0x37,0x2e,0x25,0x2f,0x38,0x40,0x48,0x4f,0x56,0x5b,0x5f,0x63,0x65,0x66,
    0x66,0x64,0x62,0x5e,0x59,0x54,0x4d,0x46,0x3e,0x36,0x2d,0x44,0x4d,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x62,0x5c,0x55,0x4c,0x43,
    0x3a,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x3b,0x46,0x50,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x05,0x10,0x1a,
    0x25,0x2f,0x3a,0x44,0x4e,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6b,0x64,0x5b,0x51,0x47,0x3d,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x67,0x5f,0x5d,0x65,0x6c,0x6e,
    0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x67,0x5f,0x55,0x4b,0x41,0x37,0x2d,0x22,0x18,0x0d,0x03,0x3f,0x49,0x53,0x5d,
    0x65,0x6c,0x6e,0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6b,0x64,0x5b,0x51,0x47,0x3d,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x68,0x60,
    0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x2f,0x37,0x40,0x48,0x50,0x57,0x5e,0x64,0x69,0x6d,0x6f,0x70,0x70,0x6f,0x6d,0x68,0x64,0x5e,0x57,0x50,
    0x48,0x40,0x37,0x2e,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x6c,0x69,0x65,0x60,0x59,0x51,0x49,0x40,0x37,0x3e,0x48,0x52,0x5c,0x65,0x6c,
    0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x6c,0x69,0x64,0x5e,0x56,0x4e,0x46,0x3d,0x33,0x2a,0x34,0x3e,0x46,0x4f,0x57,0x5e,0x64,0x69,0x6d,0x6f,0x71,0x70,0x6f,0x6c,
    0x68,0x62,0x5c,0x55,0x4d,0x44,0x3b,0x32,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6b,0x64,0x5b,0x51,0x47,0x3d,0x40,0x4b,
    0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x3d,0x48,0x52,0x5d,0x67,0x71,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,0x06,0x11,0x1c,0x26,0x31,0x3b,
    0x46,0x51,0x5b,0x65,0x70,0x78,0x79,0x79,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x76,0x6d,0x63,0x65,0x6c,0x74,0x79,0x79,0x79,0x74,
    0x6b,0x60,0x56,0x4b,0x41,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x76,0x6d,0x63,0x58,0x4e,0x43,0x39,0x2e,0x24,0x19,0x0e,0x04,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,
    0x79,0x79,0x76,0x6d,0x63,0x59,0x61,0x6b,0x74,0x79,0x79,0x79,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x77,0x6f,0x66,0x5d,0x65,0x70,
    0x78,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x34,0x3d,0x46,0x4f,0x57,0x5f,0x66,0x6d,0x72,0x77,0x7a,0x7b,0x7b,0x7a,0x76,0x72,0x6d,0x66,0x5f,0x57,0x4f,0x46,0x3d,
    0x34,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x76,0x73,0x6f,0x68,0x60,0x58,0x4f,0x46,0x3c,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x79,
    0x79,0x79,0x79,0x79,0x78,0x76,0x72,0x6d,0x65,0x5d,0x54,0x4b,0x42,0x38,0x2e,0x39,0x42,0x4c,0x55,0x5e,0x66,0x6d,0x73,0x77,0x7a,0x7b,0x7b,0x79,0x76,0x71,0x6b,0x64,
    0x5c,0x53,0x4a,0x40,0x37,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x42,0x4d,0x58,0x62,0x6c,
    0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x7c,0x72,0x67,0x5c,0x52,0x47,0x0e,0x13,0x1c,0x26,0x31,0x3c,0x46,0x51,0x5c,
    0x66,0x71,0x7b,0x84,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x65,0x6c,0x74,0x7b,0x83,0x84,0x7d,0x75,0x6b,0x61,0x56,
    0x4b,0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x2e,0x24,0x19,0x0f,0x04,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x7a,
    0x70,0x66,0x5c,0x64,0x6e,0x78,0x83,0x84,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x7d,0x75,0x6c,0x63,0x66,0x71,0x7b,0x84,0x7e,
    0x73,0x69,0x5e,0x54,0x49,0x3e,0x39,0x42,0x4c,0x55,0x5e,0x66,0x6e,0x75,0x7c,0x82,0x84,0x86,0x86,0x84,0x81,0x7b,0x75,0x6e,0x66,0x5e,0x55,0x4b,0x42,0x38,0x41,0x4c,
    0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,0x84,0x83,0x81,0x7d,0x77,0x6f,0x67,0x5e,0x54,0x4a,0x40,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x84,0x84,0x84,0x84,
    0x83,0x83,0x81,0x7b,0x74,0x6c,0x63,0x59,0x4f,0x46,0x3c,0x32,0x3d,0x47,0x51,0x5a,0x64,0x6d,0x74,0x7c,0x82,0x85,0x86,0x86,0x84,0x80,0x7a,0x73,0x6b,0x61,0x58,0x4e,
    0x45,0x3b,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x16,0x1c,0x22,0x26,0x31,0x3c,0x46,0x51,0x5c,0x66,0x71,0x7b,
    0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6c,0x74,0x7b,0x83,0x85,0x7d,0x76,0x6e,0x66,0x5d,0x54,0x49,0x3f,0x41,
    0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x2e,0x24,0x19,0x0f,0x07,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x87,0x87,0x7d,0x73,0x69,0x5f,
    0x67,0x72,0x7b,0x86,0x8a,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x8c,0x84,0x7b,0x72,0x69,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,
    0x54,0x49,0x3e,0x3d,0x47,0x50,0x5a,0x64,0x6d,0x75,0x7d,0x85,0x85,0x80,0x7d,0x7d,0x80,0x85,0x84,0x7d,0x75,0x6c,0x63,0x5a,0x50,0x46,0x3d,0x41,0x4c,0x56,0x61,0x6c,
    0x76,0x82,0x85,0x80,0x80,0x80,0x80,0x81,0x84,0x87,0x7e,0x75,0x6c,0x62,0x58,0x4e,0x44,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7e,0x7e,0x7e,0x7e,0x7e,0x81,0x86,
    0x83,0x7b,0x71,0x67,0x5d,0x53,0x49,0x3e,0x34,0x40,0x4a,0x54,0x5f,0x68,0x72,0x7b,0x84,0x83,0x7e,0x7d,0x7d,0x81,0x86,0x82,0x79,0x70,0x66,0x5c,0x52,0x48,0x3d,0x4b,
    0x55,0x60,0x6b,0x75,0x80,0x80,0x80,0x80,0x80,0x88,0x80,0x80,0x80,0x80,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,
    0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x1e,0x25,0x2b,0x30,0x33,0x3c,0x46,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x74,
    0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x74,0x7b,0x83,0x85,0x7c,0x75,0x6e,0x67,0x5f,0x57,0x4f,0x46,0x3c,0x41,0x4c,0x56,0x61,
    0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x2e,0x24,0x19,0x15,0x10,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x83,0x81,0x77,0x6d,0x62,0x6b,0x75,0x80,
    0x83,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x86,0x86,0x81,0x77,0x6f,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,
    0x40,0x4b,0x55,0x5f,0x68,0x72,0x7b,0x84,0x83,0x7b,0x75,0x73,0x73,0x76,0x7b,0x83,0x84,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x40,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,
    0x7a,0x74,0x74,0x75,0x76,0x7b,0x83,0x84,0x79,0x6f,0x65,0x5a,0x50,0x45,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x73,0x73,0x73,0x74,0x77,0x7e,0x88,0x80,0x74,
    0x6a,0x60,0x55,0x4a,0x40,0x35,0x41,0x4c,0x56,0x61,0x6b,0x76,0x81,0x85,0x7b,0x74,0x73,0x73,0x77,0x7e,0x88,0x7e,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x4a,0x54,0x5e,0x68,
    0x71,0x74,0x74,0x74,0x74,0x7d,0x88,0x7c,0x74,0x74,0x74,0x74,0x70,0x67,0x5d,0x53,0x49,0x3e,0x42,0x4d,0x57,0x62,0x6c,0x75,0x78,0x78,0x74,0x6a,0x60,0x56,0x4b,0x41,
    0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x26,0x2d,0x34,0x39,0x3d,0x40,0x46,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,
    0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x74,0x7b,0x83,0x85,0x7c,0x75,0x6d,0x66,0x5f,0x58,0x50,0x48,0x40,0x37,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,
    0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x39,0x2e,0x27,0x23,0x1f,0x19,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x80,0x84,0x7a,0x70,0x66,0x6e,0x79,0x83,0x80,0x85,0x80,
    0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x80,0x87,0x7d,0x75,0x6c,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x43,0x4d,0x57,
    0x62,0x6c,0x76,0x80,0x86,0x7c,0x74,0x6c,0x68,0x68,0x6d,0x74,0x7c,0x87,0x80,0x76,0x6c,0x62,0x57,0x4d,0x43,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x6a,
    0x6a,0x6c,0x75,0x81,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x69,0x69,0x6a,0x70,0x7b,0x86,0x81,0x75,0x6b,0x60,0x55,
    0x4b,0x40,0x36,0x42,0x4d,0x57,0x62,0x6c,0x77,0x82,0x84,0x79,0x71,0x6e,0x6b,0x70,0x7a,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x47,0x50,0x59,0x62,0x68,0x6a,0x6a,
    0x6a,0x73,0x7d,0x88,0x7c,0x72,0x6a,0x6a,0x6a,0x67,0x61,0x59,0x4f,0x46,0x3c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x76,0x6b,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,
    0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x2d,0x35,0x3c,0x43,0x47,0x4b,0x4c,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,
    0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x7b,0x83,0x84,0x7c,0x75,0x6d,0x66,0x5e,0x57,0x50,0x49,0x41,0x39,0x31,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,
    0x64,0x59,0x4e,0x44,0x39,0x33,0x31,0x2d,0x28,0x22,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x7b,0x86,0x7d,0x73,0x69,0x72,0x7c,0x86,0x7b,0x85,0x80,0x74,0x6a,0x5f,
    0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x83,0x84,0x7b,0x72,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,0x64,0x6f,0x79,
    0x84,0x83,0x78,0x6e,0x65,0x5e,0x5e,0x65,0x6e,0x79,0x83,0x83,0x79,0x6e,0x64,0x59,0x4f,0x44,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x6c,0x6c,0x6e,0x76,
    0x81,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x72,0x72,0x72,0x72,0x75,0x7d,0x87,0x80,0x75,0x6a,0x60,0x55,0x4b,0x40,0x35,
    0x41,0x4b,0x56,0x60,0x6b,0x75,0x80,0x87,0x80,0x7b,0x78,0x75,0x72,0x75,0x77,0x76,0x72,0x69,0x5f,0x54,0x4a,0x40,0x42,0x4b,0x53,0x59,0x5e,0x5f,0x5f,0x68,0x73,0x7d,
    0x88,0x7c,0x72,0x67,0x5f,0x5f,0x5d,0x59,0x52,0x4a,0x41,0x38,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,
    0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x33,0x3c,0x44,0x4b,0x51,0x55,0x57,0x59,0x5c,0x66,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,
    0x6c,0x76,0x82,0x84,0x7b,0x83,0x88,0x7e,0x76,0x6d,0x66,0x5e,0x57,0x4f,0x48,0x41,0x3a,0x32,0x2a,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x4e,
    0x44,0x3f,0x3e,0x3b,0x36,0x31,0x2a,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x83,0x81,0x77,0x6d,0x75,0x80,0x83,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,
    0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x7c,0x86,0x81,0x77,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x46,0x50,0x5b,0x65,0x70,0x7b,0x86,0x81,0x76,
    0x6b,0x61,0x57,0x57,0x61,0x6c,0x76,0x82,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x77,0x77,0x77,0x79,0x7d,0x85,0x82,0x78,
    0x6e,0x64,0x59,0x4f,0x45,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7c,0x7c,0x7c,0x7c,0x7c,0x7e,0x84,0x85,0x7b,0x72,0x68,0x5e,0x53,0x49,0x3f,0x34,0x3f,0x49,0x53,
    0x5d,0x67,0x71,0x79,0x82,0x88,0x85,0x83,0x80,0x7c,0x79,0x75,0x70,0x69,0x63,0x5a,0x51,0x47,0x3d,0x3c,0x44,0x4a,0x50,0x53,0x54,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,
    0x67,0x5c,0x54,0x53,0x4f,0x4a,0x43,0x3b,0x32,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,
    0x72,0x67,0x5c,0x52,0x47,0x38,0x42,0x4b,0x53,0x5a,0x5f,0x61,0x63,0x63,0x66,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,
    0x84,0x83,0x83,0x83,0x85,0x7c,0x73,0x6b,0x62,0x5a,0x51,0x49,0x40,0x37,0x2f,0x26,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x4e,0x4a,0x4a,0x48,
    0x45,0x40,0x39,0x32,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x80,0x84,0x7a,0x70,0x79,0x83,0x7e,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,
    0x61,0x6c,0x76,0x82,0x84,0x79,0x77,0x80,0x87,0x7d,0x75,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x46,0x51,0x5c,0x66,0x71,0x7b,0x86,0x80,0x75,0x6b,0x60,0x55,
    0x55,0x60,0x6b,0x75,0x81,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x86,0x83,0x83,0x83,0x83,0x83,0x86,0x84,0x7c,0x73,0x6a,0x60,0x56,
    0x4c,0x42,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x89,0x87,0x87,0x87,0x88,0x88,0x84,0x82,0x7c,0x75,0x6d,0x64,0x5a,0x50,0x46,0x3c,0x32,0x41,0x4b,0x54,0x5c,0x62,0x6b,
    0x72,0x79,0x7e,0x82,0x85,0x87,0x87,0x84,0x7e,0x77,0x70,0x67,0x5d,0x54,0x4a,0x40,0x34,0x3c,0x41,0x46,0x49,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,
    0x49,0x46,0x41,0x3b,0x34,0x2c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,
    0x52,0x47,0x3c,0x46,0x50,0x5a,0x62,0x69,0x6c,0x6d,0x6d,0x68,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x8a,0x83,0x7b,
    0x7c,0x85,0x83,0x7a,0x71,0x69,0x60,0x57,0x4f,0x46,0x3e,0x35,0x2c,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x59,0x54,0x54,0x54,0x52,0x4e,0x48,0x41,
    0x39,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x7b,0x86,0x7d,0x73,0x7c,0x85,0x7b,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,
    0x82,0x84,0x79,0x71,0x79,0x83,0x84,0x7a,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x46,0x51,0x5b,0x66,0x70,0x7b,0x86,0x81,0x75,0x6b,0x61,0x56,0x57,0x61,0x6b,
    0x76,0x81,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x86,0x82,0x82,0x82,0x82,0x81,0x7e,0x7b,0x75,0x6d,0x65,0x5c,0x52,0x49,0x3f,0x40,
    0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7b,0x7b,0x7c,0x80,0x85,0x81,0x79,0x73,0x6d,0x66,0x5e,0x55,0x4c,0x42,0x38,0x2f,0x45,0x4f,0x59,0x62,0x6b,0x70,0x72,0x72,0x74,
    0x77,0x7a,0x7c,0x80,0x83,0x87,0x7e,0x75,0x6c,0x62,0x57,0x4d,0x43,0x2d,0x33,0x38,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x38,
    0x32,0x2c,0x25,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3f,
    0x49,0x54,0x5e,0x68,0x71,0x76,0x78,0x77,0x6e,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x7b,0x73,0x76,0x80,0x88,
    0x80,0x77,0x6f,0x66,0x5e,0x55,0x4d,0x44,0x3b,0x33,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x5f,0x5f,0x5f,0x5f,0x5c,0x57,0x50,0x48,0x3f,0x41,0x4c,
    0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x78,0x83,0x81,0x76,0x80,0x82,0x78,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,
    0x6e,0x74,0x7c,0x86,0x81,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x84,0x83,0x78,0x6e,0x64,0x5d,0x5e,0x65,0x6e,0x78,0x83,0x84,
    0x79,0x6e,0x64,0x5a,0x4f,0x45,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x76,0x76,0x76,0x76,0x74,0x71,0x6c,0x66,0x5e,0x56,0x4d,0x44,0x3a,0x40,0x4b,0x55,0x60,
    0x6b,0x75,0x81,0x85,0x7a,0x71,0x72,0x76,0x7d,0x87,0x82,0x79,0x70,0x67,0x5e,0x55,0x4c,0x43,0x3a,0x32,0x46,0x51,0x5b,0x66,0x70,0x7a,0x7c,0x7c,0x73,0x6d,0x70,0x72,
    0x75,0x7a,0x83,0x84,0x79,0x6e,0x64,0x59,0x4f,0x44,0x24,0x2a,0x33,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x32,0x29,0x24,0x1d,
    0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3f,0x4a,0x54,0x5f,
    0x6a,0x74,0x80,0x83,0x7b,0x70,0x71,0x7b,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x70,0x79,0x82,0x87,0x7e,0x75,
    0x6d,0x64,0x5b,0x53,0x4a,0x42,0x39,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6a,0x6a,0x6a,0x6a,0x6a,0x66,0x5f,0x56,0x4d,0x43,0x41,0x4c,0x56,0x61,0x6c,
    0x76,0x82,0x84,0x79,0x75,0x80,0x84,0x7a,0x83,0x7e,0x74,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6e,0x77,
    0x80,0x87,0x7d,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x43,0x4d,0x58,0x62,0x6c,0x76,0x80,0x86,0x7c,0x73,0x6c,0x68,0x68,0x6c,0x74,0x7c,0x86,0x80,0x76,0x6c,0x62,
    0x57,0x4d,0x43,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x6c,0x6c,0x6b,0x6a,0x67,0x63,0x5e,0x57,0x4f,0x47,0x3f,0x36,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,
    0x85,0x7a,0x6f,0x67,0x6f,0x77,0x81,0x88,0x7e,0x76,0x6d,0x64,0x5b,0x52,0x49,0x40,0x37,0x46,0x51,0x5b,0x66,0x70,0x7b,0x86,0x80,0x75,0x6d,0x69,0x68,0x6c,0x75,0x81,
    0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x1e,0x28,0x33,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x32,0x27,0x1d,0x15,0x43,0x4d,0x58,
    0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3f,0x49,0x54,0x5e,0x69,0x73,0x7e,
    0x87,0x7c,0x74,0x74,0x7d,0x88,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x6a,0x73,0x7b,0x85,0x84,0x7b,0x73,0x6a,0x62,
    0x59,0x50,0x47,0x3e,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x74,0x74,0x74,0x74,0x74,0x74,0x6e,0x65,0x5b,0x51,0x46,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,
    0x79,0x72,0x7b,0x86,0x7d,0x85,0x7b,0x71,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x68,0x71,0x79,0x83,0x84,
    0x88,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x40,0x4a,0x54,0x5e,0x68,0x72,0x7b,0x85,0x83,0x7b,0x75,0x72,0x72,0x75,0x7b,0x83,0x84,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x40,
    0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x61,0x61,0x5f,0x5d,0x59,0x55,0x4f,0x48,0x40,0x38,0x30,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,
    0x64,0x69,0x71,0x7a,0x83,0x85,0x7b,0x73,0x6a,0x61,0x58,0x4f,0x46,0x3c,0x45,0x4f,0x5a,0x64,0x6e,0x79,0x83,0x84,0x7b,0x76,0x73,0x73,0x75,0x7b,0x84,0x82,0x78,0x6e,
    0x63,0x59,0x4e,0x44,0x1e,0x28,0x33,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x32,0x27,0x1d,0x12,0x43,0x4d,0x58,0x63,0x6d,0x78,
    0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x48,0x52,0x5d,0x67,0x72,0x7b,0x85,0x83,0x7e,
    0x7e,0x83,0x85,0x7b,0x71,0x67,0x5c,0x52,0x48,0x3d,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x6d,0x75,0x7e,0x87,0x82,0x79,0x70,0x68,0x5f,0x55,0x4b,
    0x41,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x80,0x80,0x80,0x80,0x80,0x80,0x7c,0x72,0x67,0x5c,0x52,0x47,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x78,
    0x83,0x84,0x82,0x77,0x6f,0x7a,0x85,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x6b,0x74,0x7c,0x86,0x8a,0x7e,0x73,
    0x69,0x5e,0x54,0x49,0x3e,0x3d,0x47,0x50,0x5a,0x63,0x6d,0x75,0x7d,0x85,0x84,0x80,0x7c,0x7c,0x80,0x84,0x85,0x7d,0x75,0x6c,0x63,0x5a,0x50,0x46,0x3d,0x41,0x4c,0x56,
    0x61,0x6c,0x76,0x82,0x85,0x7a,0x6f,0x64,0x5a,0x56,0x55,0x53,0x4f,0x4b,0x46,0x40,0x39,0x31,0x29,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x63,0x6c,
    0x75,0x7d,0x87,0x82,0x78,0x70,0x66,0x5d,0x54,0x49,0x3f,0x43,0x4d,0x57,0x61,0x6a,0x74,0x7c,0x85,0x85,0x81,0x7d,0x7d,0x80,0x83,0x85,0x7c,0x73,0x6a,0x60,0x56,0x4c,
    0x42,0x1e,0x28,0x33,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x32,0x27,0x1d,0x12,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,
    0x6c,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3c,0x46,0x50,0x5a,0x64,0x6d,0x76,0x7e,0x83,0x86,0x86,0x83,0x7d,
    0x75,0x6c,0x63,0x59,0x4f,0x45,0x3b,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x66,0x6f,0x78,0x81,0x84,0x80,0x77,0x6d,0x62,0x58,0x4d,0x43,0x41,0x4c,
    0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x7c,0x72,0x67,0x5c,0x52,0x47,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x75,0x80,0x84,0x7e,
    0x74,0x6f,0x7a,0x84,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x79,0x6e,0x64,0x65,0x6e,0x77,0x80,0x84,0x7e,0x73,0x69,0x5e,0x54,
    0x49,0x3e,0x39,0x42,0x4c,0x55,0x5e,0x66,0x6e,0x76,0x7c,0x81,0x84,0x86,0x86,0x84,0x81,0x7c,0x76,0x6e,0x66,0x5e,0x55,0x4b,0x42,0x38,0x41,0x4c,0x56,0x61,0x6c,0x76,
    0x82,0x84,0x7a,0x6f,0x64,0x5a,0x4f,0x4a,0x48,0x46,0x42,0x3d,0x37,0x31,0x2a,0x22,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x84,0x7a,0x6f,0x64,0x5d,0x66,0x6f,0x78,0x82,
    0x84,0x7e,0x75,0x6b,0x61,0x56,0x4b,0x41,0x3f,0x49,0x53,0x5c,0x65,0x6e,0x76,0x7c,0x82,0x84,0x85,0x86,0x85,0x82,0x7c,0x75,0x6d,0x65,0x5b,0x52,0x48,0x3f,0x1e,0x28,
    0x33,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x84,0x7c,0x72,0x67,0x5c,0x52,0x47,0x3d,0x32,0x27,0x1d,0x12,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,
    0x4c,0x41,0x3d,0x48,0x52,0x5d,0x67,0x71,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,0x38,0x42,0x4c,0x55,0x5f,0x67,0x6f,0x75,0x79,0x7b,0x7b,0x79,0x74,0x6e,0x67,0x5e,
    0x55,0x4b,0x41,0x38,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x76,0x6d,0x63,0x60,0x69,0x72,0x79,0x79,0x79,0x76,0x6c,0x62,0x58,0x4d,0x42,0x41,0x4b,0x56,0x60,0x6b,
    0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x76,0x6d,0x71,0x79,0x79,0x78,0x70,0x6e,0x77,
    0x79,0x79,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x76,0x6d,0x63,0x5f,0x68,0x71,0x78,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x34,
    0x3d,0x46,0x4f,0x57,0x5f,0x67,0x6d,0x72,0x77,0x7a,0x7b,0x7b,0x7a,0x77,0x73,0x6d,0x67,0x5f,0x57,0x4f,0x46,0x3d,0x34,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x77,
    0x6e,0x64,0x59,0x4f,0x44,0x3e,0x3b,0x38,0x33,0x2e,0x28,0x22,0x1b,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x77,0x6e,0x64,0x59,0x60,0x69,0x72,0x79,0x79,0x79,0x74,
    0x6b,0x60,0x56,0x4b,0x41,0x3b,0x44,0x4e,0x57,0x5f,0x67,0x6d,0x73,0x77,0x7a,0x7b,0x7b,0x7a,0x77,0x73,0x6d,0x66,0x5e,0x56,0x4d,0x44,0x3a,0x1d,0x28,0x33,0x3d,0x48,
    0x52,0x5d,0x67,0x71,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,0x3c,0x32,0x27,0x1d,0x12,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x3b,
    0x46,0x50,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x34,0x3e,0x47,0x50,0x58,0x60,0x66,0x6b,0x6f,0x70,0x70,0x6e,0x6b,0x66,0x5f,0x58,0x4f,0x46,0x3d,
    0x33,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x67,0x5f,0x5a,0x63,0x6a,0x6e,0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x4b,0x40,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,
    0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x67,0x6a,0x6e,0x6e,0x6e,0x6a,0x68,0x6d,0x6e,0x6e,0x6b,
    0x64,0x5b,0x51,0x47,0x3d,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x67,0x5f,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x2f,0x38,0x40,0x48,
    0x50,0x58,0x5e,0x64,0x69,0x6d,0x6f,0x70,0x70,0x6f,0x6d,0x69,0x64,0x5e,0x58,0x50,0x48,0x40,0x37,0x2e,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6d,0x68,0x60,0x56,
    0x4c,0x42,0x38,0x31,0x2e,0x2a,0x25,0x20,0x1a,0x13,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6d,0x68,0x60,0x56,0x5b,0x63,0x6b,0x6e,0x6e,0x6e,0x6c,0x65,0x5d,0x53,
    0x49,0x3f,0x36,0x3f,0x48,0x50,0x58,0x5f,0x64,0x69,0x6d,0x6f,0x70,0x70,0x6f,0x6d,0x69,0x64,0x5e,0x57,0x4f,0x47,0x3e,0x35,0x1c,0x27,0x31,0x3b,0x46,0x50,0x59,0x62,
    0x6a,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x3a,0x30,0x26,0x1b,0x11,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x38,0x42,0x4b,0x54,
    0x5b,0x61,0x63,0x64,0x63,0x61,0x5b,0x53,0x4a,0x41,0x2f,0x38,0x41,0x49,0x51,0x58,0x5d,0x62,0x64,0x65,0x65,0x64,0x61,0x5d,0x57,0x50,0x48,0x40,0x38,0x2f,0x3b,0x45,
    0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x58,0x54,0x5b,0x61,0x63,0x64,0x64,0x63,0x5e,0x58,0x4f,0x46,0x3d,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,
    0x64,0x64,0x64,0x63,0x61,0x5b,0x53,0x4a,0x41,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x61,0x63,0x64,0x63,0x61,0x5f,0x63,0x64,0x64,0x62,0x5c,0x55,0x4c,
    0x43,0x3a,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x58,0x53,0x5b,0x61,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x29,0x31,0x39,0x41,0x49,0x4f,0x55,
    0x5b,0x5f,0x62,0x65,0x65,0x65,0x65,0x62,0x5f,0x5b,0x55,0x50,0x49,0x41,0x39,0x31,0x29,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x59,0x51,0x48,0x3e,0x35,
    0x2b,0x24,0x20,0x1c,0x17,0x11,0x0b,0x3a,0x44,0x4d,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x59,0x51,0x54,0x5c,0x61,0x64,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x30,
    0x39,0x41,0x49,0x50,0x56,0x5b,0x5f,0x62,0x64,0x65,0x65,0x64,0x63,0x5f,0x5b,0x55,0x4f,0x48,0x40,0x38,0x30,0x1a,0x24,0x2e,0x38,0x42,0x4b,0x54,0x5b,0x61,0x63,0x64,
    0x63,0x61,0x5b,0x53,0x4a,0x41,0x37,0x2d,0x23,0x19,0x0f,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x33,0x3c,0x45,0x4c,0x53,0x57,0x59,
    0x59,0x59,0x57,0x52,0x4c,0x44,0x3b,0x2a,0x32,0x3a,0x42,0x49,0x4f,0x54,0x57,0x5a,0x5b,0x5b,0x5a,0x57,0x53,0x4e,0x48,0x41,0x39,0x31,0x29,0x36,0x3f,0x47,0x4e,0x54,
    0x58,0x59,0x59,0x58,0x55,0x50,0x4c,0x53,0x57,0x59,0x59,0x59,0x58,0x55,0x50,0x49,0x40,0x38,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,
    0x59,0x57,0x52,0x4c,0x44,0x3b,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x58,0x55,0x57,0x59,0x59,0x59,0x57,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x46,0x3e,0x35,0x36,
    0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x58,0x55,0x50,0x4c,0x52,0x57,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,0x22,0x2a,0x32,0x3a,0x40,0x47,0x4c,0x51,0x55,0x58,
    0x5a,0x5b,0x5b,0x5a,0x58,0x55,0x51,0x4d,0x47,0x41,0x3a,0x32,0x2a,0x22,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x56,0x51,0x4a,0x42,0x39,0x30,0x27,0x1d,0x16,
    0x12,0x0d,0x08,0x02,0x36,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x56,0x51,0x4a,0x4d,0x53,0x57,0x59,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x2a,0x32,0x3a,0x41,
    0x47,0x4d,0x51,0x55,0x58,0x5a,0x5b,0x5b,0x5a,0x59,0x55,0x51,0x4d,0x47,0x40,0x39,0x31,0x29,0x16,0x20,0x2a,0x33,0x3c,0x45,0x4c,0x53,0x57,0x59,0x59,0x59,0x57,0x52,
    0x4c,0x44,0x3b,0x32,0x29,0x1f,0x16,0x0c,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x2d,0x36,0x3d,0x44,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,
    0x49,0x43,0x3d,0x35,0x23,0x2b,0x33,0x3a,0x40,0x46,0x4a,0x4d,0x50,0x50,0x50,0x4f,0x4d,0x4a,0x45,0x3f,0x39,0x32,0x2a,0x22,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,
    0x4e,0x4b,0x47,0x44,0x49,0x4d,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x49,
    0x43,0x3d,0x35,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x4d,0x4e,0x4e,0x4e,0x4d,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x2f,0x30,0x38,0x40,0x46,
    0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x43,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x1b,0x23,0x2a,0x32,0x38,0x3e,0x43,0x47,0x4b,0x4e,0x50,0x50,0x50,
    0x50,0x4e,0x4b,0x48,0x43,0x3e,0x38,0x32,0x2a,0x23,0x1b,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x3b,0x33,0x2a,0x22,0x18,0x0f,0x08,0x04,0x00,
    0x00,0x2f,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x23,0x2a,0x32,0x38,0x3e,0x43,0x48,
    0x4b,0x4e,0x4f,0x50,0x50,0x50,0x4e,0x4b,0x48,0x43,0x3e,0x38,0x31,0x2a,0x22,0x12,0x1b,0x25,0x2d,0x36,0x3d,0x44,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,0x49,0x43,0x3d,0x35,
    0x2d,0x24,0x1b,0x11,0x08,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x27,0x2e,0x35,0x3b,0x3f,0x42,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,
    0x2e,0x1c,0x24,0x2b,0x31,0x37,0x3c,0x40,0x43,0x45,0x45,0x45,0x45,0x43,0x3f,0x3c,0x37,0x31,0x2a,0x23,0x1b,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x43,0x41,0x3e,
    0x3b,0x3f,0x42,0x44,0x44,0x44,0x43,0x41,0x3d,0x38,0x32,0x2a,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2e,
    0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x43,0x41,0x42,0x44,0x44,0x44,0x42,0x42,0x43,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,0x28,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,
    0x44,0x43,0x41,0x3e,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x14,0x1b,0x23,0x29,0x2f,0x35,0x39,0x3d,0x41,0x43,0x45,0x45,0x45,0x45,0x43,0x41,
    0x3e,0x39,0x35,0x2f,0x29,0x23,0x1b,0x14,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x43,0x42,0x3e,0x39,0x33,0x2c,0x24,0x1c,0x13,0x0a,0x01,0x00,0x00,0x00,0x29,0x30,
    0x37,0x3c,0x40,0x43,0x44,0x44,0x43,0x42,0x3e,0x39,0x3b,0x40,0x43,0x44,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x1b,0x23,0x29,0x2f,0x35,0x3a,0x3e,0x41,0x43,0x45,
    0x45,0x45,0x45,0x44,0x41,0x3e,0x3a,0x35,0x2f,0x29,0x22,0x1b,0x0d,0x16,0x1e,0x27,0x2e,0x35,0x3b,0x3f,0x42,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2e,0x26,0x1e,0x15,
    0x0c,0x03,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x29,0x30,0x37,0x3c,0x40,0x43,0x44,0x44,0x43,0x42,0x3e,0x3a,0x3f,0x42,0x44,0x44,
    0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x23,0x2b,0x32,0x39,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x39,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x31,0x2a,
    0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x40,0x43,0x44,0x44,0x44,0x43,0x40,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x27,0x2e,0x35,
    0x3b,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3c,0x3b,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x2c,0x33,0x39,0x3e,0x42,0x43,0x44,0x44,0x43,0x42,0x3e,0x39,
    0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x41,0x3d,0x38,0x31,0x2a,0x23,0x2b,0x32,0x39,0x3e,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x42,0x3f,0x3a,
    0x34,0x2e,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x21,0x19,0x11,0x0c,0x06,0x00,0x01,0x07,0x0d,0x12,0x1b,0x23,0x2b,0x32,0x39,0x3e,
    0x41,0x43,0x44,0x44,0x43,0x40,0x3c,0x37,0x30,0x29,0x17,0x1f,0x27,0x2e,0x35,0x3a,0x3f,0x43,0x45,0x46,0x46,0x45,0x44,0x41,0x3c,0x37,0x30,0x29,0x2a,0x32,0x38,0x3d,
    0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x21,0x19,0x12,0x0e,0x08,0x02,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x21,0x1b,
    0x19,0x15,0x10,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2f,0x38,0x3f,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,
    0x44,0x3e,0x36,0x2e,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x39,0x31,0x32,0x3a,0x41,
    0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x4a,0x4d,0x4e,0x4e,0x4e,0x4d,0x4a,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x2d,0x36,0x3d,0x44,0x49,0x4d,
    0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x44,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x33,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x43,0x48,0x4c,
    0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x39,0x31,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x49,0x43,0x3d,0x35,0x32,
    0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x28,0x1f,0x1a,0x15,0x0f,0x09,0x0a,0x10,0x16,0x1b,0x21,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,
    0x4e,0x4d,0x4a,0x45,0x3f,0x38,0x2f,0x1e,0x26,0x2e,0x36,0x3d,0x43,0x48,0x4d,0x4f,0x51,0x51,0x50,0x4e,0x4b,0x46,0x3f,0x38,0x2f,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,
    0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x28,0x20,0x1c,0x17,0x11,0x0a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x28,0x26,0x23,0x1e,0x19,
    0x13,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x3e,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x56,0x51,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,
    0x34,0x2f,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x55,0x50,0x49,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x37,0x38,0x40,0x49,0x50,0x55,0x58,
    0x59,0x59,0x58,0x55,0x50,0x53,0x57,0x59,0x59,0x59,0x57,0x53,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x33,0x3c,0x45,0x4c,0x53,0x57,0x59,0x59,0x59,
    0x58,0x54,0x4e,0x4c,0x53,0x57,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x39,0x42,0x4a,0x51,0x56,0x59,0x59,0x59,0x59,0x56,0x51,0x4a,0x4b,0x52,0x56,0x59,0x59,0x59,
    0x58,0x55,0x4f,0x48,0x40,0x37,0x2f,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x52,0x4c,0x44,0x3b,0x38,0x40,0x49,0x50,
    0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x2d,0x28,0x23,0x1e,0x18,0x11,0x12,0x19,0x1f,0x25,0x29,0x2f,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,
    0x4e,0x47,0x3e,0x36,0x23,0x2c,0x35,0x3d,0x45,0x4c,0x52,0x56,0x5a,0x5b,0x5b,0x5a,0x58,0x54,0x4e,0x47,0x3e,0x35,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,
    0x4e,0x47,0x3f,0x36,0x2e,0x2a,0x25,0x20,0x19,0x13,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x32,0x30,0x2c,0x28,0x22,0x1c,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3a,0x44,0x4d,0x56,0x5d,0x62,0x64,0x64,0x63,0x5f,0x59,0x52,0x5a,0x60,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x34,0x3e,
    0x47,0x50,0x58,0x5f,0x63,0x64,0x64,0x63,0x5e,0x58,0x50,0x50,0x58,0x5f,0x63,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x3c,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x63,
    0x5e,0x58,0x5c,0x62,0x64,0x64,0x64,0x62,0x5c,0x58,0x5f,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x38,0x42,0x4b,0x54,0x5b,0x61,0x63,0x64,0x64,0x62,0x5d,0x56,
    0x54,0x5b,0x61,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x3e,0x48,0x51,0x59,0x5f,0x63,0x64,0x64,0x63,0x5f,0x59,0x51,0x52,0x5a,0x60,0x63,0x64,0x64,0x62,0x5e,0x57,
    0x4f,0x46,0x3c,0x34,0x3e,0x47,0x50,0x58,0x5f,0x63,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x61,0x5b,0x53,0x4a,0x41,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,
    0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x36,0x32,0x2c,0x26,0x20,0x18,0x1a,0x21,0x28,0x2e,0x33,0x37,0x3e,0x47,0x50,0x58,0x5f,0x63,0x64,0x64,0x62,0x5d,0x56,0x4d,0x44,
    0x3a,0x28,0x32,0x3b,0x44,0x4c,0x54,0x5b,0x60,0x64,0x66,0x66,0x65,0x62,0x5d,0x56,0x4d,0x44,0x3a,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,
    0x3c,0x38,0x34,0x2e,0x28,0x22,0x1a,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3d,0x3d,0x3a,0x36,0x31,0x2b,0x24,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3e,0x48,0x52,0x5c,0x65,0x6c,0x6e,0x6e,0x6d,0x68,0x60,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x37,0x41,0x4b,0x55,0x5f,
    0x67,0x6d,0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x55,0x5f,0x67,0x6d,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x40,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6d,0x67,0x5e,0x64,
    0x6b,0x6e,0x6e,0x6e,0x6b,0x64,0x5f,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x3b,0x46,0x50,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x6c,0x65,0x5d,0x5a,0x63,0x6a,
    0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x42,0x4c,0x56,0x60,0x68,0x6d,0x6e,0x6e,0x6d,0x68,0x60,0x57,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x40,
    0x37,0x41,0x4b,0x55,0x5f,0x67,0x6d,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,
    0x5d,0x53,0x49,0x44,0x40,0x3b,0x35,0x2f,0x27,0x20,0x21,0x29,0x30,0x37,0x3c,0x41,0x45,0x4b,0x55,0x5f,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x2e,0x36,
    0x40,0x4a,0x53,0x5b,0x63,0x6a,0x6e,0x70,0x71,0x6f,0x6c,0x64,0x5b,0x52,0x48,0x3d,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x46,0x42,0x3d,
    0x37,0x31,0x29,0x22,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x48,0x47,0x44,0x40,0x3a,0x33,0x2b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x40,0x4a,0x55,0x5f,0x6a,0x73,0x79,0x79,0x77,0x6e,0x64,0x5b,0x65,0x70,0x78,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x39,0x43,0x4e,0x58,0x63,0x6d,0x76,0x79,
    0x79,0x76,0x6d,0x63,0x59,0x59,0x63,0x6d,0x76,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,0x42,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x76,0x6d,0x63,0x69,0x73,0x79,0x79,
    0x79,0x73,0x69,0x63,0x6d,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x3d,0x48,0x52,0x5d,0x67,0x71,0x79,0x79,0x79,0x74,0x6b,0x63,0x61,0x69,0x71,0x79,0x79,0x79,
    0x72,0x68,0x5e,0x53,0x49,0x44,0x4f,0x59,0x64,0x6e,0x77,0x79,0x79,0x77,0x6f,0x66,0x5d,0x5e,0x67,0x70,0x78,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,0x42,0x39,0x43,0x4e,
    0x58,0x63,0x6d,0x76,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x52,
    0x4e,0x4a,0x44,0x3e,0x36,0x2f,0x27,0x28,0x30,0x38,0x3f,0x45,0x4b,0x4f,0x53,0x58,0x63,0x6d,0x76,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x34,0x3d,0x44,0x4e,0x58,
    0x61,0x6a,0x72,0x78,0x7b,0x7b,0x7a,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x53,0x50,0x4c,0x46,0x40,0x38,0x31,
    0x29,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x53,0x53,0x51,0x4e,0x48,0x42,0x3a,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,
    0x55,0x60,0x6b,0x75,0x81,0x84,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x39,0x44,0x4e,0x59,0x63,0x6e,0x77,0x82,0x84,0x7a,0x70,
    0x66,0x5c,0x5d,0x67,0x71,0x7b,0x84,0x81,0x76,0x6c,0x62,0x57,0x4c,0x42,0x43,0x4d,0x58,0x62,0x6d,0x77,0x82,0x84,0x7a,0x6f,0x65,0x6c,0x76,0x81,0x84,0x81,0x77,0x6c,
    0x66,0x70,0x7a,0x84,0x81,0x76,0x6b,0x61,0x56,0x4c,0x41,0x3d,0x48,0x53,0x5d,0x68,0x72,0x7b,0x84,0x83,0x7a,0x71,0x69,0x67,0x70,0x78,0x81,0x84,0x7c,0x73,0x68,0x5e,
    0x53,0x49,0x44,0x4f,0x5a,0x64,0x6e,0x78,0x82,0x84,0x7d,0x75,0x6c,0x63,0x64,0x6d,0x76,0x7e,0x84,0x80,0x76,0x6c,0x61,0x57,0x4c,0x42,0x39,0x44,0x4e,0x59,0x64,0x6e,
    0x79,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x7c,0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x5f,0x5c,0x58,0x53,0x4d,
    0x45,0x3e,0x36,0x2e,0x2f,0x37,0x3f,0x47,0x4e,0x54,0x59,0x5d,0x5f,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3a,0x43,0x4c,0x53,0x5c,0x66,0x70,0x79,
    0x82,0x86,0x86,0x7e,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x5f,0x5d,0x59,0x55,0x4e,0x47,0x40,0x37,0x2f,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x5d,0x5d,0x5d,0x5c,0x57,0x51,0x49,0x40,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,
    0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x37,0x42,0x4c,0x56,0x60,0x6a,0x74,0x7d,0x88,0x7e,0x74,0x6a,0x60,0x61,
    0x6b,0x75,0x7e,0x87,0x7c,0x73,0x69,0x5f,0x55,0x4b,0x40,0x41,0x4b,0x56,0x60,0x6a,0x74,0x7e,0x87,0x7c,0x72,0x67,0x6f,0x79,0x84,0x82,0x84,0x79,0x6f,0x68,0x72,0x7c,
    0x87,0x7d,0x73,0x69,0x5f,0x54,0x4a,0x40,0x3c,0x46,0x50,0x5a,0x63,0x6c,0x75,0x7d,0x87,0x81,0x77,0x6f,0x6d,0x76,0x7e,0x87,0x7e,0x76,0x6d,0x64,0x5b,0x51,0x47,0x43,
    0x4d,0x57,0x60,0x69,0x72,0x7b,0x84,0x84,0x7b,0x72,0x69,0x6a,0x73,0x7b,0x85,0x82,0x79,0x70,0x67,0x5e,0x54,0x4a,0x40,0x39,0x44,0x4e,0x59,0x64,0x6e,0x79,0x80,0x80,
    0x80,0x80,0x80,0x80,0x80,0x83,0x87,0x7c,0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6b,0x69,0x66,0x61,0x5c,0x54,0x4d,0x45,0x3c,
    0x34,0x35,0x3e,0x46,0x4e,0x56,0x5d,0x62,0x67,0x69,0x6b,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3f,0x48,0x52,0x5a,0x62,0x68,0x73,0x7d,0x88,0x80,0x7c,
    0x7c,0x72,0x68,0x5d,0x53,0x48,0x3e,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6b,0x6a,0x67,0x63,0x5d,0x56,0x4f,0x46,0x3d,0x34,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x82,0x76,0x6c,0x66,0x68,0x68,0x68,0x66,0x60,0x58,0x4f,0x45,0x3b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,
    0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x34,0x3e,0x48,0x52,0x5c,0x66,0x70,0x7a,0x84,0x82,0x77,0x6e,0x64,0x64,0x6e,0x78,0x83,
    0x83,0x79,0x6f,0x65,0x5b,0x51,0x47,0x3d,0x3e,0x49,0x53,0x5d,0x67,0x72,0x7c,0x86,0x7e,0x74,0x6a,0x72,0x7c,0x87,0x7d,0x87,0x7c,0x72,0x6b,0x75,0x80,0x85,0x7a,0x70,
    0x66,0x5c,0x51,0x47,0x3d,0x39,0x42,0x4c,0x55,0x5d,0x66,0x6f,0x77,0x80,0x87,0x7d,0x75,0x74,0x7c,0x85,0x81,0x78,0x6f,0x67,0x5e,0x56,0x4d,0x43,0x3f,0x49,0x52,0x5b,
    0x63,0x6c,0x75,0x7e,0x87,0x81,0x77,0x6f,0x70,0x78,0x82,0x85,0x7b,0x73,0x6a,0x61,0x59,0x50,0x46,0x3d,0x38,0x43,0x4d,0x57,0x62,0x6b,0x73,0x74,0x74,0x74,0x74,0x74,
    0x77,0x80,0x88,0x80,0x77,0x6f,0x65,0x5b,0x51,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x74,0x75,0x73,0x70,0x6a,0x63,0x5c,0x54,0x4b,0x42,0x39,0x3a,0x43,
    0x4d,0x55,0x5d,0x65,0x6c,0x71,0x73,0x75,0x74,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x7e,0x85,0x7b,0x73,0x72,0x6d,0x64,
    0x5b,0x51,0x47,0x3c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x74,0x75,0x74,0x71,0x6c,0x65,0x5e,0x55,0x4c,0x42,0x39,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,
    0x76,0x6c,0x6f,0x73,0x73,0x73,0x6f,0x66,0x5d,0x53,0x48,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,
    0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x31,0x3b,0x44,0x4e,0x58,0x62,0x6c,0x76,0x80,0x85,0x7b,0x71,0x67,0x68,0x72,0x7c,0x86,0x7e,0x75,0x6b,
    0x61,0x57,0x4d,0x43,0x39,0x3c,0x46,0x50,0x5a,0x65,0x6f,0x79,0x84,0x82,0x77,0x6c,0x75,0x80,0x84,0x7b,0x85,0x80,0x75,0x6d,0x78,0x83,0x83,0x78,0x6d,0x63,0x59,0x4f,
    0x44,0x3a,0x34,0x3d,0x46,0x4e,0x57,0x60,0x68,0x71,0x79,0x83,0x84,0x7b,0x7a,0x83,0x83,0x7a,0x71,0x69,0x61,0x58,0x4f,0x47,0x3e,0x3a,0x43,0x4c,0x54,0x5d,0x66,0x6f,
    0x78,0x81,0x87,0x7d,0x74,0x75,0x7e,0x87,0x7e,0x75,0x6d,0x64,0x5b,0x53,0x4a,0x41,0x38,0x36,0x40,0x4a,0x53,0x5c,0x64,0x69,0x6a,0x6a,0x6a,0x6d,0x76,0x7e,0x87,0x82,
    0x79,0x70,0x68,0x60,0x57,0x4d,0x44,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x7b,0x80,0x80,0x7d,0x79,0x72,0x6b,0x63,0x5a,0x51,0x47,0x3e,0x3f,0x48,0x52,0x5b,0x64,
    0x6c,0x74,0x7a,0x7e,0x80,0x7e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7e,0x85,0x7d,0x7d,0x78,0x6d,0x63,0x58,0x4d,0x43,
    0x39,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x7a,0x7e,0x81,0x7e,0x7b,0x74,0x6d,0x64,0x5a,0x50,0x46,0x3c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6f,0x76,
    0x7d,0x7d,0x7d,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,
    0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x2d,0x37,0x41,0x4b,0x54,0x5e,0x68,0x72,0x7c,0x86,0x7e,0x75,0x6b,0x6c,0x76,0x80,0x85,0x7b,0x71,0x67,0x5d,0x53,0x49,
    0x3f,0x36,0x39,0x43,0x4d,0x58,0x62,0x6c,0x76,0x81,0x84,0x79,0x6f,0x78,0x82,0x81,0x78,0x83,0x83,0x78,0x70,0x7a,0x85,0x80,0x75,0x6b,0x60,0x56,0x4c,0x42,0x37,0x2e,
    0x37,0x40,0x48,0x51,0x5a,0x62,0x6b,0x73,0x7c,0x85,0x82,0x80,0x85,0x7c,0x74,0x6b,0x63,0x5a,0x52,0x49,0x40,0x38,0x34,0x3d,0x46,0x4f,0x57,0x60,0x69,0x72,0x7b,0x84,
    0x83,0x7a,0x7b,0x84,0x81,0x78,0x6f,0x67,0x5e,0x55,0x4d,0x44,0x3b,0x32,0x32,0x3c,0x45,0x4d,0x55,0x5b,0x5f,0x5f,0x63,0x6c,0x74,0x7c,0x85,0x83,0x7a,0x72,0x6a,0x62,
    0x59,0x51,0x48,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x84,0x83,0x82,0x85,0x82,0x7a,0x71,0x68,0x5f,0x55,0x4b,0x41,0x42,0x4c,0x56,0x60,0x6a,0x73,0x7b,0x83,
    0x84,0x82,0x83,0x82,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x86,0x83,0x83,0x78,0x6d,0x63,0x58,0x4d,0x43,0x38,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x82,0x83,0x83,0x83,0x85,0x84,0x7b,0x72,0x68,0x5e,0x54,0x49,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x76,0x7e,0x86,0x80,0x79,
    0x71,0x68,0x5e,0x54,0x49,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x87,0x7e,
    0x73,0x69,0x5e,0x54,0x49,0x3e,0x29,0x33,0x3d,0x47,0x51,0x5b,0x64,0x6e,0x78,0x83,0x83,0x78,0x6e,0x70,0x7a,0x84,0x82,0x77,0x6d,0x63,0x59,0x4f,0x46,0x3c,0x32,0x36,
    0x40,0x4b,0x55,0x5f,0x69,0x74,0x7e,0x86,0x7b,0x71,0x7a,0x85,0x7e,0x75,0x80,0x85,0x7b,0x72,0x7c,0x87,0x7c,0x72,0x68,0x5e,0x53,0x49,0x3f,0x35,0x28,0x31,0x3a,0x42,
    0x4b,0x53,0x5c,0x65,0x6d,0x76,0x7e,0x87,0x87,0x7e,0x76,0x6d,0x65,0x5c,0x54,0x4b,0x43,0x3a,0x32,0x2e,0x37,0x40,0x49,0x52,0x5a,0x63,0x6c,0x75,0x7d,0x87,0x80,0x81,
    0x84,0x7b,0x72,0x69,0x61,0x58,0x4f,0x46,0x3e,0x35,0x2c,0x2d,0x36,0x3e,0x46,0x4c,0x51,0x59,0x62,0x6a,0x72,0x7b,0x83,0x85,0x7c,0x74,0x6b,0x63,0x5b,0x53,0x4a,0x42,
    0x3a,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x87,0x7e,0x78,0x77,0x7c,0x85,0x81,0x77,0x6d,0x63,0x59,0x4e,0x44,0x45,0x50,0x5a,0x64,0x6e,0x78,0x82,0x83,0x7b,0x77,0x79,
    0x80,0x89,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x42,0x4d,0x57,0x62,0x6c,0x74,0x77,0x7e,0x85,0x7a,0x77,0x74,0x6c,0x62,0x57,0x4d,0x42,0x38,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x87,0x7e,0x79,0x78,0x7c,0x86,0x80,0x75,0x6b,0x60,0x56,0x4b,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x7e,0x86,0x80,0x78,0x71,0x6a,0x62,0x5a,
    0x50,0x46,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,
    0x54,0x49,0x3e,0x25,0x2f,0x39,0x43,0x4d,0x57,0x61,0x6b,0x74,0x7e,0x86,0x7c,0x72,0x73,0x7d,0x87,0x7d,0x73,0x69,0x5f,0x56,0x4b,0x42,0x38,0x2e,0x33,0x3e,0x48,0x52,
    0x5c,0x67,0x71,0x7b,0x86,0x7e,0x73,0x7d,0x85,0x7b,0x72,0x7c,0x87,0x7d,0x75,0x80,0x84,0x7a,0x6f,0x65,0x5b,0x51,0x46,0x3c,0x32,0x26,0x2f,0x37,0x40,0x49,0x51,0x5a,
    0x62,0x6b,0x73,0x7c,0x85,0x85,0x7c,0x74,0x6b,0x62,0x5a,0x51,0x48,0x40,0x37,0x2e,0x28,0x31,0x3a,0x43,0x4c,0x54,0x5d,0x66,0x6f,0x77,0x81,0x86,0x86,0x7d,0x75,0x6c,
    0x63,0x5a,0x52,0x49,0x40,0x38,0x2f,0x26,0x2e,0x37,0x3f,0x47,0x4f,0x58,0x60,0x68,0x71,0x79,0x82,0x86,0x7d,0x75,0x6d,0x65,0x5c,0x54,0x4c,0x44,0x3b,0x33,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x83,0x78,0x6f,0x6d,0x76,0x81,0x85,0x7a,0x70,0x65,0x5b,0x50,0x46,0x47,0x52,0x5c,0x67,0x71,0x7b,0x86,0x7e,0x74,0x6c,0x71,0x7a,0x85,0x81,
    0x75,0x6b,0x60,0x55,0x4b,0x40,0x40,0x4a,0x54,0x5d,0x65,0x6b,0x73,0x7e,0x85,0x7a,0x6f,0x6b,0x65,0x5d,0x54,0x4a,0x40,0x36,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,
    0x79,0x70,0x6e,0x79,0x84,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x7e,0x86,0x80,0x78,0x71,0x69,0x62,0x5b,0x53,0x4b,0x42,0x38,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x60,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x65,0x5c,0x66,0x71,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,
    0x21,0x2b,0x35,0x3f,0x49,0x53,0x5d,0x67,0x71,0x7a,0x85,0x80,0x75,0x77,0x82,0x84,0x79,0x6f,0x66,0x5c,0x52,0x48,0x3e,0x34,0x2a,0x31,0x3b,0x45,0x50,0x5a,0x64,0x6e,
    0x79,0x83,0x81,0x76,0x81,0x83,0x78,0x6f,0x79,0x84,0x81,0x78,0x83,0x82,0x77,0x6d,0x62,0x58,0x4e,0x44,0x39,0x2f,0x2d,0x35,0x3e,0x46,0x4f,0x57,0x60,0x68,0x71,0x79,
    0x83,0x83,0x84,0x83,0x7a,0x71,0x69,0x60,0x57,0x4f,0x46,0x3d,0x35,0x22,0x2b,0x34,0x3d,0x46,0x4e,0x57,0x60,0x69,0x72,0x7b,0x85,0x81,0x77,0x6f,0x66,0x5d,0x54,0x4c,
    0x43,0x3a,0x32,0x29,0x20,0x34,0x3d,0x45,0x4e,0x56,0x5e,0x67,0x6f,0x77,0x80,0x88,0x80,0x77,0x6f,0x66,0x5e,0x56,0x53,0x4f,0x49,0x42,0x3a,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x81,0x75,0x6b,0x69,0x73,0x7d,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x49,0x53,0x5d,0x68,0x73,0x7d,0x87,0x7c,0x72,0x67,0x6d,0x78,0x83,0x81,0x75,0x6b,0x60,
    0x55,0x4b,0x40,0x3c,0x45,0x4e,0x56,0x5e,0x69,0x73,0x7e,0x85,0x7a,0x6f,0x64,0x5d,0x56,0x4e,0x45,0x3c,0x32,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x6c,0x6d,
    0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x86,0x86,0x7c,0x74,0x6b,0x62,0x5a,0x53,0x4c,0x44,0x3c,0x33,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x4a,0x55,0x5f,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x5d,0x67,0x72,0x7c,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x1d,0x27,0x31,
    0x3b,0x45,0x4f,0x59,0x63,0x6d,0x77,0x81,0x83,0x79,0x7b,0x85,0x80,0x75,0x6c,0x62,0x58,0x4e,0x44,0x3a,0x30,0x26,0x2e,0x38,0x43,0x4d,0x57,0x61,0x6c,0x76,0x81,0x83,
    0x79,0x84,0x80,0x75,0x6c,0x77,0x82,0x83,0x7a,0x85,0x7e,0x74,0x6a,0x60,0x55,0x4b,0x41,0x37,0x2c,0x33,0x3c,0x44,0x4d,0x55,0x5e,0x66,0x6f,0x77,0x80,0x86,0x7d,0x7e,
    0x87,0x81,0x77,0x6f,0x66,0x5e,0x55,0x4c,0x43,0x3b,0x1d,0x25,0x2e,0x37,0x40,0x48,0x51,0x5a,0x64,0x6f,0x7a,0x85,0x81,0x75,0x6b,0x60,0x57,0x4e,0x46,0x3d,0x34,0x2c,
    0x23,0x1a,0x3a,0x43,0x4c,0x54,0x5d,0x65,0x6d,0x76,0x7e,0x87,0x81,0x78,0x70,0x68,0x60,0x5f,0x5f,0x5d,0x58,0x51,0x49,0x40,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,
    0x75,0x6b,0x68,0x73,0x7d,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x49,0x54,0x5e,0x69,0x73,0x7e,0x87,0x7b,0x71,0x67,0x6c,0x77,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,
    0x37,0x3f,0x49,0x54,0x5e,0x69,0x73,0x7e,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x47,0x3f,0x37,0x2e,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x87,0x80,0x84,0x83,0x7a,0x71,0x68,0x5f,0x56,0x4e,0x45,0x3c,0x33,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x7e,0x87,0x7c,0x72,0x6a,0x68,0x6a,0x74,0x7e,0x88,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x1a,0x24,0x2e,0x37,0x41,0x4b,
    0x55,0x5f,0x69,0x73,0x7c,0x87,0x7c,0x7e,0x86,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x40,0x36,0x2c,0x22,0x2b,0x36,0x40,0x4a,0x54,0x5f,0x69,0x73,0x7d,0x85,0x7b,0x86,0x7c,
    0x72,0x69,0x74,0x7e,0x85,0x7c,0x86,0x7b,0x71,0x67,0x5d,0x53,0x48,0x3e,0x34,0x2a,0x39,0x42,0x4a,0x53,0x5c,0x64,0x6d,0x75,0x7e,0x87,0x80,0x77,0x78,0x82,0x87,0x7d,
    0x75,0x6c,0x63,0x5b,0x52,0x49,0x41,0x17,0x1f,0x28,0x31,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x37,0x2e,0x25,0x1d,0x14,0x3e,
    0x48,0x51,0x5b,0x63,0x6c,0x74,0x7c,0x85,0x83,0x7a,0x72,0x6a,0x6a,0x6a,0x6a,0x6a,0x67,0x60,0x58,0x4f,0x45,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6b,
    0x74,0x7e,0x85,0x7b,0x70,0x66,0x5b,0x51,0x46,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7d,0x73,0x69,0x6e,0x78,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3e,0x49,
    0x54,0x5e,0x69,0x73,0x7e,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3a,0x30,0x28,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,
    0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x7d,0x87,0x80,0x77,0x6e,0x65,0x5c,0x53,0x4a,0x42,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x3d,0x48,0x52,0x5d,0x67,0x71,0x7b,0x86,0x81,0x79,0x74,0x73,0x74,0x79,0x82,0x85,0x7a,0x70,0x66,0x5c,0x51,0x47,0x3c,0x16,0x20,0x2a,0x34,0x3d,0x47,0x51,0x5b,0x65,
    0x6f,0x79,0x83,0x80,0x82,0x82,0x78,0x6e,0x64,0x5a,0x50,0x46,0x3c,0x32,0x28,0x1e,0x28,0x33,0x3d,0x47,0x52,0x5c,0x66,0x70,0x7b,0x85,0x7e,0x84,0x7a,0x70,0x67,0x71,
    0x7b,0x86,0x7e,0x83,0x79,0x6e,0x64,0x5a,0x50,0x45,0x3b,0x31,0x27,0x3e,0x47,0x51,0x59,0x62,0x6a,0x73,0x7b,0x84,0x82,0x79,0x71,0x72,0x7b,0x84,0x84,0x7b,0x72,0x6a,
    0x61,0x58,0x50,0x46,0x11,0x1a,0x25,0x2f,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x2b,0x20,0x17,0x0e,0x40,0x4b,0x55,0x5f,
    0x69,0x72,0x7b,0x83,0x84,0x7b,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x6f,0x66,0x5d,0x52,0x48,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x84,0x7a,0x72,0x71,0x79,0x83,0x83,
    0x79,0x6e,0x64,0x59,0x4f,0x45,0x47,0x51,0x5c,0x66,0x70,0x7a,0x85,0x81,0x77,0x71,0x73,0x7c,0x86,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3e,0x49,0x54,0x5e,0x69,
    0x73,0x7e,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3a,0x2f,0x25,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,
    0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x77,0x81,0x86,0x7c,0x74,0x6b,0x62,0x59,0x50,0x47,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3b,0x45,0x50,
    0x5a,0x64,0x6e,0x77,0x81,0x88,0x82,0x7e,0x7d,0x7e,0x82,0x87,0x80,0x76,0x6d,0x63,0x59,0x4f,0x44,0x3a,0x12,0x1c,0x26,0x30,0x3a,0x44,0x4d,0x57,0x61,0x6b,0x75,0x80,
    0x83,0x85,0x7e,0x74,0x6a,0x60,0x56,0x4c,0x42,0x38,0x2f,0x25,0x1b,0x26,0x30,0x3a,0x45,0x4f,0x59,0x64,0x6e,0x78,0x83,0x84,0x82,0x77,0x6d,0x64,0x6e,0x78,0x83,0x84,
    0x81,0x76,0x6c,0x61,0x57,0x4d,0x43,0x38,0x2e,0x24,0x41,0x4b,0x55,0x5f,0x68,0x71,0x79,0x82,0x85,0x7c,0x73,0x6a,0x6c,0x75,0x7d,0x86,0x82,0x79,0x70,0x67,0x5e,0x54,
    0x4a,0x0f,0x1a,0x25,0x2f,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x2b,0x20,0x16,0x0b,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,
    0x89,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x7e,0x73,0x69,0x5e,0x54,0x49,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x84,0x82,0x7b,0x7b,0x81,0x87,0x7d,0x74,0x6b,0x61,
    0x57,0x4d,0x42,0x44,0x4f,0x59,0x63,0x6d,0x76,0x7e,0x87,0x80,0x7b,0x7c,0x83,0x85,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3e,0x49,0x54,0x5e,0x69,0x73,0x7e,0x85,
    0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3a,0x2f,0x25,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,
    0x63,0x6d,0x78,0x83,0x82,0x76,0x72,0x7b,0x84,0x83,0x79,0x71,0x68,0x5f,0x55,0x4b,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x43,0x4d,0x56,0x60,0x69,
    0x72,0x79,0x80,0x84,0x85,0x86,0x85,0x83,0x7e,0x78,0x70,0x68,0x5f,0x55,0x4b,0x41,0x37,0x0e,0x18,0x22,0x2c,0x36,0x40,0x4a,0x54,0x5d,0x67,0x71,0x7b,0x84,0x84,0x7a,
    0x70,0x66,0x5c,0x52,0x48,0x3f,0x35,0x2b,0x21,0x17,0x23,0x2d,0x38,0x42,0x4c,0x56,0x61,0x6b,0x75,0x80,0x84,0x7e,0x74,0x6a,0x61,0x6b,0x75,0x80,0x84,0x7d,0x73,0x69,
    0x5f,0x54,0x4a,0x40,0x36,0x2b,0x21,0x43,0x4d,0x58,0x62,0x6d,0x77,0x80,0x84,0x7e,0x75,0x6d,0x64,0x66,0x6f,0x77,0x80,0x84,0x7e,0x76,0x6c,0x61,0x57,0x4c,0x0f,0x1a,
    0x25,0x2f,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x2b,0x20,0x16,0x0b,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,
    0x84,0x84,0x84,0x84,0x84,0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x81,0x85,0x86,0x84,0x7e,0x77,0x6f,0x66,0x5d,0x53,0x49,0x3f,
    0x41,0x4b,0x55,0x5e,0x67,0x70,0x78,0x80,0x84,0x86,0x85,0x80,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3e,0x49,0x54,0x5e,0x69,0x73,0x7e,0x84,0x7a,0x6f,0x64,
    0x5a,0x4f,0x45,0x3a,0x2f,0x25,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,
    0x83,0x82,0x76,0x6c,0x75,0x7d,0x84,0x80,0x77,0x6d,0x62,0x58,0x4d,0x43,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x3e,0x48,0x51,0x5a,0x63,0x6a,0x71,0x76,
    0x79,0x7b,0x7b,0x7b,0x79,0x75,0x70,0x69,0x61,0x59,0x50,0x47,0x3d,0x34,0x0a,0x14,0x1e,0x28,0x32,0x3c,0x46,0x50,0x5a,0x64,0x6d,0x76,0x79,0x79,0x76,0x6c,0x62,0x58,
    0x4e,0x45,0x3b,0x31,0x27,0x1d,0x13,0x20,0x2b,0x35,0x3f,0x4a,0x54,0x5e,0x68,0x72,0x79,0x79,0x78,0x71,0x67,0x5e,0x68,0x72,0x79,0x79,0x78,0x70,0x66,0x5c,0x52,0x47,
    0x3d,0x33,0x29,0x1e,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x77,0x6f,0x67,0x5e,0x60,0x68,0x71,0x78,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,0x0f,0x1a,0x24,0x2f,0x3a,
    0x44,0x4f,0x59,0x64,0x6e,0x77,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x35,0x2b,0x20,0x15,0x0b,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x79,
    0x79,0x79,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x77,0x7a,0x7b,0x79,0x75,0x6f,0x68,0x60,0x57,0x4e,0x45,0x3b,0x3d,0x47,0x50,
    0x58,0x61,0x69,0x70,0x75,0x7a,0x7b,0x7a,0x77,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x33,0x3e,0x49,0x53,0x5e,0x68,0x72,0x79,0x79,0x77,0x6e,0x64,0x59,0x4f,0x44,
    0x3a,0x2f,0x24,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,
    0x6b,0x6f,0x77,0x79,0x79,0x76,0x6c,0x62,0x58,0x4d,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x3a,0x43,0x4b,0x54,0x5b,0x62,0x68,0x6c,0x6f,0x70,0x70,
    0x70,0x6e,0x6b,0x67,0x61,0x5a,0x52,0x4a,0x41,0x38,0x2f,0x06,0x10,0x1a,0x24,0x2e,0x38,0x42,0x4c,0x55,0x5f,0x67,0x6d,0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x4b,0x41,0x37,
    0x2d,0x23,0x19,0x0f,0x1e,0x28,0x32,0x3c,0x46,0x50,0x5a,0x63,0x6b,0x6e,0x6e,0x6e,0x6a,0x62,0x5a,0x63,0x6b,0x6e,0x6e,0x6e,0x69,0x61,0x58,0x4e,0x44,0x3a,0x30,0x26,
    0x1c,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6e,0x68,0x61,0x58,0x5a,0x62,0x6a,0x6e,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x0e,0x19,0x23,0x2e,0x38,0x42,0x4c,0x56,
    0x60,0x68,0x6d,0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x34,0x29,0x1f,0x14,0x0a,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,
    0x6e,0x6b,0x63,0x5a,0x50,0x46,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6d,0x70,0x70,0x6f,0x6c,0x66,0x60,0x59,0x51,0x48,0x40,0x36,0x38,0x41,0x4a,0x52,0x5a,0x61,
    0x67,0x6c,0x6f,0x70,0x70,0x6d,0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x32,0x3c,0x46,0x50,0x5a,0x63,0x6b,0x6e,0x6e,0x6d,0x68,0x60,0x56,0x4c,0x42,0x38,0x2e,0x23,
    0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x68,0x6d,
    0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x4b,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2b,0x34,0x3d,0x45,0x4c,0x53,0x59,0x5e,0x62,0x64,0x65,0x65,0x65,0x64,0x61,
    0x5d,0x58,0x52,0x4b,0x43,0x3b,0x33,0x2a,0x03,0x0d,0x17,0x20,0x2a,0x34,0x3e,0x47,0x50,0x58,0x5f,0x63,0x64,0x64,0x63,0x5e,0x58,0x4f,0x46,0x3d,0x33,0x29,0x1f,0x15,
    0x0b,0x1b,0x25,0x2f,0x39,0x42,0x4c,0x54,0x5c,0x61,0x64,0x64,0x63,0x61,0x5b,0x54,0x5c,0x61,0x64,0x64,0x63,0x60,0x5a,0x52,0x4a,0x40,0x37,0x2d,0x23,0x19,0x3d,0x46,
    0x4f,0x58,0x5e,0x63,0x64,0x64,0x63,0x60,0x59,0x52,0x53,0x5b,0x61,0x63,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x0c,0x16,0x21,0x2b,0x35,0x3e,0x48,0x51,0x59,0x5f,0x63,
    0x64,0x64,0x62,0x5d,0x56,0x4d,0x44,0x3a,0x31,0x27,0x1c,0x12,0x08,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x61,0x5c,
    0x54,0x4c,0x42,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x63,0x65,0x65,0x65,0x62,0x5d,0x58,0x51,0x4a,0x42,0x3a,0x31,0x32,0x3b,0x43,0x4b,0x52,0x59,0x5e,0x62,0x64,
    0x65,0x65,0x63,0x64,0x64,0x62,0x5d,0x56,0x4d,0x44,0x3a,0x2f,0x39,0x42,0x4c,0x54,0x5c,0x61,0x64,0x64,0x63,0x5f,0x59,0x51,0x48,0x3e,0x35,0x2b,0x21,0x3d,0x46,0x4f,
    0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x5f,0x63,0x64,0x64,0x63,
    0x5e,0x58,0x4f,0x46,0x3d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x2e,0x36,0x3d,0x44,0x4a,0x50,0x54,0x57,0x5a,0x5b,0x5b,0x5b,0x5a,0x57,0x54,0x4f,0x49,
    0x43,0x3c,0x34,0x2c,0x24,0x00,0x09,0x13,0x1c,0x26,0x2f,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x55,0x50,0x49,0x40,0x38,0x2f,0x25,0x1b,0x11,0x07,0x17,0x21,
    0x2b,0x34,0x3d,0x45,0x4d,0x53,0x57,0x59,0x59,0x59,0x57,0x52,0x4d,0x53,0x57,0x59,0x59,0x59,0x56,0x52,0x4b,0x43,0x3b,0x32,0x29,0x1f,0x15,0x38,0x40,0x49,0x50,0x55,
    0x58,0x59,0x59,0x59,0x56,0x51,0x4a,0x4c,0x52,0x57,0x59,0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x09,0x13,0x1d,0x27,0x30,0x39,0x42,0x4a,0x51,0x56,0x59,0x59,0x59,0x58,
    0x54,0x4e,0x47,0x3e,0x36,0x2c,0x23,0x19,0x0f,0x05,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,
    0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x59,0x5b,0x5b,0x5a,0x58,0x54,0x4f,0x49,0x42,0x3b,0x33,0x2b,0x2c,0x34,0x3c,0x43,0x4a,0x4f,0x54,0x58,0x5a,0x5b,0x5b,0x59,
    0x59,0x59,0x58,0x54,0x4e,0x47,0x3e,0x36,0x2b,0x34,0x3d,0x45,0x4d,0x53,0x57,0x59,0x59,0x59,0x56,0x51,0x4a,0x42,0x39,0x30,0x27,0x1d,0x38,0x40,0x49,0x50,0x55,0x58,
    0x59,0x59,0x58,0x54,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x56,0x59,0x59,0x59,0x58,0x55,0x50,0x49,
    0x40,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x27,0x2e,0x35,0x3c,0x41,0x46,0x4a,0x4d,0x4f,0x50,0x50,0x50,0x4f,0x4d,0x4a,0x46,0x41,0x3b,0x34,0x2d,
    0x25,0x1d,0x00,0x05,0x0e,0x18,0x21,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x29,0x20,0x17,0x0d,0x04,0x13,0x1c,0x25,0x2e,0x36,
    0x3e,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4d,0x49,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x3c,0x34,0x2c,0x23,0x1a,0x11,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,
    0x4e,0x4c,0x48,0x42,0x43,0x49,0x4d,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x39,0x05,0x0f,0x18,0x22,0x2a,0x33,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3f,
    0x38,0x2f,0x27,0x1e,0x14,0x0b,0x01,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x32,0x3a,0x41,
    0x47,0x4b,0x4e,0x4e,0x4e,0x4f,0x50,0x50,0x50,0x4d,0x4a,0x46,0x40,0x3a,0x33,0x2c,0x24,0x25,0x2d,0x34,0x3b,0x41,0x46,0x4b,0x4e,0x50,0x50,0x50,0x4e,0x4e,0x4e,0x4d,
    0x4a,0x45,0x3f,0x38,0x2f,0x25,0x2e,0x36,0x3e,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x3b,0x33,0x2a,0x22,0x18,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,
    0x4b,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x4c,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x1f,0x26,0x2d,0x33,0x38,0x3d,0x40,0x43,0x45,0x45,0x45,0x45,0x44,0x43,0x40,0x3c,0x37,0x32,0x2c,0x25,0x1e,0x16,0x00,
    0x00,0x09,0x12,0x1b,0x23,0x2b,0x32,0x39,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x32,0x2a,0x23,0x1a,0x11,0x08,0x00,0x0e,0x17,0x1f,0x27,0x2f,0x36,0x3b,0x40,
    0x43,0x44,0x44,0x44,0x42,0x3f,0x3b,0x40,0x43,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2d,0x25,0x1d,0x15,0x0c,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x44,0x42,0x3e,
    0x39,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x41,0x3d,0x38,0x31,0x01,0x0a,0x13,0x1c,0x24,0x2c,0x33,0x39,0x3e,0x42,0x43,0x44,0x44,0x43,0x40,0x3c,0x37,0x30,0x29,0x21,
    0x18,0x0f,0x06,0x00,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x2a,0x32,0x38,0x3d,0x41,0x43,
    0x44,0x44,0x44,0x45,0x45,0x45,0x43,0x40,0x3c,0x37,0x31,0x2b,0x24,0x1d,0x1e,0x25,0x2c,0x32,0x38,0x3c,0x41,0x44,0x45,0x45,0x45,0x44,0x44,0x44,0x43,0x40,0x3c,0x37,
    0x30,0x29,0x1f,0x27,0x2f,0x36,0x3b,0x40,0x43,0x44,0x44,0x43,0x42,0x3e,0x39,0x33,0x2c,0x24,0x1c,0x13,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x41,0x43,
    0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x42,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x32,0x2a,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x12,0x17,0x1f,0x27,0x2e,0x35,0x3b,0x3f,0x42,0x44,0x44,0x43,0x40,
    0x3c,0x37,0x30,0x29,0x15,0x1d,0x24,0x2b,0x31,0x36,0x3b,0x3e,0x41,0x43,0x44,0x44,0x43,0x41,0x3e,0x3a,0x35,0x30,0x2a,0x23,0x1b,0x1c,0x24,0x2a,0x30,0x36,0x3b,0x3f,
    0x41,0x43,0x44,0x43,0x42,0x40,0x3d,0x39,0x34,0x2e,0x27,0x20,0x19,0x00,0x01,0x0a,0x12,0x1b,0x23,0x2b,0x32,0x39,0x3e,0x41,0x43,0x44,0x44,0x42,0x3f,0x3b,0x35,0x2e,
    0x27,0x1e,0x21,0x29,0x30,0x36,0x3b,0x3f,0x41,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x41,0x3f,0x3a,0x35,0x2f,0x27,0x19,0x20,0x28,0x2e,0x34,0x39,0x3d,0x40,0x42,0x43,
    0x44,0x43,0x41,0x3e,0x3a,0x36,0x30,0x2a,0x23,0x1b,0x2c,0x32,0x38,0x3d,0x40,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x40,0x3d,0x38,0x32,0x2b,0x1b,0x23,
    0x2a,0x30,0x35,0x3a,0x3e,0x41,0x43,0x44,0x44,0x42,0x40,0x3d,0x3a,0x35,0x2f,0x29,0x22,0x1a,0x1c,0x23,0x2a,0x30,0x36,0x3a,0x3e,0x41,0x43,0x44,0x43,0x42,0x40,0x3d,
    0x38,0x33,0x2e,0x27,0x20,0x19,0x13,0x1a,0x22,0x29,0x2f,0x35,0x3a,0x3e,0x41,0x43,0x44,0x44,0x42,0x40,0x3d,0x39,0x34,0x2e,0x27,0x20,0x19,0x2f,0x36,0x3c,0x40,0x43,
    0x44,0x44,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x1e,0x25,0x2c,0x32,0x38,0x3d,0x41,0x44,0x45,0x46,0x46,0x45,0x43,0x40,0x3c,0x37,0x32,0x2c,0x25,0x1d,0x00,0x00,0x00,
    0x00,0x00,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x1b,0x20,0x26,0x2e,0x36,0x3d,0x44,0x49,0x4d,0x4e,0x4e,0x4d,0x4a,0x45,0x3f,0x38,
    0x2f,0x1c,0x24,0x2c,0x33,0x3a,0x3f,0x44,0x48,0x4b,0x4d,0x4e,0x4e,0x4d,0x4b,0x48,0x44,0x3f,0x39,0x32,0x2a,0x23,0x24,0x2b,0x33,0x39,0x3f,0x44,0x49,0x4c,0x4d,0x4e,
    0x4e,0x4d,0x4a,0x47,0x42,0x3d,0x36,0x2f,0x28,0x20,0x00,0x07,0x10,0x19,0x21,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4d,0x49,0x44,0x3d,0x36,0x2d,0x25,0x27,
    0x30,0x38,0x3f,0x45,0x49,0x4c,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4c,0x49,0x44,0x3e,0x36,0x2e,0x20,0x28,0x2f,0x37,0x3d,0x42,0x47,0x4a,0x4d,0x4e,0x4e,0x4d,0x4b,
    0x48,0x44,0x3f,0x39,0x32,0x2a,0x23,0x33,0x3b,0x41,0x47,0x4b,0x4c,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4c,0x4a,0x46,0x41,0x3a,0x32,0x23,0x2a,0x32,0x38,0x3f,
    0x44,0x48,0x4b,0x4d,0x4e,0x4e,0x4d,0x4b,0x47,0x43,0x3e,0x38,0x31,0x29,0x22,0x24,0x2b,0x32,0x39,0x3f,0x44,0x48,0x4b,0x4d,0x4e,0x4e,0x4d,0x4a,0x46,0x42,0x3c,0x36,
    0x2f,0x28,0x20,0x1a,0x22,0x29,0x31,0x38,0x3e,0x43,0x48,0x4b,0x4d,0x4e,0x4e,0x4d,0x4a,0x47,0x42,0x3d,0x36,0x2f,0x28,0x20,0x37,0x3e,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,
    0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x25,0x2d,0x34,0x3b,0x41,0x46,0x4b,0x4e,0x50,0x51,0x51,0x50,0x4d,0x4a,0x46,0x41,0x3b,0x34,0x2c,0x25,0x00,0x00,0x00,0x00,0x00,0x38,
    0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x23,0x29,0x2f,0x34,0x3c,0x45,0x4c,0x53,0x57,0x59,0x59,0x58,0x54,0x4e,0x47,0x3e,0x36,0x23,0x2b,
    0x33,0x3b,0x42,0x48,0x4e,0x52,0x56,0x58,0x59,0x59,0x58,0x55,0x52,0x4d,0x48,0x41,0x3a,0x32,0x2a,0x2b,0x33,0x3a,0x42,0x48,0x4e,0x52,0x56,0x58,0x59,0x58,0x57,0x54,
    0x51,0x4b,0x45,0x3e,0x37,0x2f,0x27,0x05,0x0d,0x16,0x1f,0x27,0x30,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x57,0x53,0x4c,0x45,0x3c,0x33,0x2a,0x2d,0x36,0x3f,0x47,
    0x4e,0x53,0x56,0x57,0x57,0x57,0x57,0x57,0x57,0x57,0x56,0x52,0x4d,0x45,0x3d,0x35,0x27,0x2f,0x37,0x3f,0x45,0x4b,0x50,0x54,0x57,0x59,0x59,0x58,0x56,0x52,0x4d,0x48,
    0x41,0x3a,0x32,0x2a,0x3a,0x42,0x4a,0x50,0x55,0x57,0x57,0x57,0x57,0x57,0x57,0x57,0x57,0x57,0x57,0x54,0x50,0x49,0x41,0x39,0x2a,0x32,0x3a,0x41,0x47,0x4d,0x52,0x56,
    0x58,0x59,0x59,0x58,0x55,0x51,0x4d,0x46,0x40,0x38,0x31,0x29,0x2b,0x33,0x3a,0x41,0x48,0x4d,0x52,0x56,0x58,0x59,0x59,0x57,0x54,0x50,0x4b,0x45,0x3e,0x37,0x2f,0x27,
    0x20,0x29,0x31,0x38,0x40,0x47,0x4d,0x51,0x55,0x58,0x59,0x59,0x57,0x54,0x51,0x4b,0x45,0x3e,0x37,0x2f,0x27,0x3e,0x46,0x4d,0x53,0x57,0x59,0x59,0x59,0x57,0x53,0x4d,
    0x45,0x3d,0x34,0x2c,0x34,0x3c,0x43,0x4a,0x50,0x54,0x58,0x5a,0x5c,0x5b,0x5a,0x57,0x54,0x4f,0x49,0x43,0x3b,0x34,0x2c,0x00,0x00,0x00,0x00,0x00,0x3d,0x46,0x4f,0x58,
    0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x2b,0x32,0x38,0x3d,0x43,0x4b,0x54,0x5b,0x61,0x63,0x64,0x62,0x5d,0x56,0x4d,0x44,0x3a,0x28,0x31,0x3a,0x42,0x4a,
    0x51,0x57,0x5c,0x60,0x62,0x63,0x63,0x62,0x60,0x5b,0x56,0x50,0x49,0x41,0x39,0x30,0x31,0x39,0x42,0x49,0x51,0x57,0x5c,0x60,0x62,0x64,0x63,0x62,0x5e,0x5a,0x54,0x4e,
    0x46,0x3e,0x36,0x2d,0x0b,0x13,0x1c,0x25,0x2d,0x36,0x3f,0x48,0x50,0x58,0x5f,0x63,0x64,0x63,0x61,0x5b,0x54,0x4b,0x42,0x38,0x2e,0x32,0x3b,0x45,0x4e,0x56,0x5c,0x61,
    0x62,0x62,0x62,0x62,0x62,0x62,0x62,0x60,0x5b,0x54,0x4c,0x43,0x3a,0x2d,0x36,0x3e,0x46,0x4e,0x54,0x5a,0x5e,0x62,0x63,0x64,0x62,0x60,0x5c,0x56,0x50,0x49,0x41,0x39,
    0x30,0x3f,0x48,0x51,0x59,0x5f,0x62,0x62,0x62,0x62,0x62,0x62,0x62,0x62,0x62,0x61,0x5e,0x58,0x50,0x48,0x3e,0x30,0x38,0x41,0x49,0x50,0x56,0x5b,0x60,0x62,0x64,0x63,
    0x62,0x5f,0x5b,0x55,0x4f,0x47,0x40,0x37,0x2f,0x31,0x39,0x42,0x49,0x50,0x56,0x5c,0x60,0x62,0x64,0x63,0x61,0x5e,0x59,0x54,0x4d,0x46,0x3e,0x36,0x2d,0x26,0x2f,0x37,
    0x40,0x47,0x4f,0x55,0x5b,0x5f,0x62,0x64,0x63,0x62,0x5e,0x5a,0x54,0x4e,0x46,0x3e,0x36,0x2d,0x43,0x4c,0x55,0x5c,0x62,0x64,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,
    0x33,0x3b,0x43,0x4b,0x52,0x59,0x5e,0x62,0x65,0x66,0x66,0x64,0x62,0x5d,0x58,0x52,0x4a,0x43,0x3b,0x32,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,
    0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x32,0x3a,0x41,0x47,0x4c,0x52,0x5a,0x63,0x6a,0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x2e,0x37,0x40,0x49,0x51,0x59,0x60,0x66,
    0x6a,0x6d,0x6e,0x6e,0x6d,0x6a,0x65,0x5f,0x58,0x50,0x48,0x3f,0x36,0x36,0x3f,0x48,0x51,0x58,0x5f,0x65,0x6a,0x6d,0x6e,0x6d,0x6c,0x68,0x63,0x5d,0x55,0x4d,0x45,0x3c,
    0x32,0x11,0x1a,0x22,0x2b,0x34,0x3c,0x45,0x4e,0x56,0x5f,0x67,0x6d,0x6e,0x6e,0x6a,0x62,0x59,0x50,0x46,0x3b,0x31,0x35,0x3f,0x49,0x53,0x5c,0x65,0x6b,0x6c,0x6c,0x6c,
    0x6c,0x6c,0x6c,0x6c,0x6a,0x63,0x5b,0x51,0x48,0x3d,0x33,0x3c,0x45,0x4d,0x55,0x5d,0x63,0x68,0x6c,0x6d,0x6e,0x6d,0x6a,0x65,0x5f,0x58,0x50,0x48,0x3f,0x36,0x43,0x4d,
    0x57,0x60,0x68,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x67,0x5f,0x56,0x4d,0x43,0x35,0x3e,0x47,0x50,0x58,0x5f,0x65,0x6a,0x6d,0x6e,0x6e,0x6c,0x69,0x64,
    0x5e,0x56,0x4f,0x46,0x3d,0x34,0x37,0x40,0x48,0x51,0x58,0x5f,0x65,0x6a,0x6d,0x6e,0x6d,0x6c,0x68,0x63,0x5c,0x55,0x4d,0x45,0x3c,0x33,0x2b,0x34,0x3d,0x46,0x4f,0x56,
    0x5e,0x64,0x69,0x6d,0x6e,0x6e,0x6c,0x68,0x63,0x5d,0x55,0x4d,0x44,0x3b,0x32,0x47,0x51,0x5b,0x64,0x6b,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x38,0x41,0x4a,
    0x53,0x5a,0x61,0x67,0x6c,0x6f,0x71,0x70,0x6f,0x6c,0x67,0x61,0x59,0x52,0x4a,0x41,0x38,0x00,0x00,0x00,0x00,0x00,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,
    0x60,0x56,0x4b,0x41,0x39,0x41,0x49,0x50,0x55,0x5a,0x61,0x69,0x71,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x32,0x3c,0x46,0x4f,0x58,0x60,0x68,0x6f,0x74,0x77,0x79,
    0x78,0x77,0x73,0x6e,0x67,0x5f,0x57,0x4e,0x44,0x3b,0x3b,0x45,0x4e,0x57,0x60,0x67,0x6e,0x74,0x77,0x79,0x78,0x76,0x72,0x6c,0x64,0x5c,0x53,0x4a,0x40,0x37,0x17,0x20,
    0x28,0x31,0x3a,0x42,0x4b,0x54,0x5c,0x65,0x6e,0x76,0x79,0x79,0x71,0x67,0x5d,0x52,0x48,0x3d,0x33,0x37,0x42,0x4c,0x56,0x61,0x6b,0x74,0x77,0x77,0x77,0x77,0x77,0x77,
    0x77,0x72,0x69,0x5f,0x55,0x4a,0x40,0x38,0x42,0x4b,0x54,0x5c,0x64,0x6c,0x71,0x76,0x78,0x79,0x77,0x73,0x6e,0x67,0x5f,0x56,0x4d,0x44,0x3a,0x46,0x50,0x5b,0x65,0x6f,
    0x76,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x76,0x6e,0x64,0x5a,0x4f,0x45,0x3a,0x44,0x4d,0x56,0x5f,0x67,0x6e,0x73,0x77,0x79,0x78,0x77,0x73,0x6d,0x65,0x5e,0x55,
    0x4c,0x42,0x38,0x3c,0x45,0x4e,0x57,0x60,0x67,0x6e,0x73,0x77,0x79,0x78,0x76,0x71,0x6b,0x64,0x5c,0x54,0x4b,0x42,0x38,0x2f,0x39,0x42,0x4c,0x55,0x5e,0x65,0x6d,0x73,
    0x77,0x79,0x78,0x76,0x72,0x6c,0x64,0x5c,0x53,0x4a,0x40,0x37,0x4a,0x54,0x5f,0x69,0x73,0x79,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x3d,0x46,0x50,0x59,0x62,0x69,
    0x70,0x76,0x79,0x7b,0x7b,0x79,0x75,0x70,0x68,0x61,0x59,0x4f,0x46,0x3c,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,
    0x41,0x3e,0x48,0x50,0x58,0x5e,0x63,0x69,0x70,0x77,0x81,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x36,0x40,0x4a,0x54,0x5d,0x66,0x6f,0x77,0x7d,0x82,0x83,0x83,0x82,0x7c,
    0x76,0x6e,0x65,0x5c,0x53,0x49,0x3f,0x3f,0x49,0x53,0x5d,0x66,0x6f,0x76,0x7d,0x82,0x84,0x83,0x80,0x7a,0x73,0x6b,0x62,0x58,0x4f,0x45,0x3b,0x1d,0x26,0x2e,0x37,0x40,
    0x48,0x51,0x5a,0x62,0x6b,0x74,0x7c,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x33,0x39,0x44,0x4e,0x58,0x63,0x6d,0x78,0x83,0x83,0x83,0x83,0x83,0x83,0x81,0x75,0x6b,
    0x60,0x55,0x4b,0x40,0x3d,0x46,0x50,0x59,0x62,0x6b,0x73,0x7b,0x80,0x83,0x84,0x82,0x7c,0x76,0x6e,0x65,0x5c,0x52,0x48,0x3e,0x46,0x51,0x5c,0x66,0x71,0x7b,0x83,0x83,
    0x83,0x83,0x83,0x83,0x83,0x83,0x7b,0x70,0x65,0x5b,0x50,0x45,0x3d,0x48,0x52,0x5b,0x64,0x6e,0x76,0x7c,0x82,0x83,0x83,0x81,0x7b,0x74,0x6d,0x63,0x5a,0x50,0x46,0x3c,
    0x40,0x4a,0x53,0x5d,0x66,0x6f,0x76,0x7c,0x82,0x84,0x83,0x80,0x7a,0x73,0x6b,0x62,0x59,0x50,0x46,0x3d,0x34,0x3e,0x47,0x51,0x5a,0x64,0x6d,0x74,0x7c,0x81,0x83,0x83,
    0x80,0x7a,0x73,0x6b,0x62,0x58,0x4f,0x45,0x3b,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x41,0x4b,0x55,0x5e,0x67,0x70,0x78,0x80,0x84,
    0x86,0x86,0x84,0x7e,0x77,0x70,0x67,0x5e,0x54,0x4a,0x40,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,
    0x56,0x5f,0x67,0x6d,0x72,0x78,0x80,0x87,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x39,0x43,0x4d,0x58,0x61,0x6b,0x75,0x7e,0x87,0x82,0x7d,0x7d,0x82,0x85,0x7d,0x74,0x6a,
    0x60,0x56,0x4c,0x42,0x42,0x4d,0x57,0x61,0x6b,0x74,0x7d,0x86,0x82,0x7d,0x7e,0x84,0x82,0x79,0x70,0x66,0x5c,0x52,0x48,0x3d,0x23,0x2c,0x34,0x3d,0x46,0x4f,0x57,0x60,
    0x69,0x71,0x7a,0x83,0x89,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x33,0x3b,0x46,0x50,0x5a,0x65,0x6f,0x7a,0x84,0x82,0x82,0x82,0x82,0x82,0x81,0x75,0x6b,0x60,0x55,0x4b,
    0x40,0x40,0x4a,0x54,0x5e,0x68,0x71,0x7a,0x83,0x83,0x7e,0x7d,0x82,0x85,0x7c,0x73,0x6a,0x60,0x56,0x4b,0x41,0x46,0x51,0x5c,0x66,0x71,0x7b,0x82,0x82,0x82,0x82,0x82,
    0x82,0x84,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x40,0x4b,0x55,0x5f,0x69,0x73,0x7c,0x85,0x82,0x7d,0x7e,0x83,0x84,0x7b,0x72,0x68,0x5e,0x53,0x49,0x3f,0x43,0x4d,0x58,
    0x62,0x6b,0x75,0x7d,0x85,0x83,0x7d,0x7d,0x83,0x83,0x7a,0x71,0x68,0x5e,0x54,0x4a,0x40,0x37,0x41,0x4b,0x55,0x5f,0x68,0x72,0x7b,0x84,0x82,0x7d,0x7e,0x84,0x82,0x79,
    0x70,0x66,0x5d,0x53,0x49,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x8a,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x44,0x4e,0x58,0x62,0x6c,0x76,0x80,0x87,0x80,0x7b,0x7c,0x81,
    0x87,0x80,0x75,0x6c,0x62,0x58,0x4e,0x43,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x45,0x4f,0x5a,0x64,0x6e,
    0x76,0x7b,0x81,0x87,0x87,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3b,0x45,0x50,0x5a,0x64,0x6f,0x79,0x83,0x82,0x79,0x73,0x73,0x79,0x83,0x83,0x78,0x6e,0x63,0x59,0x4e,
    0x44,0x45,0x4f,0x5a,0x64,0x6e,0x79,0x83,0x82,0x79,0x73,0x75,0x7c,0x87,0x7e,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x29,0x32,0x3a,0x43,0x4c,0x55,0x5d,0x66,0x6f,0x77,0x81,
    0x83,0x87,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x33,0x3d,0x48,0x52,0x5c,0x67,0x71,0x7b,0x86,0x7d,0x76,0x76,0x76,0x76,0x76,0x72,0x69,0x5f,0x54,0x4a,0x40,0x43,0x4e,
    0x58,0x62,0x6c,0x76,0x80,0x85,0x7b,0x74,0x73,0x7a,0x84,0x82,0x77,0x6d,0x62,0x58,0x4d,0x43,0x46,0x50,0x5a,0x65,0x6e,0x75,0x76,0x76,0x76,0x76,0x76,0x7e,0x86,0x7d,
    0x75,0x6d,0x63,0x59,0x4f,0x44,0x42,0x4c,0x57,0x61,0x6c,0x76,0x81,0x84,0x7a,0x73,0x74,0x7c,0x86,0x80,0x75,0x6a,0x60,0x55,0x4b,0x40,0x46,0x50,0x5a,0x65,0x6f,0x79,
    0x83,0x83,0x7a,0x73,0x74,0x7b,0x84,0x80,0x76,0x6c,0x62,0x57,0x4d,0x43,0x39,0x43,0x4e,0x58,0x62,0x6d,0x77,0x81,0x84,0x7a,0x73,0x75,0x7c,0x86,0x7e,0x74,0x6a,0x60,
    0x56,0x4c,0x41,0x4a,0x54,0x5f,0x6a,0x74,0x80,0x8a,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x46,0x51,0x5b,0x65,0x70,0x7a,0x84,0x82,0x78,0x72,0x72,0x79,0x82,0x84,0x79,
    0x6f,0x64,0x5a,0x4f,0x45,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x45,0x50,0x5b,0x65,0x70,0x7b,0x85,0x84,
    0x7e,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3c,0x46,0x51,0x5c,0x66,0x71,0x7b,0x83,0x7e,0x74,0x6a,0x6b,0x75,0x81,0x84,0x79,0x6e,0x64,0x59,0x4e,0x44,0x45,0x50,
    0x5b,0x65,0x70,0x7a,0x7e,0x80,0x75,0x6a,0x70,0x7b,0x86,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x2f,0x38,0x41,0x49,0x52,0x5b,0x63,0x6c,0x75,0x7d,0x85,0x7c,0x87,0x7d,
    0x73,0x68,0x5d,0x53,0x48,0x3d,0x33,0x3f,0x4a,0x54,0x5e,0x69,0x73,0x7d,0x86,0x7b,0x74,0x75,0x73,0x70,0x6c,0x69,0x63,0x5a,0x51,0x47,0x3d,0x45,0x50,0x5a,0x64,0x6f,
    0x79,0x84,0x80,0x76,0x72,0x73,0x76,0x7c,0x7c,0x77,0x6d,0x62,0x58,0x4d,0x43,0x43,0x4d,0x57,0x5f,0x67,0x6b,0x6c,0x6c,0x6c,0x73,0x7c,0x85,0x81,0x77,0x6f,0x66,0x5e,
    0x55,0x4b,0x42,0x42,0x4d,0x57,0x62,0x6c,0x77,0x82,0x83,0x78,0x6e,0x6f,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x47,0x51,0x5c,0x66,0x71,0x7b,0x87,0x7e,0x74,
    0x6b,0x6c,0x76,0x81,0x83,0x79,0x6e,0x64,0x59,0x4f,0x44,0x3b,0x45,0x50,0x5a,0x65,0x6f,0x79,0x84,0x81,0x76,0x6c,0x6e,0x78,0x83,0x82,0x77,0x6d,0x63,0x58,0x4e,0x43,
    0x4a,0x54,0x5f,0x69,0x74,0x7e,0x89,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x47,0x52,0x5c,0x67,0x72,0x7c,0x81,0x7e,0x74,0x6a,0x6b,0x74,0x80,0x85,0x7a,0x6f,0x64,0x5a,
    0x4f,0x45,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x45,0x50,0x5b,0x65,0x70,0x7b,0x80,0x7a,0x79,0x84,0x81,
    0x75,0x6b,0x60,0x55,0x4b,0x40,0x3b,0x46,0x50,0x5a,0x65,0x6e,0x75,0x77,0x78,0x71,0x67,0x6f,0x78,0x82,0x83,0x78,0x6e,0x63,0x59,0x4e,0x44,0x44,0x4e,0x59,0x62,0x6c,
    0x72,0x74,0x75,0x73,0x75,0x78,0x7e,0x87,0x7c,0x73,0x69,0x5e,0x54,0x49,0x3f,0x35,0x3e,0x47,0x4f,0x58,0x61,0x6a,0x72,0x7b,0x84,0x7e,0x7b,0x87,0x7d,0x73,0x68,0x5d,
    0x53,0x48,0x40,0x37,0x41,0x4b,0x56,0x60,0x6b,0x75,0x80,0x84,0x7b,0x80,0x80,0x7e,0x79,0x73,0x6c,0x64,0x5b,0x51,0x48,0x3e,0x47,0x51,0x5c,0x66,0x71,0x7b,0x86,0x7d,
    0x79,0x7c,0x7e,0x7c,0x77,0x72,0x6f,0x68,0x5f,0x56,0x4b,0x41,0x3f,0x48,0x51,0x58,0x5e,0x61,0x61,0x66,0x6f,0x79,0x82,0x84,0x7b,0x71,0x68,0x60,0x57,0x4f,0x46,0x3d,
    0x41,0x4c,0x56,0x61,0x6b,0x76,0x80,0x85,0x7c,0x76,0x76,0x7e,0x87,0x7e,0x74,0x6a,0x5f,0x55,0x4a,0x40,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x7c,0x72,0x68,0x6b,0x75,
    0x81,0x85,0x7a,0x6f,0x65,0x5a,0x50,0x45,0x3c,0x46,0x51,0x5c,0x66,0x71,0x7b,0x86,0x7e,0x73,0x69,0x6b,0x75,0x81,0x84,0x79,0x6f,0x64,0x5a,0x4f,0x45,0x49,0x54,0x5e,
    0x69,0x73,0x7d,0x89,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3e,0x46,0x51,0x5b,0x65,0x6e,0x74,0x76,0x77,0x70,0x6a,0x72,0x7a,0x82,0x82,0x78,0x6e,0x64,0x59,0x4f,0x44,0x00,
    0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x45,0x4f,0x5a,0x64,0x6e,0x76,0x75,0x71,0x79,0x84,0x81,0x75,0x6b,0x60,
    0x55,0x4b,0x40,0x39,0x43,0x4d,0x57,0x5f,0x67,0x6b,0x6d,0x6d,0x69,0x6e,0x76,0x7e,0x87,0x7e,0x75,0x6b,0x61,0x57,0x4d,0x42,0x41,0x4b,0x54,0x5d,0x63,0x68,0x6a,0x6f,
    0x7a,0x80,0x82,0x85,0x80,0x77,0x6e,0x65,0x5b,0x52,0x48,0x3e,0x3a,0x44,0x4d,0x55,0x5e,0x67,0x70,0x78,0x82,0x82,0x79,0x7b,0x87,0x7d,0x73,0x68,0x5d,0x56,0x4f,0x46,
    0x3d,0x43,0x4d,0x58,0x62,0x6d,0x77,0x82,0x84,0x85,0x83,0x83,0x87,0x83,0x7b,0x72,0x69,0x60,0x56,0x4c,0x42,0x47,0x52,0x5c,0x67,0x72,0x7c,0x88,0x7c,0x83,0x85,0x85,
    0x86,0x81,0x79,0x71,0x68,0x5e,0x55,0x4b,0x41,0x39,0x42,0x49,0x4f,0x54,0x57,0x60,0x6a,0x73,0x7d,0x87,0x7e,0x75,0x6c,0x63,0x5a,0x51,0x48,0x40,0x38,0x40,0x4a,0x54,
    0x5e,0x68,0x71,0x79,0x81,0x85,0x82,0x82,0x85,0x80,0x78,0x70,0x66,0x5c,0x52,0x48,0x3e,0x47,0x51,0x5c,0x66,0x71,0x7b,0x86,0x7e,0x75,0x6e,0x6f,0x77,0x82,0x86,0x7b,
    0x70,0x65,0x5b,0x50,0x45,0x3c,0x47,0x51,0x5c,0x66,0x71,0x7b,0x87,0x7d,0x73,0x68,0x6a,0x74,0x80,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x48,0x53,0x5d,0x68,0x73,0x7d,
    0x88,0x7c,0x72,0x67,0x5d,0x52,0x48,0x3d,0x43,0x4d,0x56,0x5f,0x66,0x6a,0x6c,0x6c,0x6b,0x72,0x79,0x82,0x85,0x7c,0x74,0x6a,0x61,0x57,0x4d,0x42,0x00,0x00,0x00,0x00,
    0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x43,0x4d,0x56,0x5f,0x67,0x6c,0x6c,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,
    0x35,0x3f,0x48,0x51,0x58,0x5e,0x61,0x62,0x68,0x6f,0x76,0x7d,0x85,0x82,0x79,0x70,0x67,0x5d,0x54,0x4a,0x3f,0x3e,0x47,0x4f,0x56,0x5c,0x5e,0x66,0x71,0x7b,0x82,0x82,
    0x85,0x82,0x7b,0x72,0x6a,0x60,0x56,0x4c,0x42,0x3f,0x49,0x52,0x5c,0x64,0x6d,0x76,0x7e,0x84,0x7b,0x72,0x7b,0x87,0x7d,0x73,0x6a,0x65,0x5e,0x55,0x4b,0x41,0x44,0x4f,
    0x5a,0x64,0x6f,0x79,0x84,0x83,0x7b,0x78,0x79,0x7d,0x85,0x82,0x77,0x6e,0x64,0x59,0x4f,0x45,0x48,0x53,0x5d,0x68,0x73,0x7d,0x87,0x83,0x80,0x7a,0x7a,0x80,0x87,0x80,
    0x76,0x6c,0x62,0x58,0x4e,0x44,0x33,0x3a,0x41,0x46,0x50,0x5a,0x64,0x6e,0x78,0x82,0x84,0x7a,0x70,0x67,0x5d,0x54,0x4b,0x42,0x3a,0x31,0x43,0x4d,0x58,0x61,0x6b,0x74,
    0x7b,0x82,0x84,0x82,0x82,0x85,0x81,0x7a,0x72,0x69,0x60,0x56,0x4c,0x42,0x45,0x50,0x5a,0x64,0x6e,0x78,0x82,0x85,0x7c,0x78,0x79,0x7e,0x84,0x86,0x7b,0x70,0x65,0x5b,
    0x50,0x45,0x3d,0x47,0x52,0x5c,0x67,0x72,0x7c,0x88,0x7c,0x72,0x67,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x7b,0x71,
    0x67,0x5c,0x52,0x47,0x3c,0x3f,0x48,0x50,0x57,0x5d,0x60,0x61,0x67,0x71,0x7a,0x82,0x85,0x7d,0x76,0x6e,0x65,0x5c,0x53,0x49,0x3f,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3e,0x48,0x50,0x58,0x5e,0x61,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x30,0x39,0x42,
    0x4a,0x52,0x5a,0x62,0x69,0x70,0x77,0x7e,0x85,0x82,0x7a,0x72,0x6a,0x62,0x59,0x4f,0x46,0x3c,0x43,0x4d,0x56,0x5e,0x65,0x69,0x6b,0x6f,0x77,0x77,0x77,0x7c,0x85,0x82,
    0x77,0x6e,0x64,0x59,0x4f,0x44,0x41,0x4c,0x56,0x60,0x6a,0x73,0x7c,0x85,0x7e,0x75,0x75,0x7b,0x87,0x7d,0x75,0x74,0x6c,0x63,0x59,0x4e,0x44,0x44,0x4f,0x59,0x64,0x6e,
    0x76,0x79,0x7a,0x73,0x6d,0x6e,0x76,0x81,0x85,0x7b,0x70,0x66,0x5b,0x51,0x46,0x48,0x53,0x5d,0x68,0x72,0x7c,0x88,0x82,0x78,0x71,0x70,0x77,0x82,0x84,0x7a,0x6f,0x65,
    0x5a,0x50,0x45,0x2b,0x35,0x3f,0x49,0x53,0x5d,0x67,0x72,0x7b,0x86,0x80,0x75,0x6c,0x62,0x59,0x4f,0x46,0x3d,0x34,0x2b,0x46,0x50,0x5a,0x65,0x6f,0x79,0x83,0x83,0x7b,
    0x76,0x77,0x7c,0x84,0x82,0x77,0x6e,0x64,0x59,0x4f,0x44,0x43,0x4d,0x57,0x61,0x6a,0x73,0x7b,0x83,0x86,0x83,0x83,0x83,0x7e,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x3c,
    0x47,0x52,0x5c,0x67,0x71,0x7b,0x87,0x7d,0x73,0x68,0x6a,0x74,0x80,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x46,0x51,0x5c,0x66,0x71,0x7b,0x86,0x7b,0x70,0x66,0x5b,0x51,
    0x46,0x3c,0x39,0x41,0x48,0x4e,0x53,0x57,0x61,0x6b,0x75,0x80,0x86,0x7d,0x76,0x6e,0x67,0x5f,0x56,0x4d,0x44,0x3b,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x39,0x41,0x49,0x50,0x54,0x59,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x34,0x3d,0x47,0x50,0x59,0x61,
    0x69,0x71,0x78,0x80,0x87,0x81,0x79,0x72,0x6b,0x63,0x5b,0x56,0x4e,0x46,0x3c,0x46,0x50,0x5b,0x64,0x6d,0x73,0x75,0x76,0x6f,0x6d,0x6d,0x76,0x81,0x85,0x7b,0x70,0x65,
    0x5b,0x50,0x45,0x42,0x4d,0x57,0x62,0x6c,0x77,0x82,0x83,0x81,0x81,0x81,0x81,0x87,0x81,0x81,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x46,0x50,0x5b,0x64,0x6d,0x73,0x73,0x74,
    0x6f,0x66,0x69,0x73,0x7e,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x80,0x74,0x6a,0x69,0x74,0x7e,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,
    0x2d,0x37,0x42,0x4c,0x56,0x61,0x6b,0x75,0x80,0x85,0x7b,0x71,0x67,0x5d,0x54,0x4a,0x41,0x37,0x2e,0x25,0x47,0x51,0x5c,0x66,0x71,0x7b,0x86,0x7e,0x74,0x6c,0x6d,0x75,
    0x80,0x85,0x7b,0x70,0x65,0x5b,0x50,0x45,0x42,0x4d,0x57,0x60,0x68,0x6e,0x74,0x7a,0x7e,0x80,0x7e,0x7b,0x7e,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3c,0x46,0x51,0x5c,
    0x66,0x71,0x7b,0x86,0x7e,0x73,0x69,0x6b,0x75,0x81,0x85,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x46,0x50,0x5b,0x65,0x70,0x7b,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x3b,0x32,
    0x39,0x40,0x45,0x4e,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x6e,0x67,0x5f,0x58,0x50,0x47,0x3f,0x36,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x32,0x3a,0x41,0x46,0x4e,0x59,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x38,0x42,0x4b,0x55,0x5e,0x67,0x70,0x78,0x80,
    0x87,0x80,0x79,0x72,0x6b,0x6a,0x69,0x64,0x5d,0x54,0x4b,0x41,0x47,0x52,0x5c,0x67,0x72,0x7c,0x80,0x7d,0x73,0x69,0x6a,0x74,0x80,0x86,0x7b,0x70,0x65,0x5b,0x50,0x45,
    0x42,0x4d,0x57,0x62,0x6c,0x77,0x83,0x83,0x83,0x83,0x83,0x83,0x88,0x83,0x83,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x47,0x52,0x5c,0x67,0x72,0x7c,0x7e,0x7e,0x73,0x69,0x6a,
    0x74,0x7e,0x86,0x7b,0x71,0x66,0x5c,0x51,0x46,0x46,0x51,0x5b,0x66,0x70,0x7b,0x85,0x80,0x75,0x6b,0x6a,0x74,0x7e,0x85,0x7a,0x70,0x65,0x5b,0x50,0x45,0x2f,0x39,0x44,
    0x4e,0x59,0x63,0x6d,0x78,0x83,0x83,0x78,0x6e,0x64,0x5a,0x50,0x46,0x3c,0x33,0x29,0x20,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x7d,0x73,0x68,0x69,0x73,0x7e,0x86,0x7b,
    0x70,0x65,0x5b,0x50,0x45,0x44,0x4f,0x59,0x64,0x6e,0x77,0x7a,0x7b,0x73,0x74,0x74,0x77,0x82,0x83,0x78,0x6e,0x63,0x59,0x4e,0x44,0x3b,0x45,0x50,0x5a,0x65,0x6f,0x7a,
    0x84,0x80,0x75,0x6b,0x6d,0x77,0x82,0x83,0x78,0x6e,0x63,0x59,0x4f,0x44,0x46,0x50,0x5a,0x64,0x6f,0x7a,0x82,0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x3b,0x2a,0x31,0x39,0x44,
    0x4e,0x59,0x64,0x6e,0x79,0x83,0x81,0x76,0x6c,0x61,0x58,0x50,0x49,0x41,0x38,0x30,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,
    0x56,0x4c,0x41,0x2b,0x32,0x39,0x44,0x4e,0x59,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3b,0x46,0x50,0x59,0x63,0x6d,0x76,0x80,0x87,0x7e,0x77,0x74,
    0x74,0x74,0x74,0x73,0x6c,0x62,0x58,0x4e,0x44,0x47,0x51,0x5b,0x66,0x70,0x7a,0x85,0x81,0x77,0x71,0x72,0x79,0x82,0x83,0x79,0x6f,0x64,0x5a,0x50,0x45,0x41,0x4c,0x57,
    0x61,0x6b,0x74,0x78,0x78,0x78,0x78,0x78,0x7b,0x87,0x7d,0x78,0x76,0x6e,0x64,0x59,0x4f,0x44,0x47,0x51,0x5b,0x66,0x70,0x7b,0x85,0x81,0x77,0x71,0x72,0x79,0x82,0x83,
    0x79,0x6f,0x64,0x5a,0x50,0x45,0x45,0x4f,0x59,0x64,0x6e,0x78,0x82,0x83,0x79,0x72,0x71,0x79,0x82,0x83,0x78,0x6e,0x64,0x59,0x4f,0x44,0x31,0x3b,0x46,0x50,0x5b,0x65,
    0x70,0x7a,0x85,0x80,0x75,0x6b,0x60,0x56,0x4c,0x42,0x38,0x2e,0x24,0x1b,0x46,0x51,0x5b,0x66,0x71,0x7b,0x85,0x81,0x77,0x71,0x71,0x77,0x81,0x84,0x79,0x6f,0x65,0x5a,
    0x50,0x45,0x44,0x4f,0x5a,0x64,0x6e,0x79,0x84,0x81,0x77,0x70,0x73,0x7b,0x85,0x80,0x75,0x6b,0x61,0x57,0x4c,0x42,0x39,0x44,0x4e,0x58,0x63,0x6d,0x77,0x82,0x83,0x79,
    0x72,0x73,0x7b,0x85,0x80,0x75,0x6b,0x61,0x57,0x4d,0x42,0x49,0x53,0x5d,0x68,0x71,0x78,0x78,0x78,0x71,0x67,0x5d,0x52,0x48,0x3d,0x24,0x2f,0x3a,0x44,0x4f,0x59,0x64,
    0x6e,0x76,0x78,0x78,0x74,0x6b,0x61,0x57,0x4c,0x41,0x3a,0x32,0x2a,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,
    0x24,0x2e,0x39,0x44,0x4e,0x59,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3e,0x48,0x53,0x5d,0x67,0x71,0x7b,0x85,0x83,0x80,0x80,0x80,0x80,0x80,0x80,
    0x7a,0x6f,0x64,0x5a,0x4f,0x45,0x44,0x4f,0x59,0x63,0x6d,0x77,0x80,0x87,0x80,0x7b,0x7b,0x81,0x87,0x7e,0x75,0x6b,0x61,0x57,0x4d,0x43,0x3f,0x4a,0x53,0x5d,0x65,0x6c,
    0x6d,0x6d,0x6d,0x6d,0x71,0x7b,0x87,0x7d,0x73,0x6d,0x67,0x5f,0x56,0x4c,0x42,0x45,0x4f,0x59,0x63,0x6d,0x77,0x80,0x87,0x80,0x7b,0x7b,0x81,0x86,0x7d,0x74,0x6b,0x61,
    0x57,0x4d,0x43,0x42,0x4c,0x56,0x60,0x6a,0x74,0x7c,0x85,0x82,0x7c,0x7b,0x80,0x87,0x7d,0x75,0x6b,0x61,0x57,0x4d,0x42,0x32,0x3c,0x47,0x52,0x5c,0x67,0x71,0x7b,0x87,
    0x7d,0x73,0x69,0x5e,0x54,0x4a,0x3f,0x35,0x2a,0x21,0x17,0x45,0x4f,0x59,0x64,0x6e,0x77,0x80,0x87,0x7e,0x7b,0x7b,0x80,0x87,0x7e,0x75,0x6c,0x62,0x58,0x4e,0x43,0x43,
    0x4d,0x58,0x62,0x6c,0x76,0x80,0x86,0x7e,0x7b,0x7c,0x83,0x83,0x7a,0x71,0x67,0x5e,0x54,0x4a,0x3f,0x37,0x41,0x4b,0x55,0x5f,0x69,0x73,0x7c,0x86,0x81,0x7b,0x7c,0x82,
    0x84,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x40,0x49,0x54,0x5e,0x69,0x73,0x7e,0x83,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x25,0x2f,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x83,
    0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x2d,0x23,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x24,0x2e,0x39,
    0x44,0x4e,0x59,0x64,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x3f,0x4a,0x54,0x5f,0x69,0x74,0x7e,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x7a,0x6f,0x64,
    0x5a,0x4f,0x45,0x41,0x4b,0x55,0x5f,0x68,0x71,0x78,0x80,0x84,0x86,0x86,0x83,0x7e,0x77,0x6f,0x66,0x5d,0x53,0x4a,0x40,0x3c,0x45,0x4e,0x56,0x5d,0x62,0x63,0x63,0x63,
    0x66,0x71,0x7b,0x84,0x7d,0x73,0x68,0x5e,0x58,0x50,0x47,0x3e,0x42,0x4c,0x55,0x5f,0x68,0x71,0x79,0x80,0x84,0x86,0x85,0x83,0x7d,0x76,0x6f,0x66,0x5d,0x53,0x49,0x40,
    0x3f,0x49,0x53,0x5c,0x65,0x6e,0x76,0x7d,0x83,0x85,0x86,0x83,0x7e,0x77,0x6f,0x66,0x5d,0x53,0x49,0x3f,0x33,0x3d,0x48,0x53,0x5d,0x68,0x72,0x7c,0x84,0x7c,0x72,0x67,
    0x5d,0x52,0x48,0x3d,0x33,0x28,0x1e,0x13,0x42,0x4c,0x56,0x5f,0x68,0x71,0x79,0x80,0x84,0x86,0x86,0x83,0x7e,0x77,0x70,0x67,0x5e,0x54,0x4a,0x40,0x40,0x4a,0x54,0x5e,
    0x68,0x71,0x79,0x80,0x84,0x86,0x85,0x82,0x7b,0x74,0x6b,0x62,0x59,0x4f,0x46,0x3c,0x34,0x3e,0x48,0x52,0x5b,0x64,0x6e,0x76,0x7d,0x83,0x86,0x85,0x83,0x7c,0x74,0x6c,
    0x63,0x5a,0x50,0x46,0x3c,0x49,0x54,0x5e,0x69,0x73,0x7e,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x25,0x2f,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x84,0x83,0x77,0x6c,
    0x62,0x57,0x4d,0x42,0x37,0x2d,0x22,0x00,0x00,0x00,0x00,0x00,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,0x41,0x24,0x2e,0x39,0x43,0x4e,0x58,
    0x63,0x6d,0x76,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x3f,0x4a,0x54,0x5f,0x69,0x73,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x77,0x6e,0x64,0x59,0x4f,0x44,
    0x3e,0x47,0x50,0x59,0x62,0x69,0x70,0x76,0x7a,0x7b,0x7b,0x79,0x75,0x6f,0x68,0x60,0x58,0x4f,0x45,0x3c,0x37,0x3f,0x47,0x4e,0x54,0x57,0x58,0x58,0x5b,0x65,0x70,0x78,
    0x79,0x79,0x71,0x67,0x5d,0x52,0x49,0x41,0x39,0x3e,0x47,0x51,0x5a,0x62,0x6a,0x71,0x76,0x7a,0x7b,0x7b,0x78,0x74,0x6f,0x67,0x60,0x57,0x4e,0x45,0x3b,0x3b,0x44,0x4d,
    0x56,0x5f,0x67,0x6e,0x74,0x78,0x7b,0x7b,0x79,0x75,0x6f,0x68,0x60,0x57,0x4e,0x45,0x3c,0x33,0x3d,0x48,0x52,0x5d,0x67,0x71,0x79,0x79,0x78,0x70,0x66,0x5c,0x51,0x47,
    0x3c,0x32,0x27,0x1c,0x12,0x3e,0x47,0x51,0x5a,0x62,0x6a,0x71,0x76,0x79,0x7b,0x7b,0x79,0x75,0x6f,0x68,0x61,0x58,0x4f,0x46,0x3c,0x3d,0x47,0x50,0x59,0x62,0x6a,0x71,
    0x77,0x7a,0x7b,0x7a,0x77,0x72,0x6c,0x65,0x5c,0x54,0x4b,0x41,0x38,0x30,0x3a,0x44,0x4d,0x56,0x5f,0x67,0x6f,0x75,0x79,0x7b,0x7b,0x78,0x73,0x6d,0x65,0x5d,0x54,0x4b,
    0x42,0x38,0x49,0x53,0x5e,0x68,0x72,0x79,0x79,0x79,0x71,0x67,0x5d,0x52,0x48,0x3d,0x24,0x2f,0x3a,0x44,0x4f,0x59,0x64,0x6e,0x77,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,
    0x42,0x37,0x2c,0x22,0x00,0x00,0x00,0x00,0x00,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x22,0x2d,0x37,0x41,0x4b,0x55,0x5f,0x67,0x6d,
    0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x3d,0x47,0x51,0x5b,0x64,0x6b,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6d,0x68,0x60,0x56,0x4c,0x42,0x39,0x42,0x4a,
    0x53,0x5a,0x62,0x68,0x6c,0x70,0x71,0x71,0x6f,0x6b,0x66,0x60,0x59,0x51,0x49,0x40,0x37,0x30,0x38,0x3f,0x45,0x4a,0x4d,0x4d,0x4e,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6a,
    0x62,0x59,0x50,0x46,0x3b,0x32,0x39,0x42,0x4b,0x53,0x5b,0x62,0x68,0x6c,0x6f,0x70,0x70,0x6e,0x6b,0x66,0x60,0x58,0x51,0x48,0x3f,0x36,0x36,0x3f,0x48,0x50,0x58,0x5f,
    0x65,0x6b,0x6e,0x70,0x70,0x6f,0x6b,0x66,0x60,0x59,0x51,0x48,0x40,0x37,0x31,0x3b,0x46,0x50,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x69,0x61,0x58,0x4e,0x44,0x3a,0x30,0x25,
    0x1b,0x11,0x39,0x42,0x4b,0x53,0x5b,0x62,0x68,0x6c,0x6f,0x70,0x70,0x6e,0x6b,0x67,0x61,0x59,0x52,0x49,0x41,0x38,0x38,0x42,0x4b,0x53,0x5b,0x62,0x68,0x6d,0x70,0x70,
    0x70,0x6d,0x69,0x64,0x5d,0x56,0x4d,0x45,0x3c,0x33,0x2c,0x35,0x3e,0x47,0x50,0x58,0x60,0x66,0x6b,0x6f,0x70,0x70,0x6e,0x6a,0x65,0x5e,0x56,0x4e,0x46,0x3d,0x34,0x46,
    0x50,0x5a,0x63,0x6b,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x50,0x46,0x3b,0x23,0x2e,0x38,0x42,0x4c,0x56,0x60,0x68,0x6d,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x40,0x35,0x2b,
    0x21,0x00,0x00,0x00,0x00,0x00,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x20,0x2a,0x34,0x3e,0x47,0x50,0x58,0x5f,0x63,0x64,0x64,0x62,
    0x5d,0x56,0x4d,0x44,0x3a,0x3a,0x43,0x4c,0x55,0x5c,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x5f,0x59,0x51,0x48,0x3e,0x33,0x3c,0x44,0x4b,0x53,0x59,
    0x5e,0x62,0x65,0x66,0x66,0x65,0x62,0x5d,0x58,0x51,0x4a,0x42,0x3a,0x31,0x29,0x30,0x37,0x3c,0x40,0x42,0x43,0x49,0x52,0x5a,0x60,0x63,0x64,0x63,0x61,0x5b,0x54,0x4b,
    0x42,0x38,0x2e,0x33,0x3c,0x44,0x4c,0x53,0x59,0x5f,0x62,0x65,0x65,0x65,0x64,0x61,0x5d,0x57,0x51,0x49,0x42,0x39,0x31,0x30,0x39,0x41,0x49,0x50,0x57,0x5c,0x61,0x64,
    0x65,0x65,0x64,0x61,0x5d,0x57,0x51,0x4a,0x42,0x3a,0x31,0x2e,0x38,0x42,0x4b,0x54,0x5b,0x61,0x63,0x64,0x63,0x60,0x5a,0x52,0x49,0x40,0x36,0x2d,0x23,0x18,0x0e,0x33,
    0x3c,0x44,0x4c,0x53,0x59,0x5e,0x62,0x65,0x65,0x65,0x64,0x61,0x5d,0x58,0x52,0x4a,0x43,0x3a,0x32,0x33,0x3c,0x44,0x4c,0x53,0x5a,0x5f,0x63,0x65,0x65,0x65,0x63,0x60,
    0x5b,0x55,0x4e,0x47,0x3f,0x36,0x2d,0x27,0x30,0x39,0x41,0x49,0x51,0x57,0x5d,0x61,0x64,0x65,0x65,0x64,0x61,0x5c,0x56,0x4f,0x47,0x40,0x37,0x2e,0x42,0x4c,0x54,0x5c,
    0x61,0x64,0x64,0x63,0x61,0x5b,0x54,0x4b,0x42,0x38,0x21,0x2b,0x35,0x3e,0x48,0x51,0x59,0x5f,0x63,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x3c,0x32,0x28,0x1e,0x00,0x00,
    0x00,0x00,0x00,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x1c,0x26,0x2f,0x39,0x41,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,
    0x3e,0x36,0x35,0x3e,0x46,0x4d,0x53,0x57,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x56,0x51,0x4a,0x42,0x39,0x2d,0x34,0x3c,0x43,0x4a,0x50,0x55,0x58,0x5b,
    0x5c,0x5c,0x5a,0x58,0x53,0x4f,0x49,0x42,0x3b,0x33,0x2b,0x21,0x28,0x2e,0x32,0x36,0x38,0x3b,0x43,0x4b,0x52,0x56,0x59,0x59,0x59,0x57,0x53,0x4c,0x45,0x3c,0x33,0x2a,
    0x2d,0x35,0x3d,0x44,0x4b,0x50,0x55,0x58,0x5a,0x5b,0x5b,0x59,0x57,0x53,0x4e,0x48,0x42,0x3a,0x33,0x2b,0x2a,0x32,0x3a,0x41,0x48,0x4e,0x53,0x57,0x59,0x5b,0x5b,0x5a,
    0x58,0x54,0x4f,0x49,0x42,0x3b,0x33,0x2b,0x2a,0x33,0x3c,0x45,0x4c,0x53,0x57,0x59,0x59,0x59,0x56,0x52,0x4b,0x43,0x3b,0x32,0x28,0x1f,0x15,0x0b,0x2d,0x35,0x3d,0x44,
    0x4a,0x50,0x55,0x58,0x5a,0x5b,0x5b,0x5a,0x57,0x54,0x4f,0x49,0x43,0x3b,0x34,0x2c,0x2d,0x35,0x3d,0x44,0x4b,0x51,0x55,0x58,0x5b,0x5b,0x5b,0x59,0x56,0x51,0x4c,0x46,
    0x3f,0x38,0x30,0x27,0x21,0x2a,0x32,0x3a,0x42,0x48,0x4e,0x53,0x57,0x5a,0x5b,0x5b,0x59,0x57,0x53,0x4d,0x47,0x40,0x38,0x31,0x28,0x3d,0x45,0x4d,0x53,0x57,0x59,0x59,
    0x59,0x57,0x53,0x4c,0x45,0x3c,0x33,0x1d,0x27,0x30,0x39,0x42,0x4a,0x51,0x56,0x59,0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x37,0x2e,0x24,0x1b,0x00,0x00,0x00,0x00,0x00,
    0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x18,0x21,0x2a,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3f,0x38,0x2f,0x2f,
    0x37,0x3e,0x45,0x4a,0x4d,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x42,0x3b,0x33,0x25,0x2d,0x34,0x3b,0x41,0x46,0x4b,0x4e,0x50,0x51,0x51,0x50,
    0x4d,0x4a,0x45,0x40,0x3a,0x33,0x2c,0x24,0x19,0x1f,0x24,0x28,0x2b,0x2d,0x34,0x3c,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4d,0x49,0x44,0x3d,0x36,0x2d,0x25,0x26,0x2e,0x35,
    0x3c,0x42,0x47,0x4b,0x4e,0x50,0x50,0x50,0x4f,0x4d,0x49,0x45,0x40,0x3a,0x33,0x2b,0x24,0x23,0x2a,0x32,0x39,0x3f,0x45,0x49,0x4d,0x4f,0x50,0x50,0x4f,0x4d,0x4a,0x46,
    0x40,0x3a,0x33,0x2c,0x24,0x25,0x2d,0x36,0x3d,0x44,0x49,0x4d,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x3c,0x34,0x2c,0x23,0x1a,0x11,0x07,0x26,0x2e,0x35,0x3c,0x41,0x46,0x4b,
    0x4e,0x50,0x50,0x50,0x4f,0x4d,0x4a,0x46,0x40,0x3a,0x34,0x2c,0x25,0x26,0x2e,0x35,0x3c,0x42,0x47,0x4b,0x4e,0x50,0x50,0x50,0x4e,0x4c,0x48,0x43,0x3d,0x37,0x30,0x29,
    0x21,0x1b,0x23,0x2b,0x33,0x3a,0x40,0x45,0x4a,0x4d,0x4f,0x50,0x50,0x4f,0x4d,0x49,0x44,0x3e,0x38,0x31,0x29,0x22,0x36,0x3e,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4d,0x49,
    0x44,0x3d,0x36,0x2d,0x18,0x22,0x2a,0x33,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x39,0x31,0x28,0x1f,0x16,0x00,0x00,0x00,0x00,0x00,0x2a,0x32,0x38,
    0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x12,0x1b,0x23,0x2b,0x32,0x39,0x3e,0x41,0x43,0x44,0x44,0x43,0x40,0x3c,0x37,0x30,0x29,0x28,0x2f,0x36,0x3c,
    0x40,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x42,0x3e,0x39,0x33,0x2c,0x1e,0x25,0x2c,0x33,0x38,0x3d,0x41,0x44,0x46,0x46,0x46,0x46,0x43,0x40,0x3c,
    0x37,0x31,0x2b,0x24,0x1d,0x10,0x16,0x1b,0x1e,0x21,0x25,0x2d,0x34,0x3a,0x3f,0x42,0x44,0x44,0x44,0x42,0x3f,0x3b,0x35,0x2e,0x27,0x1e,0x1f,0x26,0x2d,0x33,0x39,0x3d,
    0x41,0x44,0x45,0x45,0x45,0x45,0x42,0x3f,0x3b,0x36,0x31,0x2b,0x24,0x1c,0x1b,0x23,0x2a,0x30,0x36,0x3b,0x3f,0x42,0x44,0x45,0x45,0x45,0x43,0x40,0x3c,0x37,0x31,0x2b,
    0x24,0x1d,0x1e,0x27,0x2e,0x35,0x3b,0x3f,0x42,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2d,0x25,0x1d,0x14,0x0b,0x02,0x1f,0x26,0x2d,0x33,0x38,0x3d,0x41,0x43,0x45,0x45,
    0x45,0x45,0x43,0x40,0x3c,0x37,0x32,0x2b,0x25,0x1d,0x1f,0x26,0x2d,0x33,0x39,0x3d,0x41,0x44,0x45,0x45,0x45,0x44,0x42,0x3e,0x3a,0x34,0x2f,0x28,0x21,0x1a,0x14,0x1c,
    0x24,0x2b,0x31,0x37,0x3c,0x40,0x43,0x45,0x45,0x45,0x45,0x42,0x3f,0x3b,0x36,0x30,0x29,0x22,0x1a,0x2f,0x36,0x3b,0x40,0x43,0x44,0x44,0x44,0x42,0x3f,0x3b,0x35,0x2e,
    0x27,0x13,0x1c,0x24,0x2c,0x33,0x39,0x3e,0x42,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x31,0x2a,0x22,0x1a,0x11,0x00,0x00,0x00,0x00,0x00,0x0e,0x17,0x1f,0x28,0x2f,0x37,
    0x3d,0x41,0x45,0x46,0x46,0x46,0x44,0x40,0x3b,0x34,0x2d,0x25,0x1c,0x26,0x2e,0x35,0x3b,0x40,0x44,0x46,0x46,0x46,0x45,0x41,0x3c,0x36,0x2f,0x27,0x1f,0x16,0x0d,0x04,
    0x21,0x29,0x2f,0x36,0x3b,0x40,0x43,0x45,0x46,0x46,0x44,0x41,0x3d,0x41,0x45,0x46,0x46,0x46,0x44,0x40,0x3b,0x35,0x2e,0x26,0x1d,0x14,0x0f,0x18,0x21,0x29,0x31,0x38,
    0x3e,0x42,0x45,0x46,0x46,0x46,0x45,0x46,0x46,0x46,0x44,0x40,0x3b,0x34,0x2d,0x25,0x1c,0x16,0x1d,0x25,0x2c,0x32,0x38,0x3d,0x41,0x44,0x46,0x46,0x46,0x44,0x41,0x3d,
    0x38,0x33,0x2c,0x25,0x1d,0x16,0x0d,0x05,0x2a,0x30,0x36,0x3a,0x3c,0x3d,0x3d,0x3d,0x3c,0x3a,0x35,0x30,0x2a,0x22,0x25,0x2c,0x32,0x36,0x3a,0x3c,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3c,0x3b,0x38,0x34,0x2e,0x28,0x20,0x1b,0x22,0x29,0x2f,0x33,0x37,0x3b,0x3d,0x3f,0x40,0x40,0x3f,0x3e,0x3b,0x38,0x33,0x2f,0x29,0x22,0x1b,
    0x1a,0x21,0x27,0x2d,0x32,0x36,0x3a,0x3d,0x3f,0x40,0x40,0x3f,0x3d,0x3a,0x36,0x31,0x2b,0x25,0x1e,0x17,0x19,0x20,0x26,0x2c,0x32,0x36,0x3a,0x3d,0x3f,0x40,0x40,0x3f,
    0x3d,0x3a,0x36,0x31,0x2c,0x26,0x1f,0x18,0x26,0x2d,0x33,0x38,0x3b,0x3d,0x3d,0x3d,0x3e,0x40,0x40,0x3f,0x3e,0x3d,0x3f,0x40,0x40,0x3f,0x3c,0x39,0x35,0x30,0x2a,0x23,
    0x26,0x2d,0x33,0x38,0x3b,0x3d,0x3d,0x3d,0x3e,0x3f,0x40,0x40,0x3e,0x3b,0x38,0x33,0x2e,0x28,0x22,0x1a,0x00,0x00,0x00,0x12,0x1c,0x25,0x2e,0x37,0x3f,0x45,0x4b,0x4f,
    0x51,0x51,0x51,0x4e,0x49,0x43,0x3c,0x34,0x2b,0x22,0x2c,0x35,0x3d,0x44,0x4a,0x4e,0x51,0x51,0x51,0x4f,0x4b,0x45,0x3e,0x36,0x2e,0x25,0x1c,0x12,0x08,0x28,0x30,0x38,
    0x3e,0x44,0x4a,0x4d,0x50,0x51,0x50,0x4f,0x4b,0x47,0x4b,0x4f,0x51,0x51,0x51,0x4e,0x4a,0x44,0x3d,0x35,0x2c,0x23,0x1a,0x15,0x1e,0x27,0x30,0x38,0x40,0x46,0x4c,0x50,
    0x51,0x51,0x50,0x4f,0x51,0x51,0x51,0x4e,0x49,0x43,0x3c,0x34,0x2b,0x22,0x1c,0x25,0x2c,0x34,0x3b,0x41,0x46,0x4b,0x4e,0x50,0x51,0x50,0x4e,0x4b,0x47,0x41,0x3b,0x34,
    0x2c,0x25,0x1c,0x14,0x0b,0x32,0x39,0x3f,0x44,0x47,0x48,0x48,0x48,0x47,0x43,0x3f,0x38,0x31,0x2a,0x2c,0x34,0x3a,0x40,0x44,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x47,
    0x47,0x47,0x47,0x45,0x42,0x3d,0x37,0x2f,0x28,0x23,0x2a,0x31,0x38,0x3d,0x41,0x45,0x48,0x4a,0x4b,0x4b,0x4a,0x48,0x45,0x42,0x3d,0x38,0x31,0x2a,0x22,0x21,0x29,0x30,
    0x36,0x3c,0x40,0x44,0x48,0x4a,0x4b,0x4b,0x49,0x47,0x44,0x3f,0x3a,0x34,0x2d,0x26,0x1f,0x20,0x28,0x2f,0x35,0x3b,0x40,0x44,0x48,0x4a,0x4b,0x4b,0x49,0x47,0x44,0x40,
    0x3a,0x35,0x2e,0x27,0x1f,0x2e,0x35,0x3c,0x41,0x45,0x48,0x48,0x48,0x49,0x4a,0x4b,0x4a,0x48,0x47,0x49,0x4b,0x4b,0x49,0x47,0x43,0x3e,0x38,0x32,0x2a,0x2e,0x35,0x3c,
    0x41,0x45,0x48,0x48,0x48,0x48,0x4a,0x4b,0x4a,0x48,0x45,0x42,0x3c,0x37,0x31,0x29,0x22,0x00,0x00,0x00,0x17,0x20,0x2a,0x34,0x3d,0x46,0x4e,0x54,0x59,0x5b,0x5c,0x5b,
    0x58,0x52,0x4b,0x43,0x3a,0x31,0x27,0x31,0x3b,0x43,0x4c,0x53,0x58,0x5b,0x5c,0x5b,0x59,0x54,0x4d,0x45,0x3c,0x33,0x2a,0x20,0x16,0x0c,0x2e,0x37,0x3f,0x47,0x4d,0x53,
    0x57,0x5a,0x5c,0x5b,0x59,0x55,0x50,0x54,0x59,0x5b,0x5c,0x5b,0x58,0x53,0x4c,0x43,0x3b,0x31,0x28,0x1e,0x1e,0x24,0x2c,0x35,0x3e,0x47,0x4f,0x55,0x5a,0x5c,0x5c,0x5b,
    0x59,0x5c,0x5c,0x5b,0x58,0x52,0x4b,0x43,0x3a,0x31,0x27,0x22,0x2b,0x33,0x3b,0x43,0x4a,0x50,0x55,0x58,0x5b,0x5c,0x5b,0x59,0x55,0x50,0x4a,0x43,0x3b,0x34,0x2b,0x22,
    0x19,0x10,0x39,0x41,0x48,0x4e,0x51,0x53,0x53,0x53,0x51,0x4d,0x47,0x40,0x38,0x30,0x33,0x3b,0x43,0x49,0x4e,0x51,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,
    0x50,0x4b,0x46,0x3f,0x37,0x2e,0x2a,0x32,0x39,0x40,0x46,0x4b,0x4f,0x52,0x54,0x55,0x55,0x54,0x52,0x4f,0x4b,0x46,0x40,0x39,0x31,0x29,0x28,0x30,0x38,0x3f,0x45,0x4a,
    0x4e,0x52,0x54,0x55,0x55,0x54,0x51,0x4d,0x49,0x43,0x3c,0x35,0x2e,0x25,0x28,0x2f,0x37,0x3e,0x44,0x4a,0x4e,0x52,0x54,0x55,0x55,0x54,0x51,0x4e,0x49,0x44,0x3d,0x36,
    0x2e,0x27,0x34,0x3d,0x44,0x4a,0x4f,0x52,0x53,0x53,0x53,0x55,0x55,0x54,0x52,0x51,0x54,0x55,0x55,0x54,0x51,0x4c,0x47,0x41,0x3a,0x32,0x34,0x3d,0x44,0x4a,0x4f,0x52,
    0x53,0x53,0x53,0x54,0x55,0x54,0x53,0x4f,0x4b,0x46,0x40,0x38,0x31,0x29,0x00,0x00,0x00,0x1a,0x24,0x2e,0x38,0x42,0x4b,0x54,0x5d,0x63,0x66,0x66,0x65,0x61,0x5a,0x52,
    0x48,0x3f,0x35,0x2b,0x36,0x40,0x49,0x52,0x5b,0x62,0x66,0x66,0x66,0x62,0x5c,0x54,0x4b,0x42,0x38,0x2e,0x24,0x19,0x0f,0x34,0x3d,0x46,0x4e,0x56,0x5c,0x61,0x65,0x66,
    0x65,0x63,0x5e,0x59,0x5c,0x62,0x66,0x66,0x66,0x62,0x5b,0x52,0x49,0x40,0x36,0x2c,0x21,0x26,0x2d,0x33,0x3a,0x44,0x4d,0x56,0x5e,0x64,0x66,0x66,0x65,0x63,0x66,0x66,
    0x65,0x61,0x5a,0x52,0x48,0x3f,0x35,0x2b,0x28,0x31,0x3a,0x42,0x4a,0x52,0x59,0x5e,0x62,0x65,0x66,0x65,0x63,0x5f,0x59,0x52,0x4a,0x43,0x3a,0x31,0x27,0x1e,0x14,0x3f,
    0x48,0x50,0x57,0x5b,0x5d,0x5d,0x5d,0x5b,0x56,0x4f,0x47,0x3f,0x35,0x39,0x42,0x4a,0x52,0x58,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5a,0x54,0x4e,
    0x45,0x3d,0x33,0x31,0x39,0x41,0x48,0x4f,0x55,0x59,0x5c,0x5f,0x60,0x60,0x5f,0x5d,0x59,0x55,0x4f,0x48,0x40,0x38,0x30,0x2f,0x37,0x3f,0x47,0x4d,0x53,0x58,0x5c,0x5f,
    0x60,0x60,0x5e,0x5b,0x57,0x52,0x4b,0x44,0x3d,0x34,0x2c,0x2e,0x37,0x3f,0x46,0x4d,0x53,0x58,0x5c,0x5f,0x60,0x60,0x5e,0x5b,0x57,0x52,0x4c,0x45,0x3d,0x36,0x2d,0x3a,
    0x43,0x4c,0x53,0x59,0x5d,0x5d,0x5d,0x5d,0x5f,0x60,0x5f,0x5d,0x5b,0x5e,0x60,0x60,0x5e,0x5b,0x56,0x50,0x49,0x41,0x39,0x3a,0x43,0x4c,0x53,0x59,0x5d,0x5d,0x5d,0x5d,
    0x5f,0x60,0x5f,0x5d,0x59,0x54,0x4e,0x47,0x40,0x37,0x2f,0x00,0x00,0x00,0x1d,0x27,0x31,0x3b,0x46,0x50,0x5a,0x63,0x6c,0x71,0x71,0x70,0x69,0x60,0x56,0x4c,0x42,0x38,
    0x2d,0x38,0x43,0x4d,0x57,0x61,0x6a,0x70,0x71,0x70,0x6b,0x63,0x59,0x4f,0x45,0x3b,0x31,0x27,0x1c,0x12,0x39,0x43,0x4c,0x55,0x5d,0x65,0x6b,0x6f,0x71,0x70,0x6d,0x67,
    0x60,0x62,0x6b,0x70,0x71,0x70,0x6a,0x61,0x57,0x4d,0x43,0x38,0x2e,0x24,0x2e,0x35,0x3c,0x41,0x47,0x51,0x5b,0x65,0x6d,0x71,0x71,0x6f,0x6c,0x71,0x71,0x70,0x69,0x60,
    0x56,0x4c,0x42,0x38,0x2d,0x2d,0x36,0x40,0x49,0x51,0x59,0x61,0x67,0x6c,0x70,0x71,0x70,0x6d,0x68,0x61,0x59,0x51,0x49,0x3f,0x36,0x2c,0x22,0x18,0x44,0x4e,0x57,0x5f,
    0x65,0x68,0x68,0x68,0x65,0x5e,0x56,0x4d,0x43,0x3a,0x3d,0x47,0x51,0x59,0x61,0x66,0x67,0x67,0x67,0x67,0x67,0x67,0x67,0x67,0x67,0x67,0x63,0x5d,0x54,0x4b,0x41,0x38,
    0x36,0x3f,0x48,0x50,0x57,0x5e,0x63,0x67,0x69,0x6a,0x6a,0x69,0x67,0x63,0x5e,0x57,0x4f,0x47,0x3e,0x35,0x35,0x3d,0x46,0x4e,0x56,0x5c,0x62,0x66,0x69,0x6a,0x6a,0x68,
    0x65,0x60,0x5a,0x53,0x4c,0x43,0x3a,0x31,0x34,0x3d,0x46,0x4e,0x55,0x5c,0x61,0x66,0x69,0x6a,0x6a,0x69,0x66,0x61,0x5b,0x54,0x4c,0x45,0x3c,0x33,0x3f,0x48,0x52,0x5a,
    0x62,0x67,0x68,0x68,0x67,0x6a,0x6b,0x6a,0x66,0x65,0x69,0x6a,0x6a,0x68,0x64,0x5f,0x58,0x50,0x48,0x3f,0x3f,0x48,0x52,0x5a,0x62,0x67,0x68,0x68,0x67,0x6a,0x6b,0x6a,
    0x67,0x63,0x5d,0x56,0x4f,0x46,0x3d,0x34,0x00,0x00,0x00,0x20,0x2a,0x34,0x3e,0x48,0x53,0x5d,0x67,0x71,0x7b,0x7b,0x78,0x6e,0x63,0x59,0x4e,0x44,0x39,0x2e,0x3a,0x44,
    0x4f,0x5a,0x64,0x6f,0x79,0x7b,0x7a,0x71,0x67,0x5d,0x52,0x48,0x3e,0x34,0x29,0x1f,0x15,0x3e,0x47,0x51,0x5a,0x63,0x6c,0x73,0x79,0x7b,0x7a,0x76,0x6f,0x68,0x68,0x71,
    0x7a,0x7b,0x79,0x6f,0x64,0x5a,0x4f,0x44,0x3a,0x2f,0x25,0x34,0x3d,0x44,0x4a,0x4f,0x54,0x5e,0x69,0x73,0x7b,0x7b,0x77,0x72,0x7b,0x7b,0x78,0x6e,0x63,0x59,0x4e,0x44,
    0x39,0x2e,0x31,0x3b,0x44,0x4e,0x57,0x60,0x68,0x70,0x76,0x7a,0x7b,0x7a,0x76,0x70,0x68,0x60,0x57,0x4e,0x44,0x3a,0x30,0x26,0x1c,0x48,0x52,0x5c,0x66,0x6e,0x73,0x73,
    0x72,0x6d,0x65,0x5b,0x51,0x47,0x3c,0x40,0x4b,0x55,0x5f,0x68,0x70,0x72,0x72,0x72,0x72,0x72,0x72,0x72,0x72,0x72,0x71,0x6c,0x63,0x59,0x4f,0x45,0x3a,0x3b,0x45,0x4e,
    0x57,0x5f,0x66,0x6c,0x71,0x73,0x75,0x75,0x74,0x71,0x6c,0x66,0x5e,0x56,0x4d,0x44,0x3a,0x3a,0x43,0x4c,0x55,0x5d,0x65,0x6b,0x70,0x73,0x75,0x74,0x73,0x6f,0x69,0x62,
    0x5a,0x52,0x49,0x40,0x36,0x3a,0x43,0x4c,0x54,0x5d,0x64,0x6a,0x70,0x73,0x75,0x75,0x73,0x6f,0x6a,0x63,0x5b,0x53,0x4b,0x42,0x39,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,
    0x73,0x71,0x74,0x75,0x74,0x70,0x6e,0x73,0x75,0x74,0x72,0x6e,0x67,0x5f,0x56,0x4d,0x44,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x73,0x71,0x74,0x75,0x74,0x71,0x6c,0x65,
    0x5e,0x55,0x4c,0x42,0x39,0x00,0x00,0x00,0x23,0x2d,0x37,0x41,0x4b,0x56,0x60,0x6a,0x74,0x7e,0x82,0x77,0x6d,0x63,0x59,0x4e,0x43,0x39,0x2e,0x3a,0x44,0x4f,0x59,0x64,
    0x6e,0x78,0x83,0x7e,0x74,0x6a,0x5f,0x55,0x4b,0x41,0x36,0x2c,0x22,0x18,0x41,0x4b,0x55,0x5f,0x69,0x72,0x7b,0x83,0x85,0x85,0x7e,0x77,0x6e,0x6c,0x76,0x80,0x81,0x77,
    0x6e,0x64,0x59,0x4f,0x44,0x3a,0x2f,0x24,0x3a,0x43,0x4c,0x53,0x59,0x5d,0x60,0x6b,0x75,0x80,0x82,0x77,0x74,0x7e,0x83,0x78,0x6e,0x63,0x59,0x4e,0x44,0x39,0x2f,0x34,
    0x3e,0x48,0x52,0x5c,0x66,0x6f,0x77,0x7e,0x84,0x86,0x85,0x80,0x77,0x6f,0x65,0x5b,0x51,0x47,0x3d,0x33,0x28,0x1e,0x49,0x54,0x5e,0x69,0x73,0x7d,0x7d,0x7c,0x72,0x68,
    0x5d,0x53,0x48,0x3d,0x42,0x4c,0x57,0x62,0x6c,0x77,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7b,0x71,0x66,0x5b,0x51,0x46,0x3c,0x3f,0x49,0x53,0x5d,0x66,0x6e,
    0x75,0x7a,0x7e,0x80,0x80,0x7e,0x7b,0x75,0x6d,0x65,0x5b,0x51,0x47,0x3d,0x3e,0x48,0x51,0x5b,0x64,0x6c,0x74,0x79,0x7d,0x80,0x80,0x7c,0x78,0x71,0x69,0x61,0x57,0x4e,
    0x44,0x3a,0x3e,0x48,0x51,0x5b,0x63,0x6c,0x73,0x79,0x7d,0x80,0x80,0x7d,0x78,0x72,0x6a,0x62,0x5a,0x50,0x47,0x3d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x7b,0x7e,
    0x81,0x7e,0x79,0x77,0x7c,0x80,0x80,0x7c,0x76,0x6e,0x65,0x5c,0x52,0x48,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x7a,0x7e,0x81,0x7e,0x7a,0x74,0x6d,0x64,0x5a,0x51,
    0x47,0x3d,0x00,0x00,0x00,0x25,0x30,0x3a,0x44,0x4e,0x59,0x63,0x6d,0x77,0x82,0x80,0x75,0x6b,0x60,0x56,0x4c,0x42,0x37,0x2d,0x38,0x42,0x4c,0x56,0x61,0x6b,0x75,0x80,
    0x82,0x77,0x6d,0x62,0x58,0x4e,0x44,0x39,0x2f,0x25,0x1b,0x43,0x4e,0x58,0x62,0x6d,0x77,0x81,0x82,0x7a,0x7d,0x86,0x7c,0x72,0x71,0x7b,0x85,0x7c,0x72,0x69,0x60,0x56,
    0x4c,0x42,0x38,0x2e,0x23,0x3f,0x48,0x52,0x5a,0x62,0x67,0x68,0x6d,0x77,0x82,0x80,0x75,0x76,0x82,0x81,0x76,0x6b,0x61,0x59,0x50,0x47,0x3d,0x33,0x35,0x40,0x4a,0x55,
    0x5f,0x6a,0x74,0x7d,0x87,0x7e,0x7b,0x80,0x87,0x7d,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x34,0x2a,0x1f,0x49,0x54,0x5e,0x69,0x73,0x7e,0x89,0x7d,0x73,0x68,0x5d,0x53,0x48,
    0x3d,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x43,0x4d,0x57,0x61,0x6b,0x74,0x7d,0x85,0x84,
    0x83,0x83,0x85,0x85,0x7c,0x73,0x69,0x5f,0x54,0x4a,0x40,0x42,0x4c,0x56,0x60,0x69,0x72,0x7b,0x83,0x85,0x83,0x83,0x87,0x81,0x78,0x6f,0x66,0x5c,0x52,0x48,0x3e,0x42,
    0x4c,0x56,0x60,0x69,0x72,0x7b,0x82,0x86,0x83,0x83,0x85,0x82,0x79,0x71,0x68,0x5f,0x55,0x4b,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x84,0x83,0x83,0x87,0x82,
    0x7e,0x85,0x83,0x85,0x85,0x7c,0x73,0x69,0x5f,0x55,0x4b,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x83,0x83,0x83,0x85,0x84,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x3f,0x00,
    0x00,0x00,0x28,0x32,0x3d,0x47,0x51,0x5b,0x66,0x70,0x7a,0x85,0x7c,0x72,0x68,0x5d,0x53,0x49,0x3f,0x34,0x2a,0x35,0x3f,0x49,0x54,0x5e,0x68,0x72,0x7c,0x84,0x7a,0x6f,
    0x65,0x5b,0x51,0x47,0x3c,0x32,0x28,0x1e,0x44,0x4f,0x5a,0x64,0x6e,0x79,0x84,0x7e,0x74,0x79,0x84,0x80,0x74,0x76,0x80,0x81,0x77,0x6e,0x64,0x5b,0x51,0x48,0x3f,0x38,
    0x30,0x28,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x73,0x79,0x84,0x7d,0x73,0x78,0x83,0x7e,0x74,0x70,0x68,0x5e,0x54,0x4a,0x40,0x35,0x36,0x41,0x4c,0x56,0x61,0x6c,0x76,
    0x81,0x84,0x7a,0x71,0x7b,0x86,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x36,0x2e,0x26,0x49,0x54,0x5e,0x69,0x73,0x7d,0x7d,0x7c,0x72,0x68,0x5d,0x53,0x48,0x3d,0x42,0x4d,
    0x57,0x62,0x6c,0x77,0x7e,0x73,0x6e,0x6e,0x6e,0x6e,0x6e,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x45,0x4f,0x5a,0x64,0x6e,0x79,0x83,0x82,0x7a,0x77,0x77,0x7c,
    0x85,0x81,0x75,0x6b,0x61,0x56,0x4b,0x41,0x45,0x4f,0x59,0x63,0x6d,0x77,0x82,0x85,0x7c,0x77,0x78,0x7e,0x87,0x7d,0x73,0x69,0x5f,0x55,0x4a,0x40,0x45,0x4f,0x59,0x64,
    0x6e,0x77,0x82,0x85,0x7c,0x77,0x77,0x7c,0x85,0x80,0x76,0x6d,0x62,0x58,0x4e,0x44,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x86,0x7e,0x79,0x78,0x80,0x87,0x83,0x7b,0x78,
    0x7b,0x85,0x82,0x76,0x6c,0x62,0x57,0x4c,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x85,0x7e,0x79,0x78,0x7c,0x86,0x80,0x75,0x6b,0x60,0x56,0x4b,0x41,0x00,0x00,0x00,0x2b,
    0x35,0x40,0x4a,0x54,0x5e,0x68,0x73,0x7c,0x84,0x79,0x6f,0x65,0x5a,0x50,0x46,0x3c,0x32,0x27,0x32,0x3c,0x47,0x51,0x5b,0x65,0x6f,0x7a,0x84,0x7c,0x72,0x68,0x5e,0x54,
    0x49,0x3f,0x35,0x2b,0x20,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x84,0x7e,0x73,0x78,0x83,0x80,0x74,0x7b,0x85,0x7b,0x72,0x69,0x5f,0x59,0x54,0x4e,0x47,0x3f,0x37,0x2f,0x43,
    0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x7d,0x86,0x7d,0x7d,0x7d,0x85,0x7d,0x7d,0x76,0x6b,0x61,0x56,0x4c,0x41,0x36,0x36,0x41,0x4b,0x56,0x60,0x6a,0x75,0x80,0x87,0x7d,
    0x75,0x7c,0x87,0x7d,0x73,0x69,0x5f,0x54,0x4d,0x45,0x3d,0x35,0x2b,0x48,0x52,0x5c,0x66,0x6e,0x73,0x73,0x72,0x6d,0x65,0x5b,0x51,0x47,0x3c,0x42,0x4d,0x57,0x62,0x6c,
    0x77,0x7e,0x73,0x69,0x64,0x64,0x64,0x65,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x45,0x50,0x5b,0x65,0x70,0x7a,0x7d,0x7e,0x74,0x74,0x75,0x78,0x83,0x82,0x76,
    0x6c,0x61,0x56,0x4c,0x41,0x47,0x51,0x5b,0x66,0x70,0x7b,0x85,0x80,0x75,0x6d,0x70,0x79,0x80,0x7e,0x75,0x6b,0x60,0x55,0x4b,0x40,0x47,0x51,0x5c,0x66,0x71,0x7b,0x85,
    0x80,0x75,0x75,0x75,0x76,0x81,0x84,0x7a,0x6f,0x65,0x5b,0x50,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x79,0x6f,0x72,0x7c,0x88,0x7e,0x74,0x6d,0x77,0x83,0x83,
    0x77,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x79,0x6f,0x6e,0x79,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x2e,0x38,0x42,0x4d,
    0x57,0x61,0x6b,0x75,0x80,0x81,0x76,0x6c,0x62,0x58,0x4d,0x43,0x39,0x2f,0x25,0x2f,0x39,0x44,0x4e,0x58,0x62,0x6d,0x77,0x82,0x80,0x75,0x6b,0x61,0x56,0x4c,0x42,0x38,
    0x2e,0x23,0x44,0x4e,0x59,0x63,0x6e,0x78,0x83,0x80,0x76,0x7a,0x84,0x7e,0x76,0x80,0x81,0x77,0x6d,0x68,0x66,0x62,0x5d,0x56,0x4e,0x46,0x3d,0x34,0x43,0x4d,0x58,0x63,
    0x6d,0x78,0x83,0x83,0x83,0x85,0x83,0x83,0x83,0x86,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x3a,0x43,0x4c,0x54,0x5d,0x67,0x71,0x7a,0x84,0x84,0x7e,0x85,0x81,
    0x79,0x6f,0x66,0x60,0x5b,0x54,0x4c,0x43,0x3a,0x30,0x44,0x4e,0x57,0x5f,0x65,0x68,0x68,0x68,0x65,0x5e,0x56,0x4d,0x43,0x3a,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,
    0x69,0x5e,0x59,0x5b,0x65,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x44,0x4e,0x58,0x62,0x6b,0x71,0x76,0x7a,0x7c,0x7e,0x81,0x83,0x87,0x82,0x76,0x6c,0x61,0x56,
    0x4c,0x41,0x48,0x52,0x5d,0x67,0x72,0x7c,0x87,0x7d,0x73,0x68,0x6b,0x73,0x74,0x73,0x6f,0x67,0x5e,0x54,0x49,0x3f,0x48,0x52,0x5d,0x67,0x72,0x7c,0x88,0x81,0x81,0x81,
    0x81,0x81,0x81,0x87,0x7b,0x71,0x66,0x5c,0x51,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x77,0x6c,0x72,0x7c,0x88,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,
    0x57,0x4d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x77,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x31,0x3b,0x45,0x50,0x5a,0x64,0x6e,
    0x79,0x83,0x7d,0x73,0x69,0x5f,0x55,0x4b,0x40,0x36,0x2c,0x22,0x2c,0x36,0x41,0x4b,0x55,0x5f,0x6a,0x74,0x7e,0x83,0x78,0x6e,0x64,0x59,0x4f,0x45,0x3b,0x30,0x26,0x42,
    0x4c,0x57,0x61,0x6b,0x75,0x7e,0x85,0x7e,0x82,0x83,0x7a,0x7b,0x85,0x7b,0x72,0x72,0x72,0x70,0x6c,0x65,0x5d,0x55,0x4c,0x43,0x39,0x42,0x4d,0x57,0x62,0x6c,0x75,0x78,
    0x78,0x80,0x82,0x78,0x78,0x7e,0x83,0x78,0x78,0x74,0x6a,0x60,0x56,0x4b,0x41,0x36,0x3e,0x48,0x51,0x5a,0x63,0x6a,0x71,0x77,0x7c,0x87,0x87,0x7e,0x79,0x71,0x6f,0x6d,
    0x6a,0x63,0x5b,0x51,0x48,0x3d,0x33,0x42,0x4b,0x54,0x5b,0x60,0x63,0x63,0x63,0x60,0x5a,0x53,0x4a,0x41,0x38,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x69,0x5e,0x54,
    0x5b,0x65,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x46,0x50,0x5a,0x64,0x6e,0x77,0x7e,0x85,0x86,0x83,0x82,0x7e,0x84,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x48,
    0x53,0x5d,0x68,0x73,0x7d,0x88,0x7c,0x72,0x68,0x69,0x71,0x73,0x72,0x70,0x68,0x5f,0x55,0x4b,0x40,0x48,0x53,0x5d,0x68,0x73,0x7d,0x87,0x82,0x82,0x82,0x82,0x82,0x82,
    0x82,0x7b,0x71,0x66,0x5c,0x51,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x72,0x7c,0x88,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x43,
    0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x34,0x3e,0x48,0x52,0x5d,0x67,0x71,0x7b,0x85,0x7b,
    0x71,0x66,0x5c,0x52,0x48,0x3d,0x33,0x29,0x1f,0x29,0x34,0x3e,0x48,0x52,0x5d,0x67,0x71,0x7b,0x85,0x7b,0x71,0x67,0x5c,0x52,0x48,0x3d,0x33,0x29,0x3f,0x49,0x53,0x5d,
    0x66,0x6f,0x77,0x7d,0x81,0x80,0x7b,0x77,0x81,0x80,0x76,0x79,0x7c,0x7c,0x7a,0x74,0x6c,0x64,0x5b,0x51,0x47,0x3d,0x40,0x4a,0x54,0x5e,0x66,0x6c,0x6d,0x77,0x82,0x80,
    0x75,0x76,0x81,0x81,0x76,0x6d,0x6b,0x65,0x5c,0x53,0x49,0x3f,0x34,0x43,0x4d,0x56,0x60,0x69,0x72,0x79,0x81,0x86,0x81,0x87,0x81,0x78,0x77,0x7a,0x78,0x72,0x69,0x5f,
    0x55,0x4a,0x40,0x35,0x46,0x50,0x5a,0x63,0x6a,0x6d,0x6d,0x6d,0x69,0x62,0x59,0x4f,0x45,0x3b,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x69,0x5e,0x54,0x5b,0x65,0x70,
    0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x48,0x52,0x5c,0x67,0x72,0x7c,0x86,0x82,0x7b,0x79,0x77,0x79,0x84,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x47,0x52,0x5c,0x67,
    0x72,0x7c,0x87,0x7e,0x73,0x69,0x6d,0x77,0x7e,0x7c,0x77,0x6c,0x62,0x57,0x4c,0x42,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x7d,0x76,0x76,0x76,0x76,0x7a,0x79,0x77,0x6e,
    0x65,0x5a,0x50,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x72,0x7c,0x88,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x63,
    0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x37,0x41,0x4b,0x55,0x60,0x6a,0x74,0x7e,0x83,0x78,0x6e,0x64,0x59,
    0x4f,0x45,0x3a,0x30,0x26,0x1c,0x27,0x31,0x3b,0x45,0x4f,0x5a,0x64,0x6e,0x78,0x83,0x7d,0x73,0x69,0x5f,0x55,0x4b,0x40,0x36,0x2c,0x3c,0x45,0x4f,0x58,0x60,0x68,0x6f,
    0x73,0x75,0x75,0x72,0x7b,0x85,0x7b,0x79,0x82,0x83,0x83,0x83,0x7b,0x72,0x68,0x5f,0x54,0x4a,0x40,0x42,0x4d,0x57,0x62,0x6c,0x75,0x78,0x79,0x84,0x7d,0x78,0x79,0x83,
    0x7e,0x78,0x78,0x74,0x6a,0x60,0x56,0x4b,0x41,0x36,0x45,0x50,0x5a,0x64,0x6e,0x77,0x81,0x87,0x7e,0x77,0x80,0x87,0x7e,0x7b,0x84,0x80,0x75,0x6b,0x60,0x55,0x4b,0x40,
    0x36,0x49,0x53,0x5d,0x68,0x71,0x78,0x78,0x78,0x71,0x67,0x5d,0x52,0x48,0x3d,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x69,0x5e,0x54,0x5b,0x65,0x70,0x7b,0x7b,0x71,
    0x66,0x5c,0x51,0x46,0x3c,0x48,0x53,0x5d,0x68,0x73,0x7d,0x88,0x7d,0x73,0x70,0x74,0x7c,0x86,0x82,0x76,0x6c,0x61,0x57,0x4c,0x42,0x46,0x51,0x5b,0x65,0x70,0x7a,0x84,
    0x81,0x77,0x71,0x72,0x7a,0x84,0x81,0x76,0x6c,0x61,0x57,0x4c,0x42,0x46,0x51,0x5b,0x65,0x70,0x7a,0x84,0x82,0x78,0x71,0x71,0x77,0x81,0x84,0x7a,0x70,0x65,0x5b,0x50,
    0x45,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x72,0x7c,0x88,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,
    0x82,0x76,0x6c,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x3a,0x44,0x4e,0x58,0x62,0x6d,0x77,0x82,0x80,0x75,0x6b,0x60,0x56,0x4c,0x42,0x38,
    0x2d,0x23,0x19,0x24,0x2e,0x38,0x42,0x4d,0x57,0x61,0x6b,0x75,0x80,0x81,0x76,0x6c,0x62,0x58,0x4e,0x43,0x39,0x2f,0x37,0x40,0x49,0x51,0x59,0x60,0x66,0x69,0x6b,0x6e,
    0x77,0x81,0x80,0x76,0x7e,0x84,0x7a,0x79,0x82,0x81,0x76,0x6b,0x61,0x57,0x4c,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x87,0x83,0x83,0x83,0x87,0x83,0x83,0x82,
    0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x47,0x51,0x5c,0x66,0x71,0x7b,0x86,0x81,0x77,0x71,0x79,0x82,0x85,0x80,0x87,0x7c,0x72,0x68,0x5e,0x54,0x4a,0x3f,0x35,0x49,0x54,
    0x5e,0x69,0x73,0x7e,0x83,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x69,0x5e,0x5d,0x5d,0x65,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,
    0x46,0x3c,0x48,0x52,0x5d,0x67,0x71,0x7b,0x86,0x82,0x7b,0x7b,0x7d,0x83,0x84,0x83,0x77,0x6d,0x62,0x59,0x4f,0x44,0x44,0x4e,0x58,0x62,0x6c,0x75,0x7e,0x87,0x80,0x7b,
    0x7b,0x81,0x85,0x7c,0x72,0x69,0x5f,0x54,0x4a,0x40,0x44,0x4e,0x59,0x62,0x6c,0x76,0x7e,0x87,0x80,0x7b,0x7b,0x80,0x87,0x80,0x76,0x6c,0x63,0x59,0x4e,0x44,0x43,0x4d,
    0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x72,0x7c,0x88,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,
    0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x3c,0x47,0x51,0x5b,0x65,0x70,0x7a,0x84,0x7c,0x72,0x68,0x5e,0x53,0x49,0x3f,0x35,0x2b,0x20,0x16,
    0x21,0x2b,0x35,0x3f,0x4a,0x54,0x5e,0x68,0x72,0x7c,0x84,0x79,0x6f,0x65,0x5b,0x50,0x46,0x3c,0x32,0x31,0x3a,0x42,0x4a,0x51,0x57,0x5c,0x5f,0x69,0x72,0x7c,0x85,0x7b,
    0x76,0x81,0x83,0x77,0x75,0x80,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x84,0x7d,0x7d,0x7d,0x85,0x7d,0x7d,0x7d,0x76,0x6b,0x61,
    0x56,0x4c,0x41,0x36,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x80,0x74,0x6a,0x72,0x7b,0x83,0x88,0x83,0x79,0x6f,0x65,0x5d,0x56,0x4d,0x44,0x3a,0x49,0x54,0x5e,0x69,0x73,
    0x7e,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x69,0x68,0x68,0x68,0x68,0x70,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x46,
    0x50,0x5a,0x64,0x6e,0x77,0x7e,0x84,0x86,0x86,0x83,0x7e,0x81,0x84,0x7a,0x70,0x66,0x5b,0x51,0x46,0x41,0x4b,0x54,0x5e,0x67,0x70,0x77,0x7e,0x84,0x86,0x86,0x83,0x7d,
    0x76,0x6d,0x64,0x5b,0x51,0x47,0x3d,0x41,0x4b,0x55,0x5e,0x67,0x70,0x77,0x7e,0x83,0x86,0x86,0x84,0x80,0x78,0x70,0x68,0x5e,0x55,0x4b,0x41,0x43,0x4d,0x58,0x63,0x6d,
    0x78,0x83,0x82,0x76,0x6c,0x72,0x7c,0x84,0x7c,0x72,0x6c,0x77,0x83,0x83,0x77,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6d,0x78,0x83,
    0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x00,0x00,0x00,0x3f,0x49,0x54,0x5e,0x68,0x72,0x7c,0x84,0x79,0x6f,0x65,0x5b,0x51,0x46,0x3c,0x32,0x28,0x1d,0x13,0x1e,0x28,0x32,
    0x3d,0x47,0x51,0x5b,0x65,0x70,0x7a,0x84,0x7c,0x72,0x68,0x5d,0x53,0x49,0x3f,0x35,0x2b,0x33,0x3b,0x42,0x48,0x51,0x5b,0x64,0x6e,0x77,0x81,0x80,0x76,0x75,0x81,0x83,
    0x77,0x75,0x80,0x83,0x77,0x6c,0x62,0x57,0x4d,0x42,0x42,0x4c,0x56,0x60,0x69,0x71,0x75,0x80,0x82,0x77,0x74,0x7e,0x83,0x78,0x73,0x73,0x70,0x68,0x5e,0x54,0x4a,0x40,
    0x35,0x46,0x51,0x5b,0x66,0x70,0x7b,0x85,0x82,0x78,0x71,0x73,0x79,0x81,0x8a,0x83,0x7b,0x73,0x6c,0x64,0x5b,0x52,0x48,0x3d,0x49,0x53,0x5e,0x68,0x72,0x79,0x80,0x7d,
    0x73,0x68,0x5d,0x53,0x48,0x3d,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x73,0x73,0x73,0x73,0x73,0x73,0x73,0x7b,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x43,0x4d,0x56,0x5f,
    0x68,0x6f,0x75,0x79,0x7b,0x7b,0x79,0x74,0x79,0x79,0x78,0x70,0x65,0x5b,0x51,0x46,0x3c,0x46,0x4f,0x58,0x61,0x68,0x70,0x75,0x79,0x7b,0x7b,0x79,0x74,0x6e,0x67,0x5f,
    0x55,0x4c,0x43,0x39,0x3d,0x46,0x50,0x59,0x61,0x68,0x70,0x75,0x79,0x7b,0x7b,0x79,0x76,0x70,0x69,0x62,0x59,0x50,0x46,0x3d,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,
    0x74,0x6b,0x70,0x78,0x79,0x78,0x70,0x6b,0x75,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x6c,0x76,0x79,0x79,0x74,0x6b,
    0x60,0x56,0x4b,0x41,0x00,0x00,0x00,0x42,0x4c,0x57,0x61,0x6b,0x75,0x80,0x82,0x77,0x6c,0x62,0x58,0x4e,0x44,0x39,0x2f,0x25,0x1b,0x10,0x1b,0x25,0x2f,0x3a,0x44,0x4e,
    0x58,0x63,0x6d,0x77,0x82,0x80,0x75,0x6b,0x60,0x56,0x4c,0x42,0x37,0x24,0x2e,0x38,0x43,0x4d,0x56,0x60,0x69,0x73,0x7c,0x84,0x7b,0x71,0x74,0x7e,0x84,0x7a,0x78,0x82,
    0x81,0x76,0x6b,0x61,0x57,0x4c,0x42,0x3f,0x48,0x52,0x5a,0x62,0x6d,0x77,0x82,0x80,0x75,0x76,0x82,0x81,0x76,0x6b,0x68,0x66,0x61,0x59,0x50,0x47,0x3d,0x33,0x45,0x4f,
    0x59,0x63,0x6d,0x77,0x80,0x87,0x80,0x7b,0x7d,0x82,0x86,0x7e,0x87,0x82,0x7b,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x4a,0x54,0x5f,0x69,0x74,0x7c,0x83,0x7a,0x70,0x66,0x5c,
    0x51,0x47,0x3c,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7e,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7b,0x71,0x66,0x5c,0x51,0x46,0x3c,0x3e,0x48,0x51,0x59,0x60,0x67,0x6c,
    0x6f,0x70,0x70,0x6e,0x6b,0x6e,0x6e,0x6e,0x69,0x61,0x58,0x4e,0x44,0x38,0x41,0x49,0x52,0x59,0x61,0x67,0x6c,0x6f,0x70,0x70,0x6e,0x6b,0x65,0x5f,0x58,0x50,0x47,0x3e,
    0x35,0x38,0x41,0x4a,0x52,0x59,0x61,0x67,0x6c,0x6f,0x70,0x70,0x6f,0x6c,0x67,0x62,0x5a,0x53,0x4a,0x41,0x38,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x6a,
    0x6e,0x6e,0x6e,0x6a,0x66,0x6c,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,
    0x3f,0x00,0x00,0x00,0x44,0x4f,0x59,0x64,0x6e,0x78,0x83,0x7e,0x74,0x69,0x5f,0x55,0x4b,0x41,0x36,0x2c,0x22,0x18,0x0e,0x18,0x22,0x2d,0x37,0x41,0x4b,0x56,0x60,0x6a,
    0x74,0x7e,0x83,0x78,0x6d,0x63,0x59,0x4e,0x43,0x39,0x25,0x30,0x3a,0x45,0x4f,0x5a,0x64,0x6e,0x77,0x82,0x80,0x75,0x6c,0x70,0x79,0x82,0x83,0x82,0x83,0x7b,0x72,0x68,
    0x5f,0x54,0x4a,0x40,0x3b,0x45,0x50,0x5a,0x65,0x6f,0x79,0x84,0x7c,0x72,0x79,0x83,0x7e,0x74,0x69,0x5f,0x5c,0x58,0x52,0x4a,0x42,0x38,0x2f,0x42,0x4c,0x55,0x5f,0x68,
    0x71,0x78,0x80,0x84,0x86,0x85,0x83,0x7d,0x77,0x7e,0x84,0x7c,0x73,0x69,0x5f,0x54,0x4a,0x3f,0x49,0x54,0x5e,0x69,0x72,0x7b,0x7b,0x74,0x6c,0x62,0x59,0x4f,0x45,0x3a,
    0x42,0x4c,0x57,0x61,0x6b,0x75,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x78,0x70,0x65,0x5b,0x51,0x46,0x3b,0x39,0x42,0x4a,0x51,0x58,0x5e,0x62,0x65,0x65,0x65,
    0x64,0x61,0x64,0x64,0x63,0x60,0x5a,0x52,0x49,0x40,0x32,0x3b,0x43,0x4a,0x52,0x58,0x5e,0x62,0x64,0x65,0x65,0x64,0x61,0x5d,0x57,0x50,0x49,0x41,0x38,0x2f,0x32,0x3b,
    0x43,0x4a,0x52,0x58,0x5d,0x62,0x64,0x65,0x65,0x65,0x62,0x5e,0x59,0x53,0x4b,0x43,0x3b,0x33,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x61,0x63,0x64,0x63,
    0x61,0x5e,0x62,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x00,0x00,
    0x00,0x44,0x4f,0x5a,0x64,0x6e,0x78,0x7b,0x79,0x71,0x67,0x5c,0x52,0x48,0x3e,0x34,0x29,0x1f,0x15,0x0b,0x15,0x20,0x2a,0x34,0x3e,0x48,0x53,0x5d,0x67,0x71,0x7a,0x7b,
    0x77,0x6e,0x63,0x59,0x4e,0x44,0x39,0x26,0x30,0x3b,0x45,0x50,0x5b,0x65,0x70,0x7a,0x7d,0x7a,0x71,0x67,0x6b,0x72,0x79,0x7d,0x7d,0x7a,0x74,0x6d,0x64,0x5b,0x51,0x47,
    0x3d,0x3b,0x45,0x50,0x5a,0x65,0x6f,0x79,0x7b,0x79,0x70,0x78,0x7b,0x7a,0x72,0x67,0x5d,0x53,0x4f,0x49,0x43,0x3b,0x33,0x2a,0x3e,0x47,0x51,0x59,0x62,0x69,0x70,0x76,
    0x79,0x7b,0x7a,0x78,0x74,0x6f,0x76,0x7b,0x75,0x6d,0x64,0x5b,0x52,0x48,0x3d,0x47,0x51,0x5b,0x63,0x6c,0x73,0x72,0x6d,0x65,0x5d,0x54,0x4b,0x41,0x37,0x40,0x4a,0x54,
    0x5d,0x66,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x69,0x61,0x58,0x4e,0x44,0x3a,0x33,0x3b,0x42,0x49,0x4f,0x54,0x58,0x5a,0x5b,0x5b,0x5a,0x57,0x59,
    0x59,0x59,0x56,0x52,0x4b,0x43,0x3b,0x2c,0x34,0x3b,0x43,0x4a,0x4f,0x54,0x58,0x5a,0x5b,0x5b,0x5a,0x57,0x53,0x4e,0x48,0x41,0x3a,0x32,0x29,0x2c,0x34,0x3b,0x43,0x49,
    0x4f,0x54,0x57,0x5a,0x5b,0x5b,0x5a,0x58,0x54,0x50,0x4a,0x43,0x3c,0x34,0x2c,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x57,0x59,0x59,0x59,0x57,0x55,0x58,
    0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x00,0x00,0x00,0x43,0x4d,
    0x57,0x60,0x69,0x6f,0x70,0x70,0x6a,0x62,0x59,0x4f,0x45,0x3b,0x31,0x26,0x1c,0x12,0x08,0x12,0x1d,0x27,0x31,0x3b,0x46,0x50,0x59,0x63,0x6b,0x70,0x70,0x6f,0x68,0x60,
    0x56,0x4c,0x42,0x37,0x25,0x2f,0x3a,0x44,0x4e,0x59,0x62,0x6c,0x72,0x73,0x72,0x6c,0x62,0x63,0x6b,0x70,0x73,0x73,0x70,0x6c,0x65,0x5e,0x55,0x4c,0x43,0x39,0x39,0x44,
    0x4e,0x58,0x61,0x6a,0x6f,0x70,0x6f,0x6a,0x6f,0x70,0x70,0x6b,0x63,0x5a,0x50,0x46,0x40,0x3b,0x34,0x2c,0x24,0x39,0x42,0x4a,0x53,0x5a,0x62,0x67,0x6c,0x6f,0x70,0x70,
    0x6e,0x6a,0x67,0x6e,0x71,0x6d,0x66,0x5e,0x56,0x4d,0x44,0x3a,0x43,0x4c,0x55,0x5d,0x64,0x68,0x68,0x64,0x5e,0x56,0x4e,0x46,0x3c,0x33,0x3c,0x46,0x4f,0x57,0x5e,0x62,
    0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x63,0x60,0x5a,0x52,0x49,0x40,0x36,0x2c,0x33,0x3b,0x41,0x46,0x4b,0x4e,0x50,0x50,0x50,0x4f,0x4d,0x4e,0x4e,0x4e,0x4c,
    0x48,0x43,0x3c,0x34,0x25,0x2c,0x34,0x3b,0x41,0x46,0x4a,0x4d,0x50,0x50,0x50,0x4f,0x4d,0x49,0x45,0x3f,0x39,0x32,0x2a,0x23,0x25,0x2c,0x34,0x3b,0x41,0x46,0x4a,0x4d,
    0x4f,0x50,0x50,0x50,0x4e,0x4b,0x46,0x41,0x3b,0x34,0x2d,0x25,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x4d,0x4e,0x4e,0x4e,0x4d,0x4b,0x4e,0x4e,0x4e,0x4e,
    0x4b,0x46,0x40,0x39,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x00,0x00,0x00,0x3f,0x49,0x52,0x5a,0x61,
    0x65,0x65,0x65,0x62,0x5b,0x53,0x4b,0x41,0x37,0x2e,0x23,0x19,0x0f,0x05,0x10,0x1a,0x24,0x2e,0x38,0x42,0x4b,0x54,0x5c,0x62,0x65,0x65,0x65,0x60,0x59,0x51,0x48,0x3e,
    0x34,0x23,0x2d,0x37,0x41,0x4b,0x54,0x5d,0x63,0x68,0x68,0x68,0x63,0x5d,0x5c,0x62,0x66,0x68,0x68,0x66,0x62,0x5d,0x56,0x4f,0x46,0x3e,0x35,0x36,0x40,0x4a,0x53,0x5b,
    0x61,0x65,0x65,0x65,0x61,0x65,0x65,0x65,0x62,0x5c,0x54,0x4b,0x42,0x38,0x32,0x2c,0x25,0x1d,0x33,0x3c,0x44,0x4b,0x53,0x59,0x5e,0x62,0x64,0x65,0x65,0x64,0x60,0x5f,
    0x64,0x66,0x64,0x5e,0x57,0x4f,0x47,0x3e,0x35,0x3d,0x46,0x4e,0x55,0x5b,0x5e,0x5e,0x5a,0x55,0x4f,0x47,0x3f,0x37,0x2e,0x37,0x40,0x48,0x4f,0x55,0x58,0x59,0x59,0x59,
    0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x56,0x52,0x4b,0x43,0x3b,0x32,0x24,0x2c,0x32,0x38,0x3c,0x41,0x43,0x45,0x45,0x45,0x45,0x43,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,
    0x2d,0x1d,0x25,0x2c,0x32,0x37,0x3c,0x40,0x43,0x45,0x45,0x45,0x45,0x43,0x3f,0x3b,0x36,0x30,0x2a,0x23,0x1b,0x1d,0x25,0x2c,0x32,0x37,0x3c,0x40,0x43,0x45,0x45,0x45,
    0x45,0x43,0x41,0x3d,0x38,0x33,0x2c,0x25,0x1e,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x42,0x44,0x44,0x44,0x42,0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,
    0x31,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x00,0x00,0x00,0x3a,0x43,0x4b,0x52,0x57,0x5a,0x5b,0x5b,
    0x58,0x53,0x4c,0x45,0x3c,0x33,0x29,0x20,0x16,0x0c,0x02,0x0c,0x16,0x20,0x2a,0x33,0x3c,0x45,0x4d,0x54,0x58,0x5b,0x5b,0x5a,0x57,0x51,0x4a,0x42,0x39,0x30,0x1f,0x29,
    0x33,0x3c,0x45,0x4e,0x55,0x5a,0x5d,0x5d,0x5d,0x5a,0x55,0x53,0x58,0x5c,0x5d,0x5d,0x5c,0x59,0x54,0x4e,0x47,0x40,0x37,0x2f,0x32,0x3b,0x44,0x4c,0x53,0x58,0x5a,0x5b,
    0x5a,0x58,0x5a,0x5b,0x5b,0x58,0x54,0x4d,0x45,0x3d,0x34,0x2a,0x23,0x1d,0x16,0x2d,0x34,0x3c,0x43,0x4a,0x50,0x54,0x58,0x5a,0x5b,0x5b,0x59,0x56,0x56,0x5a,0x5c,0x5a,
    0x56,0x4f,0x48,0x40,0x38,0x2f,0x37,0x3f,0x46,0x4d,0x51,0x53,0x53,0x50,0x4c,0x46,0x40,0x38,0x30,0x28,0x31,0x39,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,
    0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x43,0x3c,0x34,0x2c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x34,0x3c,0x43,0x49,0x4d,0x50,0x50,0x50,0x4e,0x4a,0x44,
    0x3d,0x36,0x2d,0x24,0x1b,0x12,0x08,0x00,0x09,0x12,0x1c,0x25,0x2e,0x36,0x3e,0x45,0x4a,0x4e,0x50,0x50,0x50,0x4d,0x49,0x43,0x3b,0x33,0x2b,0x1b,0x25,0x2e,0x36,0x3e,
    0x46,0x4c,0x50,0x53,0x53,0x53,0x50,0x4c,0x4a,0x4e,0x51,0x53,0x53,0x52,0x4f,0x4b,0x46,0x3f,0x38,0x31,0x29,0x2c,0x35,0x3d,0x44,0x4a,0x4e,0x50,0x50,0x50,0x4e,0x50,
    0x50,0x50,0x4e,0x4a,0x45,0x3e,0x36,0x2e,0x25,0x1c,0x14,0x0e,0x25,0x2d,0x34,0x3b,0x41,0x46,0x4a,0x4e,0x50,0x50,0x50,0x4f,0x4c,0x4d,0x50,0x51,0x50,0x4c,0x47,0x40,
    0x39,0x31,0x29,0x30,0x37,0x3e,0x43,0x47,0x49,0x49,0x46,0x42,0x3d,0x37,0x31,0x29,0x21,0x2a,0x31,0x38,0x3d,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,
    0x44,0x42,0x3f,0x3a,0x34,0x2d,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x34,0x3a,0x40,0x43,0x45,0x45,0x45,0x44,0x40,0x3b,0x35,0x2e,0x27,
    0x1e,0x16,0x0d,0x03,0x00,0x04,0x0d,0x16,0x1f,0x27,0x2f,0x36,0x3c,0x41,0x44,0x45,0x45,0x45,0x43,0x3f,0x3a,0x34,0x2c,0x24,0x16,0x1f,0x27,0x2f,0x37,0x3d,0x42,0x46,
    0x48,0x48,0x48,0x46,0x42,0x40,0x44,0x47,0x48,0x48,0x47,0x45,0x41,0x3c,0x37,0x30,0x29,0x22,0x26,0x2e,0x35,0x3b,0x40,0x44,0x45,0x45,0x45,0x44,0x45,0x45,0x45,0x44,
    0x41,0x3c,0x36,0x2f,0x27,0x1f,0x16,0x0d,0x06,0x1e,0x25,0x2c,0x33,0x38,0x3d,0x40,0x43,0x45,0x45,0x45,0x44,0x42,0x43,0x46,0x46,0x45,0x42,0x3e,0x38,0x31,0x2a,0x22,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x21,0x27,0x2d,0x32,0x37,0x3a,0x3d,0x3f,0x40,0x40,0x3f,0x3d,0x3a,0x36,0x31,0x2c,
    0x26,0x20,0x18,0x26,0x2d,0x33,0x38,0x3b,0x3d,0x3d,0x3d,0x3f,0x40,0x40,0x3e,0x3b,0x37,0x33,0x2d,0x26,0x1e,0x25,0x2c,0x31,0x36,0x3a,0x3d,0x3f,0x40,0x40,0x3f,0x3e,
    0x3b,0x38,0x34,0x2f,0x29,0x23,0x1b,0x26,0x2d,0x33,0x38,0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x3b,0x3d,0x3d,0x3d,0x3d,0x3a,0x37,0x31,0x2b,0x24,0x1e,0x25,0x2c,0x32,0x37,
    0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x38,0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x37,0x32,0x2c,0x25,0x1d,0x20,0x27,0x2e,0x34,0x38,0x3c,0x3d,0x3d,0x3d,0x3d,0x3a,0x3c,0x3d,0x3d,
    0x3d,0x3c,0x3b,0x3d,0x3d,0x3d,0x3d,0x3b,0x37,0x32,0x2c,0x25,0x1e,0x25,0x2c,0x32,0x37,0x3b,0x3d,0x3d,0x3d,0x3d,0x3c,0x39,0x3c,0x3d,0x3d,0x3d,0x3d,0x3a,0x36,0x31,
    0x2b,0x24,0x22,0x2a,0x30,0x35,0x3a,0x3c,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3c,0x39,0x35,0x2f,0x29,0x2a,0x30,0x36,0x3a,0x3c,0x3d,0x3d,0x3d,0x3c,0x3a,
    0x35,0x30,0x2a,0x22,0x0d,0x15,0x1e,0x25,0x2d,0x33,0x39,0x3d,0x3f,0x40,0x40,0x40,0x3e,0x3a,0x36,0x2f,0x29,0x21,0x19,0x10,0x08,0x02,0x0c,0x11,0x15,0x1a,0x1e,0x22,
    0x26,0x2a,0x2e,0x32,0x36,0x3a,0x3e,0x41,0x41,0x40,0x3d,0x39,0x33,0x2d,0x25,0x2a,0x31,0x37,0x3c,0x40,0x42,0x42,0x40,0x3c,0x38,0x34,0x30,0x2c,0x28,0x24,0x20,0x1b,
    0x17,0x13,0x0e,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x29,0x2f,0x36,0x3c,0x40,0x44,0x48,0x4a,0x4b,0x4b,0x4a,0x47,0x44,0x40,0x3b,0x35,0x2f,0x27,0x20,
    0x2e,0x35,0x3c,0x41,0x45,0x48,0x48,0x48,0x4a,0x4b,0x4a,0x48,0x45,0x41,0x3c,0x35,0x2e,0x25,0x2d,0x34,0x3a,0x3f,0x44,0x47,0x49,0x4b,0x4b,0x4a,0x48,0x46,0x42,0x3d,
    0x38,0x32,0x2a,0x23,0x2e,0x35,0x3c,0x41,0x45,0x48,0x48,0x48,0x47,0x45,0x46,0x48,0x48,0x48,0x47,0x44,0x40,0x3a,0x33,0x2c,0x25,0x2d,0x34,0x3b,0x41,0x45,0x48,0x48,
    0x48,0x48,0x45,0x41,0x45,0x48,0x48,0x48,0x47,0x45,0x40,0x3b,0x34,0x2c,0x24,0x27,0x2f,0x36,0x3d,0x42,0x46,0x48,0x48,0x48,0x47,0x44,0x47,0x48,0x48,0x48,0x47,0x45,
    0x47,0x48,0x48,0x48,0x45,0x41,0x3b,0x34,0x2d,0x25,0x2c,0x34,0x3b,0x40,0x45,0x47,0x48,0x48,0x48,0x47,0x43,0x47,0x48,0x48,0x48,0x47,0x44,0x40,0x3a,0x33,0x2b,0x2a,
    0x31,0x38,0x3f,0x43,0x47,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x47,0x43,0x3e,0x38,0x31,0x32,0x39,0x3f,0x44,0x47,0x48,0x48,0x48,0x47,0x43,0x3f,0x38,0x31,
    0x2a,0x14,0x1b,0x24,0x2d,0x34,0x3c,0x42,0x47,0x4a,0x4b,0x4b,0x4a,0x48,0x44,0x3e,0x38,0x30,0x28,0x1f,0x17,0x11,0x0a,0x15,0x1a,0x1f,0x23,0x27,0x2c,0x30,0x34,0x38,
    0x3c,0x40,0x44,0x48,0x4b,0x4c,0x4a,0x47,0x42,0x3c,0x34,0x2c,0x32,0x39,0x40,0x46,0x4a,0x4c,0x4c,0x4a,0x46,0x42,0x3e,0x3a,0x36,0x32,0x2d,0x29,0x25,0x21,0x1c,0x17,
    0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x30,0x38,0x3e,0x45,0x4a,0x4e,0x52,0x54,0x55,0x55,0x54,0x51,0x4e,0x49,0x44,0x3e,0x36,0x2f,0x27,0x34,0x3d,0x44,
    0x4a,0x4f,0x52,0x53,0x53,0x54,0x55,0x54,0x52,0x4f,0x4a,0x44,0x3d,0x35,0x2d,0x34,0x3c,0x43,0x49,0x4e,0x51,0x54,0x55,0x55,0x54,0x53,0x50,0x4c,0x47,0x41,0x3a,0x32,
    0x2a,0x34,0x3d,0x44,0x4a,0x4f,0x52,0x53,0x53,0x52,0x4f,0x50,0x52,0x53,0x53,0x52,0x4e,0x49,0x42,0x3b,0x32,0x2b,0x34,0x3c,0x43,0x4a,0x4f,0x52,0x53,0x53,0x52,0x4f,
    0x4a,0x4f,0x52,0x53,0x53,0x52,0x4f,0x49,0x43,0x3b,0x33,0x2a,0x2d,0x36,0x3e,0x45,0x4b,0x50,0x52,0x53,0x53,0x52,0x4e,0x51,0x53,0x53,0x53,0x51,0x4f,0x52,0x53,0x53,
    0x52,0x4f,0x4a,0x43,0x3c,0x34,0x2b,0x33,0x3b,0x43,0x49,0x4f,0x52,0x53,0x53,0x53,0x51,0x4d,0x51,0x53,0x53,0x53,0x51,0x4e,0x48,0x42,0x3a,0x31,0x30,0x38,0x40,0x47,
    0x4d,0x51,0x53,0x53,0x53,0x53,0x53,0x53,0x53,0x53,0x53,0x51,0x4d,0x47,0x40,0x38,0x39,0x41,0x48,0x4e,0x51,0x53,0x53,0x53,0x51,0x4d,0x47,0x40,0x38,0x30,0x1d,0x23,
    0x2a,0x33,0x3c,0x44,0x4b,0x50,0x54,0x55,0x55,0x55,0x52,0x4d,0x47,0x3f,0x37,0x2e,0x25,0x1f,0x19,0x12,0x1e,0x24,0x29,0x2d,0x31,0x35,0x39,0x3e,0x42,0x46,0x4a,0x4e,
    0x52,0x55,0x56,0x55,0x51,0x4b,0x43,0x3b,0x33,0x38,0x41,0x48,0x4f,0x54,0x57,0x57,0x54,0x50,0x4c,0x48,0x44,0x40,0x3b,0x37,0x33,0x2f,0x2b,0x26,0x20,0x1a,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x2f,0x37,0x3f,0x47,0x4d,0x53,0x58,0x5c,0x5f,0x60,0x60,0x5f,0x5c,0x57,0x53,0x4d,0x45,0x3e,0x36,0x2e,0x3a,0x43,0x4c,0x53,0x59,0x5d,
    0x5d,0x5d,0x5f,0x60,0x5f,0x5d,0x59,0x53,0x4c,0x44,0x3c,0x33,0x3c,0x44,0x4b,0x52,0x57,0x5b,0x5e,0x60,0x60,0x5f,0x5d,0x5a,0x55,0x50,0x49,0x41,0x39,0x31,0x3a,0x43,
    0x4c,0x53,0x59,0x5d,0x5d,0x5d,0x5c,0x58,0x59,0x5d,0x5d,0x5d,0x5c,0x58,0x51,0x49,0x41,0x38,0x30,0x39,0x42,0x4b,0x52,0x59,0x5c,0x5d,0x5d,0x5d,0x59,0x53,0x59,0x5d,
    0x5d,0x5d,0x5c,0x58,0x52,0x4a,0x42,0x38,0x2f,0x32,0x3c,0x45,0x4d,0x54,0x5a,0x5d,0x5d,0x5d,0x5c,0x58,0x5b,0x5d,0x5d,0x5d,0x5b,0x58,0x5c,0x5d,0x5d,0x5c,0x59,0x52,
    0x4b,0x42,0x39,0x30,0x38,0x42,0x4a,0x52,0x58,0x5c,0x5d,0x5d,0x5d,0x5b,0x56,0x5b,0x5d,0x5d,0x5d,0x5c,0x57,0x51,0x49,0x40,0x37,0x35,0x3f,0x47,0x4f,0x56,0x5b,0x5d,
    0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5b,0x56,0x4f,0x47,0x3e,0x3f,0x48,0x50,0x57,0x5b,0x5d,0x5d,0x5d,0x5b,0x56,0x4f,0x47,0x3f,0x35,0x25,0x2c,0x31,0x38,0x41,
    0x4a,0x53,0x59,0x5e,0x60,0x60,0x5f,0x5c,0x56,0x4e,0x45,0x3c,0x33,0x2e,0x28,0x21,0x19,0x26,0x2c,0x32,0x37,0x3b,0x3f,0x43,0x47,0x4b,0x50,0x54,0x58,0x5c,0x60,0x61,
    0x5f,0x5a,0x53,0x4a,0x41,0x38,0x3e,0x47,0x50,0x58,0x5e,0x61,0x61,0x5e,0x5a,0x56,0x51,0x4d,0x49,0x45,0x41,0x3d,0x39,0x34,0x2f,0x29,0x22,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x35,0x3e,0x46,0x4e,0x56,0x5c,0x62,0x66,0x69,0x6a,0x6a,0x69,0x66,0x61,0x5b,0x54,0x4d,0x45,0x3d,0x34,0x3f,0x48,0x52,0x5a,0x62,0x67,0x68,0x68,0x69,
    0x6b,0x6a,0x66,0x62,0x5b,0x53,0x4a,0x41,0x39,0x42,0x4b,0x53,0x5a,0x60,0x65,0x69,0x6a,0x6b,0x6a,0x67,0x63,0x5e,0x58,0x50,0x48,0x3f,0x36,0x3f,0x48,0x52,0x5a,0x62,
    0x67,0x68,0x68,0x66,0x61,0x62,0x67,0x68,0x68,0x66,0x60,0x58,0x4f,0x46,0x3c,0x34,0x3e,0x48,0x51,0x5a,0x61,0x67,0x68,0x68,0x67,0x62,0x5b,0x62,0x67,0x68,0x68,0x66,
    0x61,0x59,0x50,0x47,0x3d,0x33,0x36,0x40,0x4a,0x53,0x5c,0x63,0x67,0x68,0x68,0x66,0x60,0x65,0x68,0x68,0x68,0x64,0x61,0x66,0x68,0x68,0x67,0x61,0x5a,0x51,0x48,0x3e,
    0x34,0x3d,0x47,0x50,0x59,0x61,0x66,0x68,0x68,0x68,0x64,0x5e,0x64,0x68,0x68,0x68,0x66,0x60,0x58,0x4f,0x45,0x3b,0x3a,0x43,0x4d,0x56,0x5e,0x65,0x68,0x68,0x68,0x68,
    0x68,0x68,0x68,0x68,0x68,0x64,0x5e,0x55,0x4c,0x43,0x44,0x4e,0x57,0x5f,0x65,0x68,0x68,0x68,0x65,0x5e,0x56,0x4d,0x43,0x3a,0x2d,0x34,0x3a,0x40,0x46,0x50,0x59,0x62,
    0x68,0x6b,0x6b,0x6a,0x65,0x5d,0x54,0x4a,0x41,0x3d,0x37,0x30,0x28,0x20,0x2e,0x35,0x3b,0x40,0x45,0x49,0x4d,0x51,0x55,0x59,0x5e,0x62,0x66,0x6a,0x6c,0x68,0x62,0x59,
    0x4f,0x46,0x3b,0x42,0x4c,0x55,0x5f,0x67,0x6c,0x6c,0x68,0x64,0x5f,0x5b,0x57,0x53,0x4f,0x4b,0x47,0x42,0x3e,0x38,0x31,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x44,0x4d,0x55,0x5d,0x65,0x6b,0x70,0x73,0x75,0x74,0x73,0x6f,0x6a,0x63,0x5c,0x54,0x4c,0x43,0x39,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x73,0x73,0x75,0x74,0x70,
    0x6a,0x62,0x59,0x4f,0x44,0x3e,0x48,0x51,0x5a,0x62,0x69,0x6f,0x73,0x75,0x75,0x74,0x71,0x6d,0x67,0x5f,0x57,0x4e,0x44,0x3b,0x42,0x4c,0x56,0x60,0x69,0x71,0x73,0x73,
    0x70,0x68,0x6a,0x71,0x73,0x73,0x6f,0x67,0x5e,0x54,0x49,0x3f,0x36,0x41,0x4b,0x55,0x5f,0x69,0x70,0x73,0x73,0x71,0x6a,0x61,0x69,0x71,0x73,0x73,0x70,0x68,0x5e,0x54,
    0x4a,0x40,0x35,0x39,0x43,0x4e,0x58,0x62,0x6b,0x72,0x73,0x73,0x6f,0x67,0x6d,0x72,0x73,0x72,0x6d,0x68,0x70,0x73,0x73,0x70,0x69,0x5f,0x55,0x4b,0x41,0x36,0x40,0x4a,
    0x54,0x5e,0x68,0x70,0x73,0x73,0x72,0x6d,0x65,0x6d,0x72,0x73,0x73,0x6f,0x66,0x5d,0x53,0x48,0x3e,0x3c,0x47,0x51,0x5b,0x65,0x6d,0x72,0x73,0x73,0x73,0x73,0x73,0x73,
    0x73,0x72,0x6d,0x64,0x5a,0x50,0x46,0x48,0x52,0x5c,0x66,0x6e,0x73,0x73,0x72,0x6d,0x65,0x5b,0x51,0x47,0x3c,0x34,0x3c,0x43,0x49,0x4d,0x53,0x5e,0x68,0x71,0x75,0x75,
    0x73,0x6c,0x62,0x58,0x4f,0x4b,0x46,0x3f,0x37,0x2f,0x26,0x35,0x3d,0x44,0x4a,0x4f,0x53,0x57,0x5b,0x5f,0x63,0x67,0x6b,0x70,0x73,0x76,0x70,0x67,0x5d,0x53,0x48,0x3e,
    0x44,0x4f,0x59,0x63,0x6d,0x75,0x75,0x72,0x6d,0x69,0x65,0x61,0x5d,0x59,0x55,0x50,0x4c,0x46,0x40,0x38,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x49,0x52,
    0x5c,0x64,0x6c,0x73,0x79,0x7d,0x80,0x80,0x7d,0x79,0x72,0x6b,0x63,0x5a,0x51,0x48,0x3e,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x7c,0x80,0x7e,0x79,0x70,0x66,0x5b,
    0x51,0x46,0x42,0x4c,0x56,0x5f,0x68,0x71,0x78,0x7d,0x80,0x80,0x7e,0x7b,0x76,0x6e,0x66,0x5c,0x53,0x49,0x3f,0x43,0x4d,0x58,0x63,0x6d,0x78,0x7d,0x7d,0x76,0x6b,0x6e,
    0x79,0x7d,0x7d,0x75,0x6b,0x60,0x55,0x4b,0x40,0x37,0x42,0x4d,0x57,0x62,0x6c,0x77,0x7d,0x7d,0x78,0x6e,0x64,0x6e,0x78,0x7d,0x7d,0x76,0x6b,0x61,0x56,0x4c,0x41,0x36,
    0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x7d,0x7d,0x76,0x6b,0x73,0x7c,0x7d,0x7c,0x72,0x6c,0x76,0x7d,0x7d,0x77,0x6c,0x62,0x57,0x4d,0x42,0x37,0x41,0x4c,0x56,0x61,0x6b,
    0x76,0x7d,0x7d,0x7c,0x73,0x6b,0x73,0x7c,0x7d,0x7d,0x74,0x6a,0x5f,0x54,0x4a,0x3f,0x3d,0x48,0x53,0x5d,0x68,0x72,0x7c,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7c,0x72,
    0x67,0x5c,0x52,0x47,0x49,0x54,0x5e,0x69,0x73,0x7d,0x7d,0x7c,0x72,0x68,0x5d,0x53,0x48,0x3d,0x3a,0x43,0x4b,0x52,0x57,0x5a,0x5f,0x6a,0x74,0x80,0x81,0x79,0x6e,0x64,
    0x5b,0x59,0x54,0x4e,0x46,0x3e,0x35,0x2b,0x3b,0x43,0x4c,0x53,0x58,0x5c,0x61,0x65,0x69,0x6d,0x71,0x75,0x79,0x7d,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,
    0x64,0x6f,0x7a,0x80,0x7b,0x77,0x73,0x6f,0x6b,0x67,0x62,0x5e,0x5a,0x55,0x4f,0x47,0x3e,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x4d,0x57,0x61,0x6a,0x73,
    0x7b,0x83,0x85,0x83,0x83,0x86,0x82,0x7a,0x72,0x69,0x5f,0x55,0x4c,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x80,0x85,0x85,0x84,0x7a,0x70,0x66,0x5b,0x51,0x46,0x45,
    0x4f,0x59,0x64,0x6e,0x77,0x80,0x86,0x83,0x82,0x84,0x85,0x7d,0x74,0x6a,0x60,0x56,0x4c,0x41,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6e,0x79,0x84,0x81,
    0x75,0x6b,0x60,0x55,0x4b,0x40,0x37,0x41,0x4c,0x56,0x60,0x6b,0x74,0x7e,0x86,0x7c,0x72,0x68,0x72,0x7b,0x86,0x7e,0x74,0x6a,0x60,0x55,0x4b,0x41,0x36,0x39,0x44,0x4e,
    0x59,0x63,0x6d,0x77,0x82,0x83,0x79,0x6e,0x75,0x80,0x89,0x80,0x75,0x6f,0x79,0x84,0x80,0x75,0x6b,0x61,0x57,0x4c,0x41,0x37,0x40,0x4b,0x55,0x60,0x6a,0x72,0x7b,0x84,
    0x83,0x79,0x71,0x79,0x83,0x83,0x7a,0x71,0x68,0x5e,0x54,0x49,0x3f,0x3d,0x48,0x53,0x5d,0x68,0x73,0x7d,0x83,0x83,0x83,0x83,0x83,0x84,0x87,0x7c,0x72,0x67,0x5c,0x52,
    0x47,0x49,0x54,0x5e,0x69,0x73,0x7e,0x89,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3f,0x49,0x52,0x5a,0x61,0x65,0x65,0x6a,0x74,0x80,0x84,0x79,0x6e,0x65,0x65,0x63,0x5d,
    0x55,0x4d,0x43,0x39,0x2f,0x40,0x49,0x52,0x5b,0x62,0x66,0x6a,0x6e,0x73,0x77,0x7b,0x80,0x83,0x86,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,0x64,0x6f,0x7a,
    0x84,0x85,0x82,0x7c,0x79,0x75,0x70,0x6c,0x68,0x64,0x5e,0x56,0x4d,0x44,0x3a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x50,0x5a,0x64,0x6e,0x78,0x82,0x84,0x7c,
    0x77,0x78,0x7d,0x85,0x81,0x77,0x6d,0x63,0x59,0x4f,0x44,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x84,0x7e,0x7a,0x7d,0x76,0x6c,0x62,0x58,0x4e,0x44,0x46,0x51,0x5b,0x66,
    0x70,0x7b,0x85,0x7e,0x77,0x77,0x7b,0x83,0x82,0x77,0x6d,0x62,0x58,0x4d,0x43,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,
    0x55,0x4b,0x40,0x35,0x3f,0x49,0x53,0x5d,0x67,0x71,0x7b,0x85,0x80,0x75,0x6b,0x75,0x80,0x85,0x7a,0x70,0x66,0x5c,0x52,0x48,0x3e,0x34,0x37,0x41,0x4b,0x56,0x60,0x6a,
    0x74,0x7e,0x86,0x7b,0x71,0x78,0x83,0x84,0x82,0x77,0x72,0x7c,0x87,0x7c,0x72,0x68,0x5e,0x54,0x4a,0x3f,0x35,0x3e,0x48,0x52,0x5b,0x64,0x6c,0x75,0x7e,0x87,0x80,0x77,
    0x80,0x85,0x7c,0x74,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x3d,0x48,0x52,0x5d,0x67,0x71,0x78,0x78,0x78,0x78,0x78,0x7e,0x86,0x80,0x77,0x6f,0x66,0x5b,0x51,0x47,0x49,0x54,
    0x5e,0x69,0x73,0x7d,0x7d,0x7c,0x72,0x68,0x5d,0x53,0x48,0x3d,0x43,0x4d,0x57,0x60,0x69,0x6f,0x70,0x70,0x74,0x80,0x84,0x79,0x70,0x70,0x70,0x6c,0x64,0x5b,0x51,0x47,
    0x3d,0x32,0x43,0x4d,0x57,0x61,0x6a,0x70,0x74,0x78,0x7c,0x81,0x85,0x84,0x81,0x7c,0x78,0x71,0x68,0x5d,0x53,0x49,0x3e,0x44,0x4f,0x59,0x63,0x6d,0x76,0x7a,0x7e,0x83,
    0x87,0x83,0x7e,0x7a,0x76,0x72,0x6d,0x65,0x5b,0x51,0x47,0x3d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x52,0x5d,0x67,0x71,0x7b,0x86,0x7e,0x75,0x6d,0x6e,0x76,
    0x81,0x85,0x7a,0x70,0x66,0x5b,0x51,0x46,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x84,0x79,0x70,0x73,0x70,0x68,0x5e,0x54,0x4b,0x41,0x46,0x51,0x5b,0x66,0x71,0x7b,0x86,
    0x80,0x79,0x77,0x75,0x7b,0x7b,0x76,0x6d,0x62,0x58,0x4d,0x43,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,
    0x31,0x3b,0x45,0x4f,0x59,0x63,0x6d,0x77,0x82,0x83,0x79,0x6f,0x79,0x83,0x81,0x77,0x6d,0x63,0x59,0x4f,0x45,0x3b,0x31,0x34,0x3e,0x48,0x52,0x5d,0x67,0x71,0x7b,0x85,
    0x7e,0x74,0x7b,0x86,0x7e,0x84,0x7a,0x75,0x80,0x84,0x79,0x6f,0x65,0x5b,0x51,0x46,0x3c,0x32,0x3a,0x43,0x4c,0x55,0x5e,0x66,0x6f,0x77,0x80,0x85,0x7d,0x87,0x7e,0x76,
    0x6d,0x65,0x5c,0x54,0x4b,0x42,0x38,0x3b,0x45,0x4f,0x59,0x62,0x69,0x6d,0x6d,0x6d,0x74,0x7c,0x85,0x81,0x79,0x71,0x68,0x60,0x57,0x4e,0x44,0x48,0x52,0x5c,0x66,0x6e,
    0x73,0x73,0x72,0x6d,0x65,0x5b,0x51,0x47,0x3c,0x44,0x4f,0x5a,0x64,0x6e,0x78,0x7b,0x7b,0x7b,0x80,0x84,0x7b,0x7b,0x7b,0x7a,0x73,0x68,0x5e,0x53,0x49,0x3e,0x34,0x44,
    0x4f,0x5a,0x64,0x6f,0x79,0x7e,0x83,0x87,0x83,0x7e,0x7a,0x76,0x72,0x6e,0x6a,0x63,0x5a,0x50,0x46,0x3c,0x42,0x4c,0x55,0x5f,0x67,0x6c,0x70,0x74,0x78,0x7c,0x81,0x85,
    0x84,0x80,0x7b,0x73,0x69,0x5e,0x53,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x53,0x5e,0x68,0x73,0x7d,0x87,0x7c,0x72,0x67,0x69,0x73,0x7d,0x87,0x7c,
    0x72,0x67,0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x77,0x6c,0x68,0x66,0x61,0x59,0x50,0x47,0x3d,0x45,0x50,0x5a,0x64,0x6e,0x78,0x82,0x88,0x84,0x81,
    0x7e,0x7a,0x76,0x70,0x68,0x5f,0x56,0x4c,0x42,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x2e,0x38,0x41,
    0x4b,0x55,0x5f,0x69,0x73,0x7d,0x87,0x7c,0x73,0x7c,0x87,0x7c,0x73,0x69,0x5f,0x55,0x4b,0x41,0x37,0x2d,0x31,0x3b,0x45,0x4f,0x59,0x64,0x6e,0x78,0x83,0x82,0x77,0x7e,
    0x84,0x7b,0x86,0x7c,0x79,0x83,0x80,0x76,0x6c,0x62,0x57,0x4d,0x43,0x39,0x2f,0x35,0x3d,0x46,0x4f,0x57,0x60,0x69,0x71,0x7a,0x83,0x86,0x81,0x78,0x70,0x67,0x5f,0x56,
    0x4e,0x45,0x3c,0x34,0x38,0x41,0x4a,0x53,0x5a,0x60,0x63,0x6c,0x74,0x7b,0x84,0x82,0x79,0x72,0x6a,0x62,0x59,0x51,0x49,0x40,0x44,0x4e,0x57,0x5f,0x65,0x68,0x68,0x68,
    0x65,0x5e,0x56,0x4d,0x43,0x3a,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x86,0x86,0x86,0x88,0x86,0x86,0x86,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x34,0x45,0x4f,0x5a,0x64,
    0x6f,0x7a,0x85,0x83,0x7c,0x78,0x74,0x70,0x6c,0x68,0x64,0x60,0x5b,0x54,0x4b,0x42,0x38,0x3e,0x47,0x50,0x58,0x5e,0x62,0x66,0x6b,0x6e,0x72,0x77,0x7a,0x7e,0x88,0x7e,
    0x73,0x69,0x5e,0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x54,0x5e,0x69,0x73,0x7e,0x86,0x7b,0x71,0x66,0x68,0x73,0x7d,0x88,0x7c,0x72,0x67,0x5c,
    0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x5c,0x58,0x52,0x4a,0x42,0x38,0x47,0x51,0x5b,0x63,0x6a,0x72,0x79,0x7d,0x81,0x84,0x87,0x85,0x80,
    0x77,0x6e,0x64,0x5a,0x50,0x45,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x6e,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x2a,0x34,0x3e,0x48,0x52,0x5c,
    0x66,0x70,0x79,0x84,0x81,0x76,0x81,0x83,0x79,0x6f,0x65,0x5b,0x51,0x47,0x3d,0x33,0x29,0x2e,0x38,0x42,0x4c,0x56,0x60,0x6b,0x75,0x80,0x84,0x7a,0x82,0x82,0x79,0x83,
    0x80,0x7b,0x86,0x7c,0x73,0x69,0x5e,0x54,0x4a,0x40,0x36,0x2c,0x33,0x3c,0x45,0x4d,0x56,0x5f,0x68,0x70,0x79,0x82,0x89,0x80,0x77,0x6f,0x66,0x5d,0x55,0x4c,0x43,0x3b,
    0x32,0x38,0x42,0x4a,0x53,0x5a,0x62,0x6a,0x72,0x7b,0x83,0x83,0x7b,0x73,0x6b,0x63,0x5d,0x58,0x51,0x49,0x41,0x42,0x4b,0x54,0x5b,0x60,0x63,0x63,0x63,0x60,0x5a,0x53,
    0x4a,0x41,0x38,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x7c,0x7c,0x7c,0x80,0x84,0x7c,0x7c,0x7c,0x7c,0x73,0x69,0x5e,0x54,0x49,0x3e,0x34,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x80,
    0x84,0x85,0x81,0x7c,0x79,0x74,0x70,0x6c,0x68,0x61,0x58,0x4f,0x45,0x3b,0x41,0x4b,0x55,0x5e,0x65,0x6a,0x6e,0x73,0x77,0x7b,0x80,0x83,0x86,0x82,0x7d,0x73,0x69,0x5e,
    0x54,0x49,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x53,0x5d,0x68,0x73,0x7d,0x87,0x7c,0x72,0x69,0x6a,0x74,0x7e,0x87,0x7b,0x71,0x66,0x5c,0x51,0x47,0x43,
    0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4f,0x49,0x43,0x3b,0x33,0x49,0x54,0x5e,0x69,0x72,0x78,0x7a,0x78,0x77,0x79,0x7c,0x82,0x86,0x7b,0x71,0x67,
    0x5c,0x52,0x47,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x77,0x6c,0x6f,0x79,0x84,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x26,0x30,0x3a,0x44,0x4e,0x58,0x62,0x6c,0x76,
    0x80,0x84,0x7a,0x84,0x80,0x75,0x6b,0x61,0x58,0x4d,0x44,0x3a,0x30,0x26,0x2b,0x35,0x3f,0x49,0x53,0x5d,0x67,0x72,0x7b,0x86,0x7c,0x84,0x7e,0x76,0x81,0x82,0x7e,0x84,
    0x7a,0x70,0x65,0x5b,0x51,0x47,0x3d,0x33,0x28,0x39,0x42,0x4b,0x53,0x5c,0x65,0x6e,0x76,0x80,0x87,0x7e,0x87,0x7d,0x75,0x6c,0x63,0x5b,0x52,0x49,0x41,0x38,0x3d,0x47,
    0x50,0x59,0x62,0x69,0x71,0x79,0x82,0x85,0x7c,0x74,0x6c,0x69,0x69,0x66,0x60,0x58,0x4f,0x45,0x46,0x50,0x5a,0x63,0x6a,0x6d,0x6d,0x6d,0x69,0x62,0x59,0x4f,0x45,0x3b,
    0x43,0x4d,0x58,0x61,0x6a,0x71,0x72,0x72,0x74,0x80,0x84,0x79,0x72,0x72,0x72,0x6d,0x65,0x5c,0x52,0x47,0x3d,0x33,0x43,0x4d,0x58,0x61,0x6a,0x71,0x75,0x7a,0x7e,0x83,
    0x87,0x83,0x7e,0x7a,0x76,0x70,0x67,0x5d,0x53,0x48,0x3e,0x44,0x4e,0x59,0x63,0x6c,0x74,0x78,0x7c,0x81,0x85,0x84,0x80,0x7b,0x77,0x73,0x6e,0x66,0x5c,0x52,0x48,0x3d,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x47,0x51,0x5c,0x66,0x71,0x7b,0x85,0x81,0x77,0x71,0x72,0x79,0x82,0x83,0x79,0x6f,0x65,0x5a,0x50,0x46,0x43,0x4d,0x58,0x63,
    0x6d,0x78,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x3b,0x34,0x2c,0x4a,0x54,0x5f,0x69,0x74,0x7e,0x85,0x7c,0x73,0x70,0x73,0x7d,0x87,0x7c,0x72,0x67,0x5c,0x52,0x47,
    0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x83,0x78,0x71,0x74,0x7c,0x86,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x22,0x2c,0x36,0x40,0x4a,0x54,0x5e,0x68,0x72,0x7c,0x86,0x7d,
    0x86,0x7b,0x72,0x68,0x5e,0x54,0x4a,0x40,0x36,0x2c,0x22,0x27,0x32,0x3c,0x46,0x50,0x5a,0x64,0x6e,0x79,0x83,0x80,0x86,0x7b,0x73,0x7e,0x85,0x82,0x81,0x76,0x6c,0x62,
    0x58,0x4e,0x44,0x3a,0x2f,0x25,0x3e,0x48,0x51,0x59,0x62,0x6b,0x74,0x7c,0x85,0x81,0x78,0x82,0x84,0x7b,0x72,0x6a,0x61,0x58,0x50,0x46,0x3d,0x40,0x4a,0x54,0x5e,0x68,
    0x70,0x78,0x81,0x85,0x7d,0x75,0x73,0x73,0x73,0x73,0x6f,0x67,0x5d,0x53,0x49,0x49,0x53,0x5d,0x68,0x71,0x78,0x78,0x78,0x71,0x67,0x5d,0x52,0x48,0x3d,0x40,0x4a,0x53,
    0x5b,0x62,0x67,0x67,0x6a,0x74,0x80,0x84,0x79,0x6e,0x67,0x67,0x64,0x5e,0x56,0x4d,0x44,0x3a,0x30,0x40,0x4a,0x53,0x5b,0x62,0x68,0x6c,0x70,0x74,0x78,0x7c,0x81,0x85,
    0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x83,0x87,0x83,0x7e,0x7a,0x76,0x72,0x6e,0x69,0x65,0x5f,0x57,0x4e,0x44,0x3a,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x45,0x4f,0x59,0x63,0x6d,0x77,0x80,0x87,0x80,0x7b,0x7b,0x81,0x87,0x7e,0x75,0x6b,0x62,0x58,0x4e,0x43,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,
    0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x36,0x2c,0x25,0x48,0x52,0x5d,0x67,0x71,0x7a,0x84,0x83,0x7c,0x7b,0x7c,0x83,0x83,0x79,0x70,0x66,0x5b,0x51,0x46,0x42,0x4c,0x57,
    0x61,0x6b,0x75,0x80,0x87,0x7e,0x7b,0x7d,0x83,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x1f,0x29,0x33,0x3d,0x46,0x50,0x5a,0x64,0x6e,0x78,0x83,0x84,0x82,0x78,0x6e,
    0x64,0x5a,0x50,0x46,0x3c,0x32,0x28,0x1e,0x24,0x2e,0x39,0x43,0x4d,0x57,0x61,0x6b,0x75,0x80,0x86,0x84,0x79,0x71,0x7b,0x86,0x88,0x7d,0x73,0x69,0x5f,0x55,0x4b,0x41,
    0x36,0x2c,0x22,0x41,0x4b,0x56,0x5f,0x68,0x71,0x79,0x83,0x83,0x7a,0x72,0x7b,0x84,0x82,0x78,0x70,0x67,0x5e,0x54,0x4a,0x40,0x41,0x4c,0x56,0x61,0x6b,0x76,0x80,0x88,
    0x7e,0x7d,0x7e,0x7e,0x7e,0x7e,0x7e,0x74,0x6a,0x5f,0x54,0x4a,0x49,0x54,0x5e,0x69,0x73,0x7e,0x83,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3b,0x44,0x4c,0x53,0x59,0x5c,
    0x5f,0x6a,0x74,0x80,0x83,0x79,0x6e,0x64,0x5c,0x5b,0x56,0x4f,0x48,0x3f,0x36,0x2c,0x3b,0x44,0x4c,0x54,0x59,0x5e,0x62,0x66,0x6a,0x6e,0x73,0x77,0x7b,0x80,0x7e,0x73,
    0x69,0x5e,0x54,0x49,0x3e,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x82,0x7d,0x79,0x75,0x70,0x6c,0x68,0x64,0x60,0x5b,0x57,0x50,0x48,0x3f,0x36,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x42,0x4b,0x55,0x5f,0x68,0x71,0x78,0x80,0x84,0x86,0x85,0x83,0x7d,0x77,0x6f,0x66,0x5d,0x54,0x4a,0x40,0x43,0x4d,0x58,0x63,0x6d,0x78,0x83,0x82,0x76,0x6c,
    0x61,0x56,0x4c,0x41,0x36,0x2c,0x21,0x45,0x4f,0x59,0x63,0x6c,0x75,0x7c,0x83,0x85,0x86,0x85,0x82,0x7c,0x74,0x6b,0x62,0x58,0x4e,0x44,0x40,0x4a,0x54,0x5e,0x68,0x71,
    0x7a,0x82,0x85,0x86,0x83,0x7e,0x83,0x81,0x75,0x6b,0x60,0x55,0x4b,0x40,0x1b,0x25,0x2f,0x39,0x43,0x4d,0x57,0x61,0x6b,0x74,0x7e,0x84,0x7e,0x74,0x6a,0x60,0x56,0x4c,
    0x42,0x38,0x2e,0x25,0x1b,0x21,0x2b,0x35,0x3f,0x4a,0x54,0x5e,0x68,0x72,0x7c,0x84,0x81,0x76,0x6e,0x79,0x83,0x84,0x7a,0x70,0x66,0x5c,0x52,0x48,0x3d,0x33,0x29,0x1f,
    0x43,0x4d,0x58,0x62,0x6d,0x77,0x80,0x84,0x7d,0x74,0x6c,0x75,0x7e,0x84,0x7e,0x76,0x6c,0x61,0x57,0x4c,0x42,0x41,0x4c,0x56,0x61,0x6c,0x76,0x82,0x84,0x84,0x84,0x84,
    0x84,0x84,0x84,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x49,0x54,0x5e,0x69,0x73,0x7e,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x35,0x3d,0x45,0x4b,0x4f,0x54,0x5e,0x69,0x72,
    0x78,0x78,0x76,0x6d,0x63,0x58,0x50,0x4d,0x47,0x40,0x39,0x30,0x27,0x35,0x3d,0x45,0x4b,0x50,0x54,0x58,0x5c,0x61,0x65,0x69,0x6d,0x72,0x75,0x79,0x72,0x68,0x5e,0x53,
    0x49,0x3e,0x44,0x4f,0x59,0x64,0x6e,0x77,0x77,0x73,0x6f,0x6b,0x67,0x62,0x5e,0x5a,0x56,0x52,0x4e,0x48,0x41,0x39,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,
    0x47,0x51,0x59,0x62,0x69,0x70,0x75,0x79,0x7b,0x7a,0x78,0x75,0x6f,0x68,0x60,0x57,0x4f,0x46,0x3c,0x42,0x4d,0x58,0x62,0x6c,0x76,0x79,0x79,0x74,0x6b,0x60,0x56,0x4b,
    0x41,0x36,0x2c,0x21,0x41,0x4b,0x54,0x5d,0x66,0x6d,0x74,0x78,0x7a,0x7b,0x7a,0x78,0x73,0x6d,0x65,0x5d,0x53,0x4a,0x40,0x3d,0x47,0x50,0x59,0x63,0x6b,0x72,0x78,0x7b,
    0x7b,0x79,0x75,0x79,0x79,0x73,0x6a,0x5f,0x55,0x4a,0x40,0x17,0x21,0x2b,0x35,0x3f,0x49,0x53,0x5d,0x67,0x70,0x78,0x79,0x78,0x70,0x66,0x5c,0x52,0x49,0x3f,0x35,0x2b,
    0x21,0x17,0x1e,0x28,0x32,0x3c,0x46,0x51,0x5b,0x65,0x6f,0x77,0x79,0x79,0x73,0x6b,0x75,0x79,0x79,0x76,0x6d,0x63,0x59,0x4f,0x44,0x3a,0x30,0x26,0x1c,0x42,0x4d,0x58,
    0x62,0x6c,0x76,0x79,0x79,0x77,0x6e,0x66,0x70,0x77,0x79,0x79,0x75,0x6b,0x61,0x57,0x4c,0x42,0x41,0x4b,0x56,0x60,0x6b,0x74,0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x79,
    0x79,0x73,0x69,0x5f,0x54,0x4a,0x49,0x53,0x5e,0x68,0x72,0x79,0x79,0x79,0x71,0x67,0x5d,0x52,0x48,0x3d,0x2e,0x36,0x3c,0x41,0x47,0x51,0x5b,0x63,0x6a,0x6d,0x6d,0x6c,
    0x67,0x5e,0x55,0x4b,0x43,0x3e,0x38,0x31,0x2a,0x21,0x2e,0x36,0x3c,0x42,0x46,0x4a,0x4e,0x53,0x57,0x5b,0x5f,0x64,0x68,0x6c,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x42,
    0x4c,0x56,0x60,0x68,0x6d,0x6e,0x6a,0x66,0x61,0x5d,0x59,0x55,0x50,0x4c,0x48,0x44,0x3f,0x39,0x32,0x2a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x39,0x42,0x4a,0x53,
    0x5a,0x61,0x67,0x6c,0x6f,0x70,0x70,0x6e,0x6b,0x66,0x60,0x59,0x51,0x49,0x40,0x37,0x40,0x4b,0x55,0x5e,0x67,0x6d,0x6e,0x6e,0x6c,0x65,0x5d,0x53,0x49,0x3f,0x34,0x2a,
    0x20,0x3d,0x46,0x4e,0x57,0x5e,0x65,0x6a,0x6e,0x70,0x70,0x70,0x6e,0x6a,0x64,0x5e,0x56,0x4e,0x45,0x3c,0x39,0x42,0x4b,0x54,0x5c,0x63,0x6a,0x6e,0x70,0x70,0x6f,0x6c,
    0x6e,0x6e,0x6c,0x65,0x5c,0x52,0x48,0x3e,0x13,0x1d,0x27,0x31,0x3b,0x45,0x4f,0x59,0x62,0x6a,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x4f,0x45,0x3b,0x31,0x27,0x1d,0x13,0x1b,
    0x25,0x2f,0x39,0x43,0x4d,0x57,0x60,0x68,0x6e,0x6e,0x6e,0x6b,0x66,0x6c,0x6e,0x6e,0x6d,0x67,0x5e,0x55,0x4b,0x41,0x37,0x2d,0x23,0x19,0x40,0x4b,0x55,0x5e,0x67,0x6d,
    0x6e,0x6e,0x6d,0x68,0x61,0x68,0x6e,0x6e,0x6e,0x6c,0x66,0x5d,0x54,0x4a,0x40,0x3f,0x49,0x53,0x5d,0x65,0x6c,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6b,0x64,
    0x5b,0x51,0x47,0x46,0x50,0x5a,0x63,0x6b,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x50,0x46,0x3b,0x27,0x2d,0x33,0x39,0x43,0x4c,0x54,0x5c,0x61,0x63,0x63,0x62,0x5e,0x58,0x50,
    0x47,0x3d,0x35,0x30,0x29,0x22,0x1b,0x27,0x2d,0x33,0x38,0x3c,0x41,0x45,0x49,0x4d,0x51,0x56,0x5a,0x5e,0x62,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x3e,0x48,0x51,0x59,
    0x5f,0x63,0x63,0x60,0x5c,0x57,0x53,0x4f,0x4b,0x47,0x42,0x3e,0x3a,0x36,0x30,0x2a,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x3c,0x44,0x4b,0x52,0x59,0x5e,
    0x62,0x64,0x65,0x65,0x64,0x61,0x5d,0x57,0x51,0x4a,0x42,0x3a,0x31,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x62,0x5d,0x56,0x4e,0x45,0x3b,0x31,0x27,0x1d,0x37,0x40,
    0x48,0x4f,0x56,0x5c,0x60,0x64,0x65,0x65,0x65,0x63,0x60,0x5b,0x56,0x4f,0x47,0x3f,0x36,0x33,0x3c,0x45,0x4d,0x54,0x5b,0x60,0x64,0x65,0x65,0x64,0x62,0x64,0x64,0x62,
    0x5d,0x56,0x4d,0x44,0x3a,0x10,0x1a,0x24,0x2e,0x37,0x41,0x4a,0x53,0x5b,0x61,0x63,0x64,0x63,0x61,0x5b,0x53,0x4a,0x41,0x37,0x2d,0x23,0x19,0x0f,0x18,0x22,0x2c,0x36,
    0x3f,0x49,0x51,0x59,0x60,0x63,0x64,0x64,0x62,0x5e,0x62,0x64,0x64,0x63,0x5e,0x58,0x50,0x47,0x3d,0x34,0x2a,0x20,0x15,0x3d,0x46,0x4f,0x58,0x5e,0x63,0x64,0x64,0x63,
    0x5f,0x59,0x60,0x63,0x64,0x64,0x62,0x5e,0x57,0x4f,0x46,0x3c,0x3b,0x45,0x4e,0x56,0x5d,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x62,0x5c,0x55,0x4c,0x43,
    0x42,0x4c,0x54,0x5c,0x61,0x64,0x64,0x63,0x61,0x5b,0x54,0x4b,0x42,0x38,0x1e,0x24,0x2b,0x34,0x3d,0x45,0x4d,0x53,0x57,0x58,0x58,0x58,0x55,0x4f,0x49,0x41,0x38,0x2f,
    0x27,0x21,0x1a,0x13,0x1e,0x25,0x2a,0x2e,0x33,0x37,0x3b,0x3f,0x43,0x48,0x4c,0x50,0x54,0x58,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,0x39,0x42,0x4a,0x51,0x56,0x59,0x59,
    0x56,0x52,0x4e,0x4a,0x45,0x41,0x3d,0x39,0x34,0x30,0x2c,0x27,0x22,0x1b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x34,0x3c,0x43,0x4a,0x4f,0x54,0x58,0x5a,0x5b,
    0x5b,0x5a,0x57,0x53,0x4f,0x48,0x42,0x3b,0x33,0x2b,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,0x3f,0x36,0x2d,0x23,0x1a,0x31,0x39,0x40,0x47,0x4d,
    0x53,0x56,0x59,0x5b,0x5b,0x5b,0x59,0x56,0x52,0x4d,0x47,0x40,0x38,0x30,0x2e,0x36,0x3e,0x45,0x4c,0x52,0x56,0x59,0x5b,0x5b,0x5a,0x58,0x59,0x59,0x58,0x54,0x4e,0x47,
    0x3e,0x36,0x0c,0x16,0x20,0x29,0x32,0x3b,0x44,0x4c,0x52,0x57,0x59,0x59,0x59,0x57,0x52,0x4c,0x44,0x3b,0x32,0x29,0x1f,0x16,0x0c,0x14,0x1e,0x27,0x31,0x3a,0x43,0x4a,
    0x51,0x56,0x59,0x59,0x59,0x57,0x55,0x58,0x59,0x59,0x58,0x55,0x50,0x49,0x41,0x38,0x2f,0x26,0x1c,0x12,0x38,0x40,0x49,0x50,0x55,0x58,0x59,0x59,0x59,0x56,0x51,0x56,
    0x59,0x59,0x59,0x58,0x55,0x4f,0x48,0x40,0x37,0x36,0x3f,0x47,0x4e,0x54,0x58,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x53,0x4d,0x46,0x3e,0x3d,0x45,0x4d,
    0x53,0x57,0x59,0x59,0x59,0x57,0x53,0x4c,0x45,0x3c,0x33,0x16,0x1d,0x26,0x2e,0x36,0x3e,0x44,0x49,0x4c,0x4d,0x4d,0x4d,0x4b,0x46,0x40,0x3a,0x32,0x29,0x20,0x18,0x12,
    0x0b,0x16,0x1b,0x20,0x25,0x29,0x2d,0x31,0x35,0x3a,0x3e,0x42,0x46,0x4a,0x4d,0x4e,0x4d,0x4a,0x44,0x3e,0x36,0x2e,0x33,0x3b,0x42,0x48,0x4c,0x4e,0x4e,0x4c,0x48,0x44,
    0x40,0x3c,0x37,0x33,0x2f,0x2b,0x27,0x22,0x1e,0x19,0x13,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x2d,0x34,0x3b,0x41,0x46,0x4a,0x4d,0x50,0x50,0x50,0x4f,0x4d,
    0x49,0x45,0x40,0x3a,0x33,0x2c,0x24,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x46,0x40,0x38,0x30,0x28,0x1f,0x15,0x2a,0x31,0x38,0x3f,0x44,0x49,0x4c,0x4f,
    0x50,0x50,0x50,0x4f,0x4c,0x49,0x44,0x3e,0x38,0x31,0x29,0x27,0x2f,0x36,0x3d,0x43,0x48,0x4c,0x4f,0x50,0x50,0x50,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3f,0x38,0x2f,0x08,
    0x11,0x1b,0x24,0x2d,0x35,0x3d,0x43,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,0x49,0x43,0x3d,0x35,0x2d,0x24,0x1b,0x11,0x08,0x10,0x19,0x22,0x2b,0x34,0x3b,0x42,0x48,0x4c,0x4e,
    0x4e,0x4e,0x4d,0x4b,0x4e,0x4e,0x4e,0x4e,0x4b,0x47,0x41,0x3a,0x32,0x29,0x20,0x17,0x0e,0x32,0x3a,0x41,0x47,0x4b,0x4e,0x4e,0x4e,0x4e,0x4c,0x48,0x4c,0x4e,0x4e,0x4e,
    0x4e,0x4b,0x46,0x40,0x39,0x31,0x30,0x38,0x40,0x46,0x4b,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x36,0x3e,0x44,0x4a,0x4d,0x4e,
    0x4e,0x4e,0x4d,0x49,0x44,0x3d,0x36,0x2d,0x0e,0x17,0x1f,0x27,0x2f,0x35,0x3b,0x3f,0x42,0x43,0x43,0x42,0x40,0x3d,0x38,0x32,0x2a,0x23,0x1a,0x12,0x09,0x03,0x0d,0x12,
    0x17,0x1b,0x1f,0x23,0x27,0x2c,0x30,0x34,0x38,0x3c,0x40,0x43,0x44,0x43,0x40,0x3b,0x36,0x2f,0x27,0x2c,0x33,0x39,0x3e,0x42,0x43,0x44,0x42,0x3e,0x3a,0x36,0x32,0x2e,
    0x29,0x25,0x21,0x1d,0x19,0x14,0x10,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x25,0x2c,0x32,0x38,0x3c,0x40,0x43,0x45,0x45,0x45,0x44,0x43,0x3f,0x3b,0x37,
    0x31,0x2b,0x24,0x1d,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x41,0x3c,0x37,0x31,0x29,0x21,0x19,0x10,0x22,0x2a,0x30,0x36,0x3b,0x3f,0x42,0x44,0x45,0x45,0x45,
    0x44,0x42,0x3f,0x3a,0x35,0x2f,0x29,0x22,0x20,0x27,0x2e,0x35,0x3a,0x3f,0x42,0x44,0x45,0x45,0x45,0x43,0x44,0x44,0x43,0x40,0x3c,0x37,0x30,0x29,0x03,0x0c,0x15,0x1e,
    0x26,0x2e,0x34,0x3a,0x3f,0x42,0x44,0x44,0x44,0x42,0x3f,0x3a,0x34,0x2e,0x26,0x1e,0x15,0x0c,0x03,0x0b,0x14,0x1c,0x25,0x2c,0x33,0x39,0x3e,0x42,0x44,0x44,0x44,0x43,
    0x41,0x43,0x44,0x44,0x43,0x41,0x3d,0x38,0x32,0x2a,0x23,0x1a,0x12,0x09,0x2a,0x32,0x38,0x3d,0x41,0x43,0x44,0x44,0x43,0x42,0x3e,0x42,0x44,0x44,0x44,0x43,0x41,0x3d,
    0x38,0x31,0x2a,0x29,0x31,0x37,0x3c,0x41,0x43,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,0x2f,0x36,0x3b,0x40,0x43,0x44,0x44,0x44,0x42,
    0x3f,0x3b,0x35,0x2e,0x27,0x08,0x10,0x18,0x20,0x26,0x2c,0x31,0x35,0x37,0x38,0x38,0x38,0x36,0x33,0x2f,0x29,0x23,0x1b,0x14,0x0c,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x18,0x21,0x29,0x31,0x38,0x3e,0x42,0x45,0x46,0x46,0x46,0x43,0x3f,0x3a,0x33,0x2c,0x24,0x1b,
    0x25,0x2c,0x31,0x36,0x39,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3a,0x37,0x33,0x2e,0x28,0x21,0x2d,0x34,0x3a,0x3f,0x42,0x44,0x44,0x44,0x44,0x44,0x44,
    0x43,0x40,0x3b,0x36,0x2f,0x27,0x26,0x2e,0x34,0x3a,0x3f,0x42,0x44,0x44,0x44,0x43,0x40,0x3c,0x36,0x2f,0x23,0x29,0x2f,0x36,0x3c,0x41,0x45,0x46,0x46,0x46,0x44,0x40,
    0x3b,0x35,0x2e,0x28,0x21,0x2e,0x35,0x3a,0x3f,0x42,0x43,0x43,0x43,0x42,0x3f,0x3a,0x34,0x2e,0x26,0x1d,0x25,0x2b,0x31,0x36,0x3b,0x3e,0x40,0x42,0x42,0x41,0x3f,0x3c,
    0x3e,0x41,0x42,0x41,0x3f,0x3b,0x36,0x2f,0x28,0x2e,0x35,0x3b,0x40,0x43,0x45,0x45,0x45,0x44,0x42,0x3e,0x39,0x32,0x2b,0x23,0x2e,0x35,0x3a,0x3f,0x42,0x43,0x43,0x43,
    0x42,0x3f,0x3a,0x34,0x2e,0x26,0x24,0x2b,0x32,0x37,0x3c,0x3e,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3e,0x3b,0x37,0x31,0x2b,0x2b,0x32,0x37,0x3c,0x3f,0x40,0x40,0x40,0x40,
    0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x3e,0x3b,0x36,0x31,0x2a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x1e,0x27,0x30,0x38,0x40,0x46,0x4c,0x50,0x51,0x51,0x50,0x4d,0x48,0x42,0x3b,0x33,0x2a,0x21,0x2d,0x34,0x3a,
    0x40,0x43,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x44,0x41,0x3d,0x37,0x30,0x28,0x34,0x3c,0x43,0x48,0x4c,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0x4d,0x4a,0x44,
    0x3e,0x36,0x2e,0x2d,0x35,0x3d,0x43,0x49,0x4d,0x4e,0x4e,0x4e,0x4d,0x4a,0x45,0x3e,0x37,0x2b,0x32,0x38,0x3e,0x45,0x4b,0x4f,0x51,0x51,0x51,0x4e,0x4a,0x44,0x3d,0x36,
    0x30,0x29,0x36,0x3d,0x44,0x49,0x4c,0x4d,0x4d,0x4d,0x4c,0x48,0x43,0x3d,0x35,0x2d,0x25,0x2c,0x34,0x3a,0x40,0x45,0x48,0x4b,0x4c,0x4c,0x4b,0x49,0x46,0x48,0x4b,0x4d,
    0x4c,0x49,0x44,0x3e,0x37,0x2f,0x36,0x3d,0x44,0x4a,0x4d,0x4f,0x4f,0x4f,0x4f,0x4c,0x47,0x41,0x3a,0x32,0x2a,0x36,0x3d,0x44,0x49,0x4c,0x4d,0x4d,0x4d,0x4c,0x48,0x43,
    0x3d,0x35,0x2d,0x2b,0x33,0x3a,0x41,0x45,0x49,0x4a,0x4a,0x4a,0x4a,0x4a,0x4a,0x48,0x45,0x40,0x3a,0x33,0x33,0x3a,0x40,0x46,0x49,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,
    0x4b,0x4b,0x4b,0x4b,0x4b,0x49,0x45,0x3f,0x39,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x19,0x22,0x2c,0x35,0x3e,0x47,0x4f,0x55,0x5a,0x5c,0x5c,0x5b,0x57,0x51,0x4a,0x42,0x39,0x2f,0x26,0x34,0x3c,0x43,0x49,0x4d,0x50,
    0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x4f,0x4b,0x46,0x3f,0x37,0x2f,0x3b,0x43,0x4b,0x52,0x56,0x59,0x59,0x59,0x59,0x59,0x59,0x57,0x53,0x4d,0x45,0x3d,0x34,
    0x32,0x3b,0x44,0x4c,0x52,0x57,0x59,0x59,0x59,0x57,0x53,0x4d,0x46,0x3e,0x32,0x3a,0x41,0x46,0x4d,0x54,0x59,0x5b,0x5c,0x5b,0x58,0x53,0x4c,0x45,0x3f,0x38,0x31,0x3c,
    0x45,0x4c,0x52,0x56,0x58,0x58,0x58,0x56,0x52,0x4c,0x44,0x3c,0x33,0x2c,0x34,0x3b,0x43,0x49,0x4e,0x52,0x55,0x57,0x57,0x56,0x54,0x50,0x51,0x55,0x57,0x56,0x53,0x4d,
    0x46,0x3e,0x35,0x3c,0x45,0x4c,0x53,0x58,0x5a,0x5a,0x5a,0x59,0x56,0x50,0x49,0x41,0x39,0x2f,0x3c,0x45,0x4c,0x52,0x56,0x58,0x58,0x58,0x56,0x52,0x4c,0x44,0x3c,0x33,
    0x32,0x3a,0x42,0x49,0x4f,0x53,0x54,0x54,0x54,0x54,0x54,0x54,0x53,0x4f,0x49,0x42,0x3a,0x39,0x42,0x49,0x4f,0x53,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,
    0x55,0x55,0x53,0x4e,0x48,0x40,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x1d,0x27,0x30,0x3a,0x44,0x4d,0x56,0x5e,0x64,0x66,0x66,0x65,0x60,0x59,0x50,0x47,0x3e,0x34,0x2a,0x3a,0x43,0x4b,0x52,0x57,0x5a,0x5b,0x5b,0x5b,
    0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x59,0x54,0x4e,0x46,0x3e,0x35,0x40,0x49,0x52,0x5a,0x60,0x63,0x64,0x64,0x63,0x64,0x64,0x61,0x5c,0x54,0x4c,0x42,0x39,0x37,0x41,0x4a,
    0x53,0x5b,0x61,0x63,0x64,0x64,0x62,0x5c,0x55,0x4c,0x43,0x39,0x41,0x49,0x50,0x54,0x5c,0x62,0x66,0x66,0x66,0x62,0x5b,0x53,0x4e,0x47,0x40,0x37,0x42,0x4b,0x54,0x5b,
    0x60,0x63,0x63,0x63,0x60,0x5a,0x53,0x4a,0x41,0x38,0x32,0x3a,0x43,0x4a,0x51,0x57,0x5c,0x60,0x61,0x62,0x60,0x5e,0x5a,0x5a,0x5f,0x62,0x60,0x5c,0x55,0x4d,0x44,0x3a,
    0x41,0x4b,0x53,0x5b,0x61,0x64,0x64,0x64,0x64,0x5f,0x58,0x50,0x47,0x3e,0x34,0x42,0x4b,0x54,0x5b,0x60,0x63,0x63,0x63,0x60,0x5a,0x53,0x4a,0x41,0x38,0x37,0x40,0x49,
    0x51,0x58,0x5d,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5d,0x58,0x51,0x48,0x40,0x3f,0x48,0x51,0x58,0x5d,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x5d,
    0x57,0x4f,0x47,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x21,0x2b,0x35,0x3e,0x48,0x52,0x5b,0x65,0x6d,0x71,0x71,0x6f,0x68,0x5f,0x55,0x4c,0x42,0x38,0x2f,0x3f,0x49,0x52,0x5a,0x61,0x65,0x65,0x65,0x65,0x65,0x65,0x65,
    0x65,0x65,0x65,0x63,0x5d,0x55,0x4d,0x43,0x39,0x44,0x4e,0x58,0x61,0x69,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6b,0x63,0x5a,0x50,0x46,0x3c,0x3a,0x45,0x4f,0x59,0x62,0x6a,
    0x6e,0x6e,0x6e,0x6b,0x64,0x5b,0x51,0x47,0x3e,0x48,0x50,0x58,0x5e,0x62,0x6b,0x70,0x71,0x70,0x6a,0x61,0x5d,0x56,0x4e,0x46,0x3c,0x46,0x50,0x5a,0x63,0x6a,0x6d,0x6d,
    0x6d,0x69,0x62,0x59,0x4f,0x45,0x3b,0x36,0x40,0x49,0x52,0x59,0x60,0x66,0x6a,0x6c,0x6c,0x6b,0x68,0x64,0x62,0x69,0x6c,0x6a,0x64,0x5c,0x52,0x48,0x3e,0x45,0x4f,0x59,
    0x62,0x6a,0x6f,0x6f,0x6f,0x6e,0x67,0x5f,0x55,0x4c,0x42,0x39,0x46,0x50,0x5a,0x63,0x6a,0x6d,0x6d,0x6d,0x69,0x62,0x59,0x4f,0x45,0x3b,0x3b,0x45,0x4f,0x58,0x60,0x67,
    0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x66,0x60,0x57,0x4e,0x44,0x44,0x4d,0x57,0x60,0x67,0x6a,0x6b,0x6b,0x6b,0x6b,0x6b,0x6b,0x6b,0x6b,0x6b,0x6b,0x6a,0x66,0x5e,0x55,0x4c,
    0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x2f,
    0x39,0x43,0x4c,0x56,0x60,0x6a,0x73,0x7b,0x7b,0x77,0x6d,0x63,0x5a,0x50,0x46,0x3c,0x33,0x43,0x4d,0x57,0x60,0x69,0x6f,0x70,0x70,0x70,0x70,0x70,0x70,0x70,0x70,0x70,
    0x6c,0x64,0x5b,0x51,0x47,0x3d,0x46,0x51,0x5b,0x65,0x70,0x78,0x79,0x79,0x78,0x79,0x79,0x72,0x68,0x5e,0x53,0x49,0x3e,0x3c,0x47,0x51,0x5c,0x66,0x70,0x78,0x79,0x79,
    0x73,0x69,0x5f,0x54,0x4a,0x43,0x4d,0x56,0x5f,0x67,0x6c,0x70,0x7a,0x7b,0x79,0x6f,0x6b,0x65,0x5d,0x54,0x4b,0x41,0x49,0x53,0x5d,0x68,0x71,0x78,0x78,0x78,0x71,0x67,
    0x5d,0x52,0x48,0x3d,0x3a,0x44,0x4e,0x58,0x61,0x68,0x6f,0x74,0x76,0x77,0x75,0x72,0x6e,0x6b,0x71,0x77,0x73,0x6a,0x60,0x55,0x4b,0x41,0x47,0x52,0x5c,0x67,0x71,0x79,
    0x7a,0x7a,0x76,0x6d,0x64,0x5a,0x50,0x47,0x3d,0x49,0x53,0x5d,0x68,0x71,0x78,0x78,0x78,0x71,0x67,0x5d,0x52,0x48,0x3d,0x3d,0x48,0x52,0x5d,0x66,0x6f,0x74,0x74,0x74,
    0x74,0x74,0x74,0x6f,0x66,0x5c,0x51,0x47,0x46,0x51,0x5b,0x65,0x6f,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x74,0x6d,0x64,0x59,0x4f,0x45,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2a,0x34,0x3d,0x47,0x51,
    0x5a,0x64,0x6e,0x77,0x82,0x85,0x7b,0x71,0x68,0x5e,0x54,0x4a,0x41,0x37,0x44,0x4f,0x5a,0x64,0x6e,0x78,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7a,0x73,0x68,0x5e,
    0x53,0x49,0x3e,0x46,0x51,0x5c,0x66,0x71,0x7b,0x84,0x80,0x7c,0x84,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x3d,0x47,0x52,0x5c,0x67,0x72,0x7c,0x84,0x80,0x74,0x6a,0x5f,
    0x54,0x4a,0x45,0x50,0x5a,0x64,0x6e,0x76,0x75,0x7b,0x84,0x79,0x76,0x74,0x6c,0x62,0x58,0x4e,0x44,0x49,0x54,0x5e,0x69,0x73,0x7e,0x83,0x7d,0x73,0x68,0x5d,0x53,0x48,
    0x3d,0x3c,0x47,0x51,0x5c,0x66,0x70,0x77,0x7d,0x82,0x82,0x80,0x7b,0x78,0x75,0x79,0x80,0x76,0x6c,0x61,0x56,0x4c,0x41,0x47,0x52,0x5c,0x67,0x71,0x79,0x82,0x85,0x7b,
    0x72,0x68,0x5f,0x55,0x4b,0x41,0x49,0x54,0x5e,0x69,0x73,0x7e,0x83,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3e,0x49,0x54,0x5e,0x69,0x73,0x7e,0x80,0x80,0x80,0x80,0x7d,
    0x73,0x68,0x5d,0x53,0x48,0x47,0x52,0x5c,0x67,0x72,0x7c,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x7b,0x70,0x65,0x5b,0x50,0x45,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x38,0x42,0x4b,0x55,0x5f,0x68,0x72,
    0x7c,0x86,0x83,0x80,0x75,0x6c,0x62,0x58,0x4f,0x45,0x3b,0x45,0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x86,0x86,0x86,0x86,0x86,0x86,0x86,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,
    0x46,0x51,0x5c,0x66,0x71,0x7b,0x87,0x80,0x7c,0x88,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x3d,0x47,0x52,0x5c,0x67,0x72,0x7c,0x88,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x48,
    0x53,0x5d,0x67,0x71,0x7b,0x80,0x7b,0x83,0x7c,0x80,0x7a,0x70,0x66,0x5b,0x51,0x47,0x49,0x54,0x5e,0x69,0x73,0x7e,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3d,0x47,
    0x52,0x5c,0x67,0x72,0x7c,0x87,0x84,0x84,0x87,0x86,0x82,0x81,0x83,0x82,0x76,0x6c,0x61,0x56,0x4c,0x41,0x45,0x4f,0x59,0x62,0x6a,0x72,0x7b,0x83,0x80,0x76,0x6d,0x63,
    0x59,0x4e,0x44,0x49,0x54,0x5e,0x69,0x73,0x7e,0x84,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3e,0x49,0x54,0x5e,0x69,0x73,0x7e,0x85,0x85,0x85,0x85,0x7d,0x73,0x68,0x5d,
    0x53,0x48,0x47,0x52,0x5c,0x67,0x72,0x7c,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x7b,0x70,0x65,0x5b,0x50,0x45,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x3c,0x46,0x50,0x59,0x63,0x6d,0x77,0x81,0x82,0x80,
    0x84,0x7a,0x70,0x66,0x5d,0x53,0x49,0x3f,0x45,0x4f,0x5a,0x64,0x6f,0x79,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x7d,0x73,0x69,0x5e,0x54,0x49,0x3e,0x46,0x51,0x5b,
    0x66,0x71,0x7b,0x86,0x80,0x7b,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x3d,0x47,0x52,0x5c,0x67,0x72,0x7c,0x87,0x80,0x74,0x6a,0x5f,0x54,0x4a,0x49,0x54,0x5e,0x69,
    0x73,0x7e,0x81,0x83,0x85,0x83,0x81,0x7c,0x72,0x67,0x5c,0x52,0x47,0x49,0x53,0x5e,0x68,0x72,0x79,0x80,0x7d,0x73,0x68,0x5d,0x53,0x48,0x3d,0x3d,0x47,0x52,0x5c,0x67,
    0x72,0x7c,0x7e,0x79,0x79,0x7c,0x80,0x84,0x85,0x83,0x7c,0x75,0x6b,0x61,0x56,0x4b,0x41,0x41,0x4b,0x53,0x5c,0x64,0x6c,0x74,0x7c,0x7e,0x7a,0x6f,0x64,0x5a,0x4f,0x45,
    0x49,0x53,0x5e,0x68,0x72,0x79,0x79,0x79,0x71,0x67,0x5d,0x52,0x48,0x3d,0x3e,0x49,0x53,0x5e,0x68,0x72,0x7a,0x7a,0x7a,0x7a,0x7a,0x79,0x72,0x67,0x5d,0x52,0x48,0x46,
    0x51,0x5b,0x65,0x6e,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x73,0x6d,0x63,0x59,0x4f,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0x41,0x4a,0x54,0x5e,0x67,0x71,0x7b,0x85,0x7e,0x7b,0x85,0x7e,0x74,
    0x6b,0x61,0x57,0x4d,0x44,0x43,0x4e,0x58,0x62,0x6b,0x72,0x73,0x73,0x73,0x73,0x73,0x73,0x73,0x73,0x73,0x6e,0x66,0x5c,0x52,0x48,0x3d,0x45,0x4f,0x5a,0x64,0x6f,0x79,
    0x84,0x7d,0x7a,0x85,0x7c,0x72,0x67,0x5d,0x52,0x48,0x3d,0x3b,0x46,0x50,0x5b,0x65,0x70,0x7a,0x85,0x7d,0x73,0x68,0x5e,0x53,0x49,0x48,0x52,0x5c,0x66,0x6f,0x74,0x79,
    0x82,0x80,0x81,0x78,0x74,0x6d,0x64,0x5b,0x50,0x46,0x4a,0x54,0x5f,0x69,0x74,0x7c,0x83,0x7a,0x70,0x66,0x5c,0x51,0x47,0x3c,0x3c,0x47,0x52,0x5c,0x67,0x71,0x79,0x76,
    0x70,0x6f,0x72,0x76,0x79,0x7a,0x78,0x74,0x6e,0x66,0x5d,0x54,0x49,0x3f,0x3c,0x45,0x4d,0x55,0x5d,0x65,0x6d,0x73,0x73,0x72,0x6b,0x62,0x58,0x4e,0x43,0x46,0x50,0x5a,
    0x63,0x6b,0x6e,0x6e,0x6e,0x6a,0x62,0x59,0x50,0x46,0x3b,0x3c,0x47,0x51,0x5b,0x64,0x6b,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6b,0x63,0x5a,0x50,0x46,0x43,0x4d,0x56,0x5f,
    0x66,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x6a,0x69,0x65,0x5e,0x55,0x4b,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3b,0x45,0x4f,0x58,0x62,0x6c,0x75,0x80,0x84,0x7a,0x77,0x81,0x83,0x79,0x6f,0x65,0x5b,
    0x52,0x48,0x44,0x4f,0x5a,0x64,0x6f,0x79,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x73,0x69,0x5e,0x53,0x49,0x3e,0x43,0x4e,0x58,0x63,0x6d,0x77,0x81,0x7c,0x78,
    0x81,0x7b,0x70,0x66,0x5b,0x51,0x46,0x3c,0x3a,0x44,0x4f,0x59,0x63,0x6e,0x78,0x81,0x7b,0x71,0x67,0x5c,0x52,0x47,0x45,0x4e,0x57,0x61,0x6c,0x76,0x81,0x82,0x7a,0x83,
    0x80,0x75,0x6b,0x60,0x56,0x4d,0x43,0x49,0x54,0x5e,0x69,0x72,0x7b,0x7b,0x74,0x6c,0x62,0x59,0x4f,0x45,0x3a,0x3b,0x45,0x4f,0x59,0x62,0x6a,0x6f,0x6d,0x67,0x65,0x68,
    0x6c,0x6e,0x6f,0x6e,0x6a,0x65,0x5f,0x57,0x4f,0x46,0x3c,0x36,0x3e,0x46,0x4e,0x56,0x5e,0x65,0x69,0x69,0x68,0x64,0x5c,0x54,0x4a,0x41,0x42,0x4c,0x54,0x5c,0x61,0x64,
    0x64,0x63,0x61,0x5b,0x54,0x4b,0x42,0x38,0x39,0x43,0x4c,0x55,0x5c,0x62,0x64,0x64,0x64,0x64,0x64,0x64,0x62,0x5c,0x54,0x4b,0x42,0x3f,0x48,0x50,0x57,0x5c,0x5f,0x5f,
    0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0x5c,0x56,0x4f,0x46,0x3d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x48,0x53,0x5d,0x66,0x70,0x7a,0x84,0x81,0x76,0x73,0x7c,0x87,0x7c,0x73,0x69,0x60,0x56,0x4b,0x45,
    0x4f,0x5a,0x64,0x6f,0x7a,0x85,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x7e,0x73,0x69,0x5e,0x54,0x49,0x3e,0x41,0x4c,0x56,0x60,0x6a,0x72,0x75,0x75,0x73,0x75,0x74,0x6d,
    0x63,0x59,0x4f,0x44,0x3a,0x38,0x42,0x4d,0x57,0x61,0x6b,0x73,0x75,0x74,0x6d,0x64,0x5a,0x50,0x45,0x40,0x4b,0x55,0x5f,0x69,0x72,0x79,0x7b,0x74,0x7c,0x77,0x71,0x68,
    0x5f,0x54,0x4a,0x3f,0x47,0x51,0x5b,0x63,0x6c,0x73,0x72,0x6d,0x65,0x5d,0x54,0x4b,0x41,0x37,0x37,0x41,0x4b,0x53,0x5b,0x61,0x64,0x63,0x5f,0x5b,0x5e,0x62,0x64,0x64,
    0x64,0x60,0x5c,0x56,0x50,0x48,0x40,0x37,0x2f,0x37,0x3f,0x47,0x4f,0x56,0x5b,0x5e,0x5e,0x5e,0x5b,0x55,0x4d,0x45,0x3c,0x3d,0x45,0x4d,0x53,0x57,0x59,0x59,0x59,0x57,
    0x53,0x4c,0x45,0x3c,0x33,0x34,0x3d,0x46,0x4d,0x54,0x58,0x5a,0x5a,0x5a,0x5a,0x5a,0x5a,0x58,0x53,0x4d,0x45,0x3d,0x39,0x41,0x48,0x4e,0x52,0x54,0x54,0x54,0x54,0x54,
    0x54,0x54,0x54,0x54,0x54,0x54,0x54,0x52,0x4d,0x47,0x40,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x4a,0x54,0x5f,0x6a,0x74,0x7e,0x83,0x7c,0x72,0x6f,0x79,0x83,0x82,0x77,0x6d,0x62,0x58,0x4d,0x45,0x4f,0x5a,0x64,
    0x6f,0x79,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x7c,0x73,0x69,0x5e,0x54,0x49,0x3e,0x3f,0x49,0x52,0x5b,0x63,0x69,0x6b,0x6a,0x69,0x6b,0x6a,0x65,0x5e,0x55,0x4b,
    0x42,0x38,0x35,0x3f,0x49,0x53,0x5c,0x64,0x69,0x6b,0x6a,0x66,0x5e,0x56,0x4c,0x42,0x3e,0x48,0x51,0x5b,0x63,0x6a,0x70,0x71,0x6d,0x72,0x6f,0x69,0x62,0x5a,0x51,0x47,
    0x3d,0x43,0x4c,0x55,0x5d,0x64,0x68,0x68,0x64,0x5e,0x56,0x4e,0x46,0x3c,0x33,0x33,0x3c,0x45,0x4c,0x53,0x58,0x5a,0x59,0x55,0x51,0x54,0x57,0x59,0x5a,0x59,0x56,0x53,
    0x4e,0x48,0x41,0x39,0x31,0x28,0x30,0x38,0x40,0x47,0x4d,0x51,0x53,0x54,0x53,0x51,0x4c,0x46,0x3e,0x36,0x36,0x3e,0x44,0x4a,0x4d,0x4e,0x4e,0x4e,0x4d,0x49,0x44,0x3d,
    0x36,0x2d,0x2f,0x37,0x3e,0x45,0x4a,0x4e,0x4f,0x4f,0x4f,0x4f,0x4f,0x4f,0x4e,0x4a,0x45,0x3e,0x36,0x32,0x39,0x40,0x45,0x48,0x4a,0x4a,0x4a,0x4a,0x4a,0x4a,0x4a,0x4a,
    0x4a,0x4a,0x4a,0x4a,0x48,0x44,0x3f,0x38,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x49,0x54,0x5e,0x69,0x72,0x78,0x78,0x77,0x6e,0x6a,0x74,0x78,0x78,0x75,0x6c,0x62,0x57,0x4d,0x43,0x4d,0x58,0x61,0x6a,0x71,0x72,
    0x72,0x72,0x72,0x72,0x72,0x72,0x72,0x72,0x6d,0x65,0x5c,0x52,0x47,0x3d,0x3a,0x44,0x4d,0x54,0x5b,0x5f,0x60,0x60,0x5f,0x60,0x60,0x5c,0x56,0x4f,0x46,0x3d,0x34,0x32,
    0x3b,0x45,0x4d,0x55,0x5b,0x5f,0x60,0x60,0x5d,0x57,0x4f,0x47,0x3e,0x3a,0x43,0x4c,0x54,0x5b,0x61,0x66,0x67,0x64,0x67,0x65,0x60,0x5a,0x53,0x4b,0x42,0x39,0x3d,0x46,
    0x4e,0x55,0x5b,0x5e,0x5e,0x5a,0x55,0x4f,0x47,0x3f,0x37,0x2e,0x2d,0x36,0x3d,0x44,0x4a,0x4d,0x4f,0x4f,0x4c,0x47,0x4a,0x4d,0x4f,0x4f,0x4f,0x4c,0x49,0x44,0x3f,0x39,
    0x32,0x2a,0x21,0x29,0x31,0x38,0x3e,0x44,0x47,0x49,0x49,0x49,0x47,0x43,0x3d,0x37,0x2f,0x2f,0x36,0x3b,0x40,0x43,0x44,0x44,0x44,0x42,0x3f,0x3b,0x35,0x2e,0x27,0x28,
    0x2f,0x36,0x3c,0x41,0x43,0x45,0x45,0x45,0x45,0x45,0x45,0x43,0x40,0x3c,0x36,0x2f,0x2a,0x31,0x36,0x3b,0x3e,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,
    0x3f,0x3d,0x3a,0x36,0x30,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x3d,0x47,0x51,0x5b,0x63,0x6a,0x6d,0x6d,0x6d,0x68,0x65,0x6b,0x6d,0x6d,0x6c,0x66,0x5e,0x54,0x4a,0x40,0x4a,0x53,0x5b,0x62,0x67,0x67,0x67,0x67,0x67,
    0x67,0x67,0x67,0x67,0x67,0x64,0x5e,0x56,0x4d,0x44,0x3a,0x35,0x3e,0x45,0x4c,0x51,0x55,0x55,0x55,0x55,0x55,0x55,0x52,0x4e,0x47,0x40,0x37,0x2f,0x2d,0x36,0x3e,0x46,
    0x4d,0x52,0x55,0x55,0x55,0x53,0x4e,0x48,0x40,0x38,0x34,0x3d,0x45,0x4c,0x52,0x58,0x5c,0x5c,0x5b,0x5c,0x5b,0x57,0x51,0x4b,0x44,0x3c,0x34,0x37,0x3f,0x46,0x4d,0x51,
    0x53,0x53,0x50,0x4c,0x46,0x40,0x38,0x30,0x28,0x27,0x2e,0x35,0x3b,0x40,0x43,0x45,0x44,0x42,0x3e,0x40,0x43,0x44,0x45,0x44,0x42,0x3f,0x3b,0x36,0x30,0x2a,0x23,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x39,0x43,0x4c,0x54,0x5c,0x61,0x63,0x63,0x62,0x5f,0x5d,0x61,0x63,0x63,0x62,0x5e,0x57,0x4f,0x46,0x3b,0x44,0x4c,0x53,0x59,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,0x5c,
    0x5c,0x5c,0x5b,0x56,0x4f,0x48,0x3f,0x36,0x2f,0x36,0x3d,0x43,0x48,0x4a,0x4b,0x4b,0x4a,0x4b,0x4a,0x48,0x44,0x3f,0x38,0x31,0x29,0x27,0x2f,0x37,0x3e,0x44,0x48,0x4a,
    0x4b,0x4b,0x49,0x45,0x3f,0x39,0x31,0x2e,0x36,0x3d,0x43,0x4a,0x4e,0x51,0x52,0x50,0x52,0x51,0x4d,0x48,0x43,0x3c,0x35,0x2d,0x30,0x37,0x3e,0x43,0x47,0x49,0x49,0x46,
    0x42,0x3d,0x37,0x31,0x29,0x21,0x1f,0x26,0x2c,0x32,0x36,0x39,0x3a,0x39,0x37,0x34,0x36,0x38,0x3a,0x3a,0x3a,0x38,0x35,0x31,0x2d,0x27,0x21,0x1b,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x34,0x3d,0x45,
    0x4d,0x53,0x57,0x58,0x58,0x58,0x55,0x53,0x57,0x58,0x58,0x57,0x54,0x4f,0x48,0x40,0x35,0x3d,0x45,0x4b,0x4f,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x50,
    0x4d,0x47,0x40,0x39,0x30,0x27,0x2e,0x35,0x3a,0x3d,0x40,0x40,0x40,0x40,0x40,0x40,0x3e,0x3b,0x36,0x30,0x29,0x22,0x20,0x28,0x2f,0x35,0x3a,0x3e,0x40,0x40,0x40,0x3e,
    0x3b,0x36,0x31,0x2a,0x27,0x2e,0x35,0x3b,0x40,0x44,0x47,0x47,0x46,0x47,0x46,0x44,0x3f,0x3a,0x34,0x2d,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x36,0x3e,0x44,0x49,0x4c,
    0x4d,0x4d,0x4d,0x4b,0x4a,0x4d,0x4d,0x4d,0x4d,0x4a,0x46,0x40,0x39,0x2e,0x36,0x3c,0x41,0x45,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x47,0x46,0x43,0x3e,0x38,
    0x31,0x2a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x2f,0x35,0x3b,0x3f,0x42,0x43,0x43,0x43,
    0x41,0x40,0x42,0x43,0x43,0x42,0x40,0x3c,0x37,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const mgp_f32 _font_orig_size = 18.0;
static const mgp_f32 _font_line_height = 32.0;
static const _font_glyph_data _font_glyphs_data[] = {
    { (mgp_rectf){ 0.0000, 0.0000, 0.0000, 0.0000 }, -0.3333, 0.0000, 0.8333 },
    { (mgp_rectf){ 0.8458, 0.5357, 0.0553, 0.1276 }, -0.2222, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.1581, 0.9031, 0.0672, 0.0867 }, -0.2778, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.2530, 0.6633, 0.0909, 0.1276 }, -0.3333, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.6364, 0.0000, 0.0830, 0.1429 }, -0.2778, -0.1667, 1.1111 },
    { (mgp_rectf){ 0.1502, 0.6633, 0.1028, 0.1276 }, -0.2778, -0.1111, 1.4444 },
    { (mgp_rectf){ 0.3439, 0.6633, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.2253, 0.9031, 0.0553, 0.0867 }, -0.3333, -0.1111, 0.7222 },
    { (mgp_rectf){ 0.0632, 0.0000, 0.0672, 0.1480 }, -0.2778, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.1304, 0.0000, 0.0672, 0.1480 }, -0.3333, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.2806, 0.9031, 0.0672, 0.0867 }, -0.2778, -0.1111, 0.9444 },
    { (mgp_rectf){ 0.7154, 0.7908, 0.0870, 0.1122 }, -0.2778, 0.0000, 1.1667 },
    { (mgp_rectf){ 0.3478, 0.9031, 0.0553, 0.0816 }, -0.2222, 0.5000, 0.8333 },
    { (mgp_rectf){ 0.6047, 0.9031, 0.0672, 0.0714 }, -0.3333, 0.2778, 0.8889 },
    { (mgp_rectf){ 0.5494, 0.9031, 0.0553, 0.0714 }, -0.2222, 0.5000, 0.8333 },
    { (mgp_rectf){ 0.0000, 0.6633, 0.0751, 0.1276 }, -0.3333, -0.1111, 0.8333 },
    { (mgp_rectf){ 0.7628, 0.5357, 0.0830, 0.1276 }, -0.3333, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.0553, 0.5357, 0.0672, 0.1276 }, -0.2222, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.1225, 0.5357, 0.0830, 0.1276 }, -0.3333, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.2055, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.2846, 0.5357, 0.0830, 0.1276 }, -0.3333, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.3676, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.4466, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.5257, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.6047, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.6838, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.6601, 0.7908, 0.0553, 0.1122 }, -0.2222, 0.0556, 0.8333 },
    { (mgp_rectf){ 0.4348, 0.6633, 0.0553, 0.1224 }, -0.2222, 0.0556, 0.8333 },
    { (mgp_rectf){ 0.8024, 0.7908, 0.0830, 0.1071 }, -0.2778, 0.0000, 1.1667 },
    { (mgp_rectf){ 0.0751, 0.9031, 0.0830, 0.0918 }, -0.2778, 0.0556, 1.1667 },
    { (mgp_rectf){ 0.8854, 0.7908, 0.0830, 0.1071 }, -0.2778, 0.0000, 1.1667 },
    { (mgp_rectf){ 0.9012, 0.5357, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.5217, 0.0000, 0.1146, 0.1480 }, -0.2778, -0.1111, 1.5556 },
    { (mgp_rectf){ 0.2332, 0.1480, 0.1028, 0.1276 }, -0.3889, -0.1111, 1.1667 },
    { (mgp_rectf){ 0.3360, 0.1480, 0.0870, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.4229, 0.1480, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.5138, 0.1480, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.6047, 0.1480, 0.0870, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.6917, 0.1480, 0.0830, 0.1276 }, -0.2778, -0.1111, 1.1667 },
    { (mgp_rectf){ 0.7747, 0.1480, 0.0949, 0.1276 }, -0.2778, -0.1111, 1.3333 },
    { (mgp_rectf){ 0.8696, 0.1480, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.0000, 0.2806, 0.0553, 0.1276 }, -0.2778, -0.1111, 0.7778 },
    { (mgp_rectf){ 0.0553, 0.2806, 0.0791, 0.1276 }, -0.3333, -0.1111, 1.0556 },
    { (mgp_rectf){ 0.1344, 0.2806, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.2253, 0.2806, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.3043, 0.2806, 0.0988, 0.1276 }, -0.2778, -0.1111, 1.3889 },
    { (mgp_rectf){ 0.4032, 0.2806, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.4941, 0.2806, 0.0949, 0.1276 }, -0.2778, -0.1111, 1.3333 },
    { (mgp_rectf){ 0.5889, 0.2806, 0.0870, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.7194, 0.0000, 0.0949, 0.1327 }, -0.2778, -0.1111, 1.3333 },
    { (mgp_rectf){ 0.6759, 0.2806, 0.0949, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.7708, 0.2806, 0.0870, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.8577, 0.2806, 0.0870, 0.1276 }, -0.2778, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.0000, 0.4082, 0.0909, 0.1276 }, -0.2778, -0.1111, 1.2778 },
    { (mgp_rectf){ 0.0909, 0.4082, 0.0988, 0.1276 }, -0.3889, -0.1111, 1.1667 },
    { (mgp_rectf){ 0.1897, 0.4082, 0.1146, 0.1276 }, -0.3333, -0.1111, 1.5000 },
    { (mgp_rectf){ 0.3043, 0.4082, 0.0909, 0.1276 }, -0.3333, -0.1111, 1.1667 },
    { (mgp_rectf){ 0.3953, 0.4082, 0.0949, 0.1276 }, -0.3333, -0.1111, 1.2222 },
    { (mgp_rectf){ 0.4901, 0.4082, 0.0870, 0.1276 }, -0.3333, -0.1111, 1.1667 },
    { (mgp_rectf){ 0.1976, 0.0000, 0.0632, 0.1480 }, -0.2778, -0.1111, 0.8333 },
    { (mgp_rectf){ 0.0751, 0.6633, 0.0751, 0.1276 }, -0.3889, -0.1111, 0.8333 },
    { (mgp_rectf){ 0.2609, 0.0000, 0.0632, 0.1480 }, -0.3333, -0.1111, 0.8333 },
    { (mgp_rectf){ 0.0000, 0.9031, 0.0751, 0.0969 }, -0.3333, -0.1111, 0.9444 },
    { (mgp_rectf){ 0.6719, 0.9031, 0.0870, 0.0714 }, -0.3333, 0.7222, 1.1111 },
    { (mgp_rectf){ 0.4901, 0.9031, 0.0593, 0.0714 }, -0.2778, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.5771, 0.6633, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.5771, 0.4082, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.6561, 0.6633, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.0556 },
    { (mgp_rectf){ 0.6561, 0.4082, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.7352, 0.6633, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.7352, 0.4082, 0.0711, 0.1276 }, -0.3333, -0.1111, 0.8333 },
    { (mgp_rectf){ 0.8142, 0.0000, 0.0830, 0.1327 }, -0.3333, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.8063, 0.4082, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.1111 },
    { (mgp_rectf){ 0.9447, 0.2806, 0.0553, 0.1276 }, -0.2778, -0.1111, 0.7778 },
    { (mgp_rectf){ 0.0000, 0.0000, 0.0632, 0.1480 }, -0.3889, -0.1111, 0.7778 },
    { (mgp_rectf){ 0.8854, 0.4082, 0.0791, 0.1276 }, -0.2778, -0.1111, 1.0556 },
    { (mgp_rectf){ 0.0000, 0.5357, 0.0553, 0.1276 }, -0.2778, -0.1111, 0.7778 },
    { (mgp_rectf){ 0.8142, 0.6633, 0.0949, 0.1122 }, -0.2778, 0.0556, 1.3333 },
    { (mgp_rectf){ 0.9091, 0.6633, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.0000, 0.7908, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.8972, 0.0000, 0.0791, 0.1327 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.0000, 0.1480, 0.0791, 0.1327 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.0791, 0.7908, 0.0672, 0.1122 }, -0.2778, 0.0556, 0.8889 },
    { (mgp_rectf){ 0.1462, 0.7908, 0.0751, 0.1122 }, -0.2778, 0.0556, 1.0556 },
    { (mgp_rectf){ 0.0791, 0.1480, 0.0632, 0.1327 }, -0.3333, -0.1667, 0.8333 },
    { (mgp_rectf){ 0.2213, 0.7908, 0.0791, 0.1122 }, -0.2778, 0.0556, 1.1111 },
    { (mgp_rectf){ 0.3004, 0.7908, 0.0909, 0.1122 }, -0.3889, 0.0556, 1.0556 },
    { (mgp_rectf){ 0.3913, 0.7908, 0.1067, 0.1122 }, -0.3889, 0.0556, 1.2778 },
    { (mgp_rectf){ 0.4980, 0.7908, 0.0830, 0.1122 }, -0.3333, 0.0556, 1.0000 },
    { (mgp_rectf){ 0.1423, 0.1480, 0.0909, 0.1327 }, -0.3889, 0.0556, 1.0556 },
    { (mgp_rectf){ 0.5810, 0.7908, 0.0791, 0.1122 }, -0.3333, 0.0556, 1.0000 },
    { (mgp_rectf){ 0.3241, 0.0000, 0.0711, 0.1480 }, -0.3333, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.4664, 0.0000, 0.0553, 0.1480 }, -0.2222, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.3953, 0.0000, 0.0711, 0.1480 }, -0.3333, -0.1111, 0.8889 },
    { (mgp_rectf){ 0.4032, 0.9031, 0.0870, 0.0816 }, -0.3333, 0.1667, 1.1667 },
};

#endif // MG_PLOT_IMPL

/*
MIT License

Copyright (c) 2023 Magicalbat

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/